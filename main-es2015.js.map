{"version":3,"sources":["C:/Users/tengelhardt/source/repos/angular-tree-component/dist/angular-tree-component/fesm2015/circlon-angular-tree-component.js","./src/app/app.component.html","./src/app/examples/basic-usage/basic-usage.component.html","./src/app/fundamentals/actions/actions-demo/actions-demo.component.html","./src/app/fundamentals/actions/actions.component.html","./src/app/fundamentals/api/api-demo/api-demo.component.html","./src/app/fundamentals/api/api.component.html","./src/app/fundamentals/events/events.component.html","./src/app/fundamentals/focus/focus.component.html","./src/app/fundamentals/issues/issues.component.html","./src/app/fundamentals/nodes/nodes.component.html","./src/app/fundamentals/options/options.component.html","./src/app/fundamentals/state-binding/state-binding-demo/state-binding-demo.component.html","./src/app/fundamentals/state-binding/state-binding.component.html","./src/app/fundamentals/styling/styling.component.html","./src/app/fundamentals/templates/templates-demo/templates-demo.component.html","./src/app/fundamentals/templates/templates.component.html","./src/app/getting-started/getting-started.component.html","./src/app/layout/footer/footer.component.html","./src/app/layout/nav-item/nav-item.component.html","./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/custom-elements/code/code-example.component.ts","./src/app/custom-elements/code/code-example.module.ts","./src/app/custom-elements/code/code.component.ts","./src/app/custom-elements/code/code.module.ts","./src/app/custom-elements/code/pretty-printer.service.ts","./src/app/custom-elements/custom-elements.module.ts","./src/app/custom-elements/element-registry.ts","./src/app/custom-elements/elements-loader.ts","./src/app/custom-elements/lazy-custom-element.component.ts","./src/app/examples/basic-usage/basic-usage.component.scss","./src/app/examples/basic-usage/basic-usage.component.ts","./src/app/examples/examples.module.ts","./src/app/fundamentals/actions/actions-demo/actions-demo.component.scss","./src/app/fundamentals/actions/actions-demo/actions-demo.component.ts","./src/app/fundamentals/actions/actions.component.scss","./src/app/fundamentals/actions/actions.component.ts","./src/app/fundamentals/api/api-demo/api-demo.component.scss","./src/app/fundamentals/api/api-demo/api-demo.component.ts","./src/app/fundamentals/api/api.component.scss","./src/app/fundamentals/api/api.component.ts","./src/app/fundamentals/events/events.component.scss","./src/app/fundamentals/events/events.component.ts","./src/app/fundamentals/focus/focus.component.scss","./src/app/fundamentals/focus/focus.component.ts","./src/app/fundamentals/fundamentals.module.ts","./src/app/fundamentals/issues/issues.component.scss","./src/app/fundamentals/issues/issues.component.ts","./src/app/fundamentals/nodes/nodes.component.scss","./src/app/fundamentals/nodes/nodes.component.ts","./src/app/fundamentals/options/options.component.scss","./src/app/fundamentals/options/options.component.ts","./src/app/fundamentals/state-binding/state-binding-demo/state-binding-demo.component.scss","./src/app/fundamentals/state-binding/state-binding-demo/state-binding-demo.component.ts","./src/app/fundamentals/state-binding/state-binding.component.scss","./src/app/fundamentals/state-binding/state-binding.component.ts","./src/app/fundamentals/styling/styling.component.scss","./src/app/fundamentals/styling/styling.component.ts","./src/app/fundamentals/templates/templates-demo/templates-demo.component.scss","./src/app/fundamentals/templates/templates-demo/templates-demo.component.ts","./src/app/fundamentals/templates/templates.component.scss","./src/app/fundamentals/templates/templates.component.ts","./src/app/getting-started/getting-started.component.scss","./src/app/getting-started/getting-started.component.ts","./src/app/layout/footer/footer.component.scss","./src/app/layout/footer/footer.component.ts","./src/app/layout/layout.module.ts","./src/app/layout/nav-item/nav-item.component.scss","./src/app/layout/nav-item/nav-item.component.ts","./src/app/shared/copier.service.ts","./src/app/shared/logger.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoP;AACrM;AACkE;AACsC;;AAEvJ;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,oDAAO;AAC9B,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,gCAAgC;AAC/D;AACA;AACA;AACA,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC;AACA,WAAW,EA4BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA,sBAAsB,WAAW;AACjC,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAKV;AACD;AACA;AACA,eAAe,GAAG;AAClB;AACA,4BAA4B;AAC5B;AACA,6BAA6B,8DAAY,GAAG;AAC5C;AACA,8DAA8D,EAAE,KAAK,qDAAG;AACxE,6DAA6D,EAAE,KAAK,qDAAG;AACvE;AACA;AACA;AACA,gBAAgB;AAChB;AACA,4BAA4B,uDAAuD;AACnF;AACA,gBAAgB;AAChB;AACA,yBAAyB,iDAAiD;AAC1E;AACA,gBAAgB;AAChB;AACA,wBAAwB,4CAA4C;AACpE;AACA,gBAAgB;AAChB;AACA,mBAAmB,qCAAqC;AACxD;AACA,gBAAgB;AAChB;AACA,2BAA2B,qDAAqD;AAChF;AACA,gBAAgB;AAChB;AACA,uBAAuB,iCAAiC;AACxD;AACA,gBAAgB;AAChB;AACA,wBAAwB,uCAAuC;AAC/D;AACA,gBAAgB;AAChB;AACA,4BAA4B,sCAAsC;AAClE;AACA,gBAAgB;AAChB;AACA,yBAAyB,mCAAmC;AAC5D;AACA,gBAAgB;AAChB;AACA,wBAAwB,uCAAuC;AAC/D;AACA,gBAAgB;AAChB;AACA,+BAA+B,gDAAgD;AAC/E;AACA,gBAAgB;AAChB;AACA,4BAA4B,2FAA2F;AACvH;AACA,gBAAgB;AAChB;AACA,eAAe,2BAA2B;AAC1C;AACA,gBAAgB;AAChB;AACA,kBAAkB,4BAA4B;AAC9C;AACA,gBAAgB;AAChB;AACA,uBAAuB,iCAAiC;AACxD;AACA,gBAAgB;AAChB;AACA,uBAAuB,iFAAiF;AACxG;AACA,gBAAgB;AAChB;AACA,2BAA2B,qCAAqC;AAChE;AACA,gBAAgB;AAChB;AACA,gCAAgC,mGAAmG;AACnI;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAI,iBAAiB;AACpC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,0DAAQ;AACvB;AACA;AACA,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA,oDAAoD,yBAAyB;AAC7E,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,wCAAwC;AAC9D;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,2CAA2C;AAChE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAI;AACvB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAK;AACxB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,yBAAyB;AAChD;AACA,gBAAgB;AAChB;AACA,kBAAkB,0BAA0B;AAC5C;AACA,gBAAgB;AAChB;AACA,kBAAkB,iCAAiC;AACnD;AACA,gBAAgB;AAChB;AACA,sBAAsB,yCAAyC;AAC/D;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,+BAA+B;AAClD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sBAAsB,iCAAiC;AACvD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yCAAyC,IAAI;AAC7C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kCAAkC,IAAI;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,uDAAK;AACpB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,sDAAI;AACnB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iEAAiE,WAAW;AAC5E;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,cAAc;AACd,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,cAAc;AACd,gBAAgB;AAChB;AACA;AACA,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,gBAAgB;AAChB;AACA;AACA,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,cAAc;AACd,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE,uCAAuC,EAAE;AAC/D,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE,kDAAkD,EAAE;AAC9E;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,qDAAQ;AACpB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI,wBAAwB;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE,gDAAgD,EAAE;AACxE;AACA,wBAAwB,EAAE,8BAA8B,EAAE;AAC1D;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE,kDAAkD,EAAE;AAC9E;AACA;AACA,wBAAwB,EAAE;AAC1B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,cAAc;AACd,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE,uCAAuC,EAAE;AAC/D,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE,qCAAqC,EAAE;AAC7D,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB;AACA,+BAA+B,EAAE,4CAA4C,EAAE;AAC/E,2BAA2B,EAAE;AAC7B;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,uCAAuC,EAAE;AACzC,oBAAoB,EAAE,iDAAiD,EAAE;AACzE;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA,wBAAwB,EAAE,uBAAuB,kDAAkD;AACnG;AACA,oBAAoB,EAAE,uBAAuB,iDAAiD,EAAE,aAAa;AAC7G,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,cAAc;AACd,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,uCAAuC,EAAE;AACzC,oBAAoB,EAAE;AACtB;AACA,wBAAwB,EAAE,uBAAuB,gDAAgD,EAAE,aAAa;AAChH;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA,WAAW,EAqCV;AACD;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAK;AACpB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,sDAAI;AACnB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,eAAe,yDAAO;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,eAAe,yDAAO;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,eAAe,yDAAO;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,eAAe,yDAAO;AACtB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,0BAA0B,sDAAI,sBAAsB,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,sDAAI;AAC1B,oBAAoB;AACpB;AACA;AACA,cAAc;AACd;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,aAAa,uCAAuC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oCAAoC;AAChE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wCAAwC;AACpE,4BAA4B,4CAA4C,EAAE;AAC1E;AACA;AACA,4BAA4B,0CAA0C;AACtE,4BAA4B,8CAA8C,EAAE;AAC5E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mDAAmD,6BAA6B,mBAAmB;AACnG;AACA;AACA,4BAA4B,sCAAsC;AAClE;AACA;AACA,4BAA4B,wCAAwC;AACpE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+CAA+C,yBAAyB,mBAAmB;AAC3F,wBAAwB,iEAAiE;AACzF;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C,uBAAuB,mBAAmB;AACvF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS,MAAM;AACf;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAQ;AACpB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,iBAAiB,4DAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB,sCAAsC;AAC9D;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,sCAAsC;AAC9D;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yCAAyC;AAC1D,mBAAmB;AACnB,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uDAAuD,0CAA0C,EAAE;AAC3H;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,gEAAgE;AAChE,oDAAoD;AACpD,oDAAoD;AACpD;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,oDAAO;AACf,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB,uBAAuB;AACnG;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,4BAA4B,sDAAsD;AAClF,4BAA4B,0DAA0D,EAAE;AACxF,SAAS;AACT;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C,uBAAuB,mBAAmB;AACvF;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA,WAAW,EAwCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA,8CAA8C,wEAAkB,EAAE,iDAAiD,iCAAiC,EAAE,iDAAiD;AACvM,WAAW,EAGV;;AAED,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAO;AAChC,wBAAwB;AACxB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,YAAY,qDAAQ;AACpB,wBAAwB;AACxB;AACA;AACA,YAAY,qDAAQ;AACpB,wBAAwB;AACxB;AACA;AACA,YAAY,qDAAQ;AACpB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,qGAAqG;AACrG;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,+CAAY;AAChB;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,6CAAU;AACd;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAQ;AACZ;AACA;AACA;AACA;AACA,WAAW,EAmBV;AACD;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAQ;AACnC,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,0CAA0C,qCAAqC;AAC/E,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK;AACL;AACA,WAAW,EAoBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,mCAAmC,0DAAY;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY,0DAAQ;AACpB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAI;AAC5B,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,kBAAkB;AACvB,KAAK;AACL;AACA;AACA,uBAAuB,OAAO,0DAAY,6BAA6B,gBAAgB,IAAI;AAC3F,wBAAwB,OAAO,0DAAY,8BAA8B,gBAAgB,IAAI;AAC7F,+BAA+B,OAAO,0DAAY,qCAAqC,gBAAgB,IAAI;AAC3G,4BAA4B,OAAO,0DAAY,kCAAkC,gBAAgB,IAAI;AACrG,yBAAyB,OAAO,uDAAS,sBAAsB,gBAAgB,IAAI;AACnF,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,aAAa,OAAO,mDAAK,EAAE;AAC3B,sBAAsB,OAAO,oDAAM,EAAE;AACrC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,cAAc,OAAO,oDAAM,EAAE;AAC7B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,aAAa,OAAO,oDAAM,EAAE;AAC5B,YAAY,OAAO,oDAAM,EAAE;AAC3B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,wBAAwB,OAAO,oDAAM,EAAE;AACvC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,aAAa,OAAO,oDAAM,EAAE;AAC5B,mBAAmB,OAAO,oDAAM,EAAE;AAClC,iBAAiB,OAAO,0DAAY,wCAAwC;AAC5E,mBAAmB,OAAO,0DAAY,0CAA0C;AAChF;AACA,WAAW,EAuDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+BAA+B,+DAAiB;AAChD;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+BAA+B,+DAAiB;AAChD;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA,gCAAgC,4CAA4C;AAC5E;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qDAAqD,2CAA2C;AAChG;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+BAA+B,+DAAiB;AAChD;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+BAA+B,+DAAiB;AAChD;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA,wBAAwB,EAAE,KAAK,mDAAQ;AACvC;AACA,WAAW,EAAE;AACb,2BAA2B,EAAE,mCAAmC,2CAAQ;AACxE;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA,wBAAwB,EAAE,KAAK,qDAAU;AACzC;AACA,WAAW,EAAE;AACb,6BAA6B,EAAE,qCAAqC,6CAAU;AAC9E;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA,wBAAwB,EAAE,KAAK,uDAAY;AAC3C;AACA,WAAW,EAAE;AACb,+BAA+B,EAAE,uCAAuC,+CAAY;;AAEpF,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAQ;AACpB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,aAAa,eAAe,EAAE,MAAM,iDAAiD;AACrF,YAAY,qDAAQ;AACpB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+BAA+B,+DAAiB;AAChD;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kEAAkE;AAC5G;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+BAA+B,+DAAiB;AAChD;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C,sCAAsC,0DAAY;AAClD,uCAAuC,0DAAY;AACnD,uCAAuC,0DAAY;AACnD;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wDAAwD;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uCAAuC,wDAAwD;AAC/F;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,wDAAwD;AAC/F;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kCAAkC,wDAAwD;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,2BAA2B;AAChC,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,sBAAsB,OAAO,oDAAM,uBAAuB;AAC1D,0BAA0B,OAAO,oDAAM,+BAA+B;AACtE,2BAA2B,OAAO,oDAAM,gCAAgC;AACxE,2BAA2B,OAAO,oDAAM,gCAAgC;AACxE,qBAAqB,OAAO,mDAAK,EAAE;AACnC,cAAc,OAAO,0DAAY,+BAA+B;AAChE;AACA,WAAW,EAmDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,2BAA2B;AAChC,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,sBAAsB,OAAO,mDAAK,uBAAuB;AACzD,uBAAuB,OAAO,mDAAK,EAAE;AACrC,mBAAmB,OAAO,0DAAY,oCAAoC;AAC1E,iBAAiB,OAAO,0DAAY,sBAAsB;AAC1D;AACA,WAAW,EA8BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2EAA2E,iBAAiB;AAC5F,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uEAAuE,OAAO;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA,oBAAoB,OAAO,mDAAK,mCAAmC;AACnE,2BAA2B,OAAO,mDAAK,0CAA0C;AACjF,iBAAiB,OAAO,mDAAK,qCAAqC;AAClE,cAAc,OAAO,mDAAK,8BAA8B;AACxD;AACA,WAAW,EAiCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAY;AACtC;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEkgB;AAClgB;;;;;;;;;;;;;ACnlIA;AAAe,sqCAAumC,+BAA+B,yPAAyP,E;;;;;;;;;;;;ACA94C;AAAe,wMAAyI,E;;;;;;;;;;;;ACAxJ;AAAe,wYAAyU,E;;;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","file":"main-es2015.js","sourcesContent":["import { Directive, TemplateRef, ViewContainerRef, Input, Injectable, ɵɵdefineInjectable, Component, ViewEncapsulation, ElementRef, NgZone, EventEmitter, ContentChild, ViewChild, Output, HostListener, Renderer2, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { autorun, reaction, computed as computed$1, observable as observable$1, action as action$1 } from 'mobx';\nimport { defaultsDeep, get, omit, isNumber, some, every, first, last, compact, find, isString, isFunction, throttle, includes, pick } from 'lodash-es';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/mobx-angular/tree-mobx-autorun.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeMobxAutorunDirective {\r\n    /**\r\n     * @param {?} templateRef\r\n     * @param {?} viewContainer\r\n     */\r\n    constructor(templateRef, viewContainer) {\r\n        this.templateRef = templateRef;\r\n        this.viewContainer = viewContainer;\r\n        this.templateBindings = {};\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.view = this.viewContainer.createEmbeddedView(this.templateRef);\r\n        if (this.dispose) {\r\n            this.dispose();\r\n        }\r\n        if (this.shouldDetach()) {\r\n            this.view.detach();\r\n        }\r\n        this.autoDetect(this.view);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    shouldDetach() {\r\n        return this.treeMobxAutorun && this.treeMobxAutorun.detach;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    autoDetect(view) {\r\n        this.dispose = autorun((/**\r\n         * @return {?}\r\n         */\r\n        () => view.detectChanges()));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.dispose) {\r\n            this.dispose();\r\n        }\r\n    }\r\n}\r\nTreeMobxAutorunDirective.decorators = [\r\n    { type: Directive, args: [{ selector: '[treeMobxAutorun]' },] }\r\n];\r\n/** @nocollapse */\r\nTreeMobxAutorunDirective.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: ViewContainerRef }\r\n];\r\nTreeMobxAutorunDirective.propDecorators = {\r\n    treeMobxAutorun: [{ type: Input }]\r\n};\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    TreeMobxAutorunDirective.prototype.templateBindings;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    TreeMobxAutorunDirective.prototype.dispose;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    TreeMobxAutorunDirective.prototype.view;\r\n    /** @type {?} */\r\n    TreeMobxAutorunDirective.prototype.treeMobxAutorun;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    TreeMobxAutorunDirective.prototype.templateRef;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    TreeMobxAutorunDirective.prototype.viewContainer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/constants/keys.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst KEYS = {\r\n    LEFT: 37,\r\n    UP: 38,\r\n    RIGHT: 39,\r\n    DOWN: 40,\r\n    ENTER: 13,\r\n    SPACE: 32,\r\n    CONTEXT_MENU: 32\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/tree-options.model.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IActionHandler() { }\r\nconst ɵ0 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node && node.toggleActivated(), ɵ1 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node && node.toggleActivated(true), ɵ2 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node && node.toggleSelected(), ɵ3 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node.setIsActive(true), ɵ4 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node.setIsActive(false), ɵ5 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node.setIsSelected(true), ɵ6 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node.setIsSelected(false), ɵ7 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node.focus(), ɵ8 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node.hasChildren && node.toggleExpanded(), ɵ9 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node.expand(), ɵ10 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => node.collapse(), ɵ11 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => tree.focusDrillDown(), ɵ12 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => tree.focusDrillUp(), ɵ13 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => tree.focusNextNode(), ɵ14 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @return {?}\r\n */\r\n(tree, node, $event) => tree.focusPreviousNode(), ɵ15 = /**\r\n * @param {?} tree\r\n * @param {?} node\r\n * @param {?} $event\r\n * @param {?} __3\r\n * @return {?}\r\n */\r\n(tree, node, $event, { from, to }) => {\r\n    // default action assumes from = node, to = {parent, index}\r\n    if ($event.ctrlKey) {\r\n        tree.copyNode(from, to);\r\n    }\r\n    else {\r\n        tree.moveNode(from, to);\r\n    }\r\n};\r\n/** @type {?} */\r\nconst TREE_ACTIONS = {\r\n    TOGGLE_ACTIVE: (ɵ0),\r\n    TOGGLE_ACTIVE_MULTI: (ɵ1),\r\n    TOGGLE_SELECTED: (ɵ2),\r\n    ACTIVATE: (ɵ3),\r\n    DEACTIVATE: (ɵ4),\r\n    SELECT: (ɵ5),\r\n    DESELECT: (ɵ6),\r\n    FOCUS: (ɵ7),\r\n    TOGGLE_EXPANDED: (ɵ8),\r\n    EXPAND: (ɵ9),\r\n    COLLAPSE: (ɵ10),\r\n    DRILL_DOWN: (ɵ11),\r\n    DRILL_UP: (ɵ12),\r\n    NEXT_NODE: (ɵ13),\r\n    PREVIOUS_NODE: (ɵ14),\r\n    MOVE_NODE: (ɵ15)\r\n};\r\n/** @type {?} */\r\nconst defaultActionMapping = {\r\n    mouse: {\r\n        click: TREE_ACTIONS.TOGGLE_ACTIVE,\r\n        dblClick: null,\r\n        contextMenu: null,\r\n        expanderClick: TREE_ACTIONS.TOGGLE_EXPANDED,\r\n        checkboxClick: TREE_ACTIONS.TOGGLE_SELECTED,\r\n        drop: TREE_ACTIONS.MOVE_NODE\r\n    },\r\n    keys: {\r\n        [KEYS.RIGHT]: TREE_ACTIONS.DRILL_DOWN,\r\n        [KEYS.LEFT]: TREE_ACTIONS.DRILL_UP,\r\n        [KEYS.DOWN]: TREE_ACTIONS.NEXT_NODE,\r\n        [KEYS.UP]: TREE_ACTIONS.PREVIOUS_NODE,\r\n        [KEYS.SPACE]: TREE_ACTIONS.TOGGLE_ACTIVE,\r\n        [KEYS.ENTER]: TREE_ACTIONS.TOGGLE_ACTIVE\r\n    }\r\n};\r\n/**\r\n * @record\r\n */\r\nfunction IActionMapping() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IActionMapping.prototype.mouse;\r\n    /** @type {?|undefined} */\r\n    IActionMapping.prototype.keys;\r\n}\r\nclass TreeOptions {\r\n    /**\r\n     * @param {?=} options\r\n     */\r\n    constructor(options = {}) {\r\n        this.options = options;\r\n        this.actionMapping = defaultsDeep({}, this.options.actionMapping, defaultActionMapping);\r\n        if (options.rtl) {\r\n            this.actionMapping.keys[KEYS.RIGHT] = (/** @type {?} */ (get(options, ['actionMapping', 'keys', KEYS.RIGHT]))) || TREE_ACTIONS.DRILL_UP;\r\n            this.actionMapping.keys[KEYS.LEFT] = (/** @type {?} */ (get(options, ['actionMapping', 'keys', KEYS.LEFT]))) || TREE_ACTIONS.DRILL_DOWN;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get hasChildrenField() { return this.options.hasChildrenField || 'hasChildren'; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get childrenField() { return this.options.childrenField || 'children'; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get displayField() { return this.options.displayField || 'name'; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get idField() { return this.options.idField || 'id'; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isExpandedField() { return this.options.isExpandedField || 'isExpanded'; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get getChildren() { return this.options.getChildren; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get levelPadding() { return this.options.levelPadding || 0; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get useVirtualScroll() { return this.options.useVirtualScroll; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get animateExpand() { return this.options.animateExpand; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get animateSpeed() { return this.options.animateSpeed || 1; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get animateAcceleration() { return this.options.animateAcceleration || 1.2; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get scrollOnActivate() { return this.options.scrollOnActivate === undefined ? true : this.options.scrollOnActivate; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get rtl() { return !!this.options.rtl; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get rootId() { return this.options.rootId; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get useCheckbox() { return this.options.useCheckbox; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get useTriState() { return this.options.useTriState === undefined ? true : this.options.useTriState; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get scrollContainer() { return this.options.scrollContainer; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get allowDragoverStyling() { return this.options.allowDragoverStyling === undefined ? true : this.options.allowDragoverStyling; }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    getNodeClone(node) {\r\n        if (this.options.getNodeClone) {\r\n            return this.options.getNodeClone(node);\r\n        }\r\n        return omit(Object.assign({}, node.data), ['id']);\r\n    }\r\n    /**\r\n     * @param {?} element\r\n     * @param {?} to\r\n     * @param {?=} $event\r\n     * @return {?}\r\n     */\r\n    allowDrop(element, to, $event) {\r\n        if (this.options.allowDrop instanceof Function) {\r\n            return this.options.allowDrop(element, to, $event);\r\n        }\r\n        else {\r\n            return this.options.allowDrop === undefined ? true : this.options.allowDrop;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    allowDrag(node) {\r\n        if (this.options.allowDrag instanceof Function) {\r\n            return this.options.allowDrag(node);\r\n        }\r\n        else {\r\n            return this.options.allowDrag;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    nodeClass(node) {\r\n        return this.options.nodeClass ? this.options.nodeClass(node) : '';\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    nodeHeight(node) {\r\n        if (node.data.virtual) {\r\n            return 0;\r\n        }\r\n        /** @type {?} */\r\n        let nodeHeight = this.options.nodeHeight || 22;\r\n        if (typeof nodeHeight === 'function') {\r\n            nodeHeight = nodeHeight(node);\r\n        }\r\n        // account for drop slots:\r\n        return nodeHeight + (node.index === 0 ? 2 : 1) * this.dropSlotHeight;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get dropSlotHeight() {\r\n        return isNumber(this.options.dropSlotHeight) ? this.options.dropSlotHeight : 2;\r\n    }\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeOptions.prototype.actionMapping;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeOptions.prototype.options;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/constants/events.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst TREE_EVENTS = {\r\n    toggleExpanded: 'toggleExpanded',\r\n    activate: 'activate',\r\n    deactivate: 'deactivate',\r\n    nodeActivate: 'nodeActivate',\r\n    nodeDeactivate: 'nodeDeactivate',\r\n    select: 'select',\r\n    deselect: 'deselect',\r\n    focus: 'focus',\r\n    blur: 'blur',\r\n    initialized: 'initialized',\r\n    updateData: 'updateData',\r\n    moveNode: 'moveNode',\r\n    copyNode: 'copyNode',\r\n    event: 'event',\r\n    loadNodeChildren: 'loadNodeChildren',\r\n    changeFilter: 'changeFilter',\r\n    stateChange: 'stateChange'\r\n};\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nclass TreeNode {\r\n    /**\r\n     * @param {?} data\r\n     * @param {?} parent\r\n     * @param {?} treeModel\r\n     * @param {?} index\r\n     */\r\n    constructor(data, parent, treeModel, index) {\r\n        this.data = data;\r\n        this.parent = parent;\r\n        this.treeModel = treeModel;\r\n        this.position = 0;\r\n        this.allowDrop = (/**\r\n         * @param {?} element\r\n         * @param {?=} $event\r\n         * @return {?}\r\n         */\r\n        (element, $event) => {\r\n            return this.options.allowDrop(element, { parent: this, index: 0 }, $event);\r\n        });\r\n        this.allowDragoverStyling = (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            return this.options.allowDragoverStyling;\r\n        });\r\n        if (this.id === undefined || this.id === null) {\r\n            this.id = uuid();\r\n        } // Make sure there's a unique id without overriding existing ids to work with immutable data structures\r\n        this.index = index;\r\n        if (this.getField('children')) {\r\n            this._initChildren();\r\n        }\r\n        this.autoLoadChildren();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isHidden() { return this.treeModel.isHidden(this); }\r\n    ;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isExpanded() { return this.treeModel.isExpanded(this); }\r\n    ;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isActive() { return this.treeModel.isActive(this); }\r\n    ;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isFocused() { return this.treeModel.isNodeFocused(this); }\r\n    ;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isSelected() {\r\n        if (this.isSelectable()) {\r\n            return this.treeModel.isSelected(this);\r\n        }\r\n        else {\r\n            return some(this.children, (/**\r\n             * @param {?} node\r\n             * @return {?}\r\n             */\r\n            (node) => node.isSelected));\r\n        }\r\n    }\r\n    ;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isAllSelected() {\r\n        if (this.isSelectable()) {\r\n            return this.treeModel.isSelected(this);\r\n        }\r\n        else {\r\n            return every(this.children, (/**\r\n             * @param {?} node\r\n             * @return {?}\r\n             */\r\n            (node) => node.isAllSelected));\r\n        }\r\n    }\r\n    ;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isPartiallySelected() {\r\n        return this.isSelected && !this.isAllSelected;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get level() {\r\n        return this.parent ? this.parent.level + 1 : 0;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get path() {\r\n        return this.parent ? [...this.parent.path, this.id] : [];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get elementRef() {\r\n        throw `Element Ref is no longer supported since introducing virtual scroll\\n\r\n      You may use a template to obtain a reference to the element`;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get originalNode() { return this._originalNode; }\r\n    ;\r\n    // helper get functions:\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get hasChildren() {\r\n        return !!(this.getField('hasChildren') || (this.children && this.children.length > 0));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isCollapsed() { return !this.isExpanded; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isLeaf() { return !this.hasChildren; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isRoot() { return this.parent.data.virtual; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get realParent() { return this.isRoot ? null : this.parent; }\r\n    // proxy functions:\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get options() { return this.treeModel.options; }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    fireEvent(event) { this.treeModel.fireEvent(event); }\r\n    // field accessors:\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get displayField() {\r\n        return this.getField('display');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get id() {\r\n        return this.getField('id');\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set id(value) {\r\n        this.setField('id', value);\r\n    }\r\n    /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    getField(key) {\r\n        return this.data[this.options[`${key}Field`]];\r\n    }\r\n    /**\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setField(key, value) {\r\n        this.data[this.options[`${key}Field`]] = value;\r\n    }\r\n    // traversing:\r\n    /**\r\n     * @param {?} steps\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    _findAdjacentSibling(steps, skipHidden = false) {\r\n        /** @type {?} */\r\n        const siblings = this._getParentsChildren(skipHidden);\r\n        /** @type {?} */\r\n        const index = siblings.indexOf(this);\r\n        return siblings.length > index + steps ? siblings[index + steps] : null;\r\n    }\r\n    /**\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    findNextSibling(skipHidden = false) {\r\n        return this._findAdjacentSibling(+1, skipHidden);\r\n    }\r\n    /**\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    findPreviousSibling(skipHidden = false) {\r\n        return this._findAdjacentSibling(-1, skipHidden);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getVisibleChildren() {\r\n        return this.visibleChildren;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get visibleChildren() {\r\n        return (this.children || []).filter((/**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        (node) => !node.isHidden));\r\n    }\r\n    /**\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    getFirstChild(skipHidden = false) {\r\n        /** @type {?} */\r\n        let children = skipHidden ? this.visibleChildren : this.children;\r\n        return first(children || []);\r\n    }\r\n    /**\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    getLastChild(skipHidden = false) {\r\n        /** @type {?} */\r\n        let children = skipHidden ? this.visibleChildren : this.children;\r\n        return last(children || []);\r\n    }\r\n    /**\r\n     * @param {?=} goInside\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    findNextNode(goInside = true, skipHidden = false) {\r\n        return goInside && this.isExpanded && this.getFirstChild(skipHidden) ||\r\n            this.findNextSibling(skipHidden) ||\r\n            this.parent && this.parent.findNextNode(false, skipHidden);\r\n    }\r\n    /**\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    findPreviousNode(skipHidden = false) {\r\n        /** @type {?} */\r\n        let previousSibling = this.findPreviousSibling(skipHidden);\r\n        if (!previousSibling) {\r\n            return this.realParent;\r\n        }\r\n        return previousSibling._getLastOpenDescendant(skipHidden);\r\n    }\r\n    /**\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    _getLastOpenDescendant(skipHidden = false) {\r\n        /** @type {?} */\r\n        const lastChild = this.getLastChild(skipHidden);\r\n        return (this.isCollapsed || !lastChild)\r\n            ? this\r\n            : lastChild._getLastOpenDescendant(skipHidden);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    _getParentsChildren(skipHidden = false) {\r\n        /** @type {?} */\r\n        const children = this.parent &&\r\n            (skipHidden ? this.parent.getVisibleChildren() : this.parent.children);\r\n        return children || [];\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    getIndexInParent(skipHidden = false) {\r\n        return this._getParentsChildren(skipHidden).indexOf(this);\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    isDescendantOf(node) {\r\n        if (this === node)\r\n            return true;\r\n        else\r\n            return this.parent && this.parent.isDescendantOf(node);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getNodePadding() {\r\n        return this.options.levelPadding * (this.level - 1) + 'px';\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getClass() {\r\n        return [this.options.nodeClass(this), `tree-node-level-${this.level}`].join(' ');\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onDrop($event) {\r\n        this.mouseAction('drop', $event.event, {\r\n            from: $event.element,\r\n            to: { parent: this, index: 0, dropOnNode: true }\r\n        });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    allowDrag() {\r\n        return this.options.allowDrag(this);\r\n    }\r\n    // helper methods:\r\n    /**\r\n     * @return {?}\r\n     */\r\n    loadNodeChildren() {\r\n        if (!this.options.getChildren) {\r\n            return Promise.resolve(); // Not getChildren method - for using redux\r\n        }\r\n        return Promise.resolve(this.options.getChildren(this))\r\n            .then((/**\r\n         * @param {?} children\r\n         * @return {?}\r\n         */\r\n        (children) => {\r\n            if (children) {\r\n                this.setField('children', children);\r\n                this._initChildren();\r\n                if (this.options.useTriState && this.treeModel.isSelected(this)) {\r\n                    this.setIsSelected(true);\r\n                }\r\n                this.children.forEach((/**\r\n                 * @param {?} child\r\n                 * @return {?}\r\n                 */\r\n                (child) => {\r\n                    if (child.getField('isExpanded') && child.hasChildren) {\r\n                        child.expand();\r\n                    }\r\n                }));\r\n            }\r\n        })).then((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.fireEvent({\r\n                eventName: TREE_EVENTS.loadNodeChildren,\r\n                node: this\r\n            });\r\n        }));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @return {THIS}\r\n     */\r\n    expand() {\r\n        if (!(/** @type {?} */ (this)).isExpanded) {\r\n            (/** @type {?} */ (this)).toggleExpanded();\r\n        }\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @return {THIS}\r\n     */\r\n    collapse() {\r\n        if ((/** @type {?} */ (this)).isExpanded) {\r\n            (/** @type {?} */ (this)).toggleExpanded();\r\n        }\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    doForAll(fn) {\r\n        Promise.resolve(fn(this)).then((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (this.children) {\r\n                this.children.forEach((/**\r\n                 * @param {?} child\r\n                 * @return {?}\r\n                 */\r\n                (child) => child.doForAll(fn)));\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    expandAll() {\r\n        this.doForAll((/**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        (node) => node.expand()));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    collapseAll() {\r\n        this.doForAll((/**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        (node) => node.collapse()));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @return {THIS}\r\n     */\r\n    ensureVisible() {\r\n        if ((/** @type {?} */ (this)).realParent) {\r\n            (/** @type {?} */ (this)).realParent.expand();\r\n            (/** @type {?} */ (this)).realParent.ensureVisible();\r\n        }\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @return {THIS}\r\n     */\r\n    toggleExpanded() {\r\n        (/** @type {?} */ (this)).setIsExpanded(!(/** @type {?} */ (this)).isExpanded);\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} value\r\n     * @return {THIS}\r\n     */\r\n    setIsExpanded(value) {\r\n        if ((/** @type {?} */ (this)).hasChildren) {\r\n            (/** @type {?} */ (this)).treeModel.setExpandedNode((/** @type {?} */ (this)), value);\r\n        }\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    ;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    autoLoadChildren() {\r\n        this.handler =\r\n            reaction((/**\r\n             * @return {?}\r\n             */\r\n            () => this.isExpanded), (/**\r\n             * @param {?} isExpanded\r\n             * @return {?}\r\n             */\r\n            (isExpanded) => {\r\n                if (!this.children && this.hasChildren && isExpanded) {\r\n                    this.loadNodeChildren();\r\n                }\r\n            }), { fireImmediately: true });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    dispose() {\r\n        if (this.children) {\r\n            this.children.forEach((/**\r\n             * @param {?} child\r\n             * @return {?}\r\n             */\r\n            (child) => child.dispose()));\r\n        }\r\n        if (this.handler) {\r\n            this.handler();\r\n        }\r\n        this.parent = null;\r\n        this.children = null;\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} value\r\n     * @param {?=} multi\r\n     * @return {THIS}\r\n     */\r\n    setIsActive(value, multi = false) {\r\n        (/** @type {?} */ (this)).treeModel.setActiveNode((/** @type {?} */ (this)), value, multi);\r\n        if (value) {\r\n            (/** @type {?} */ (this)).focus((/** @type {?} */ (this)).options.scrollOnActivate);\r\n        }\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    isSelectable() {\r\n        return this.isLeaf || !this.children || !this.options.useTriState;\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?} value\r\n     * @return {THIS}\r\n     */\r\n    setIsSelected(value) {\r\n        if ((/** @type {?} */ (this)).isSelectable()) {\r\n            (/** @type {?} */ (this)).treeModel.setSelectedNode((/** @type {?} */ (this)), value);\r\n        }\r\n        else {\r\n            (/** @type {?} */ (this)).visibleChildren.forEach((/**\r\n             * @param {?} child\r\n             * @return {?}\r\n             */\r\n            (child) => child.setIsSelected(value)));\r\n        }\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @return {THIS}\r\n     */\r\n    toggleSelected() {\r\n        (/** @type {?} */ (this)).setIsSelected(!(/** @type {?} */ (this)).isSelected);\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?=} multi\r\n     * @return {THIS}\r\n     */\r\n    toggleActivated(multi = false) {\r\n        (/** @type {?} */ (this)).setIsActive(!(/** @type {?} */ (this)).isActive, multi);\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?=} multi\r\n     * @return {THIS}\r\n     */\r\n    setActiveAndVisible(multi = false) {\r\n        (/** @type {?} */ (this)).setIsActive(true, multi)\r\n            .ensureVisible();\r\n        setTimeout((/** @type {?} */ (this)).scrollIntoView.bind((/** @type {?} */ (this))));\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @param {?=} force\r\n     * @return {?}\r\n     */\r\n    scrollIntoView(force = false) {\r\n        this.treeModel.virtualScroll.scrollIntoView(this, force);\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @param {?=} scroll\r\n     * @return {THIS}\r\n     */\r\n    focus(scroll = true) {\r\n        /** @type {?} */\r\n        let previousNode = (/** @type {?} */ (this)).treeModel.getFocusedNode();\r\n        (/** @type {?} */ (this)).treeModel.setFocusedNode((/** @type {?} */ (this)));\r\n        if (scroll) {\r\n            (/** @type {?} */ (this)).scrollIntoView();\r\n        }\r\n        if (previousNode) {\r\n            (/** @type {?} */ (this)).fireEvent({ eventName: TREE_EVENTS.blur, node: previousNode });\r\n        }\r\n        (/** @type {?} */ (this)).fireEvent({ eventName: TREE_EVENTS.focus, node: (/** @type {?} */ (this)) });\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @template THIS\r\n     * @this {THIS}\r\n     * @return {THIS}\r\n     */\r\n    blur() {\r\n        /** @type {?} */\r\n        let previousNode = (/** @type {?} */ (this)).treeModel.getFocusedNode();\r\n        (/** @type {?} */ (this)).treeModel.setFocusedNode(null);\r\n        if (previousNode) {\r\n            (/** @type {?} */ (this)).fireEvent({ eventName: TREE_EVENTS.blur, node: (/** @type {?} */ (this)) });\r\n        }\r\n        return (/** @type {?} */ (this));\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setIsHidden(value) {\r\n        this.treeModel.setIsHidden(this, value);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    hide() {\r\n        this.setIsHidden(true);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    show() {\r\n        this.setIsHidden(false);\r\n    }\r\n    /**\r\n     * @param {?} actionName\r\n     * @param {?} $event\r\n     * @param {?=} data\r\n     * @return {?}\r\n     */\r\n    mouseAction(actionName, $event, data = null) {\r\n        this.treeModel.setFocus(true);\r\n        /** @type {?} */\r\n        const actionMapping = this.options.actionMapping.mouse;\r\n        /** @type {?} */\r\n        const action = actionMapping[actionName];\r\n        if (action) {\r\n            action(this.treeModel, this, $event, data);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getSelfHeight() {\r\n        return this.options.nodeHeight(this);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    _initChildren() {\r\n        this.children = this.getField('children')\r\n            .map((/**\r\n         * @param {?} c\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        (c, index) => new TreeNode(c, this, this.treeModel, index)));\r\n    }\r\n}\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isHidden\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isExpanded\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isActive\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isFocused\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isSelected\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isAllSelected\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isPartiallySelected\", null);\r\n__decorate([\r\n    observable$1,\r\n    __metadata(\"design:type\", Array)\r\n], TreeNode.prototype, \"children\", void 0);\r\n__decorate([\r\n    observable$1,\r\n    __metadata(\"design:type\", Number)\r\n], TreeNode.prototype, \"index\", void 0);\r\n__decorate([\r\n    observable$1,\r\n    __metadata(\"design:type\", Object)\r\n], TreeNode.prototype, \"position\", void 0);\r\n__decorate([\r\n    observable$1,\r\n    __metadata(\"design:type\", Number)\r\n], TreeNode.prototype, \"height\", void 0);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Number),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"level\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Array),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"path\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"visibleChildren\", null);\r\n__decorate([\r\n    action$1,\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], TreeNode.prototype, \"setIsSelected\", null);\r\n__decorate([\r\n    action$1,\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], TreeNode.prototype, \"_initChildren\", null);\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeNode.prototype.handler;\r\n    /** @type {?} */\r\n    TreeNode.prototype.children;\r\n    /** @type {?} */\r\n    TreeNode.prototype.index;\r\n    /** @type {?} */\r\n    TreeNode.prototype.position;\r\n    /** @type {?} */\r\n    TreeNode.prototype.height;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeNode.prototype._originalNode;\r\n    /** @type {?} */\r\n    TreeNode.prototype.allowDrop;\r\n    /** @type {?} */\r\n    TreeNode.prototype.allowDragoverStyling;\r\n    /** @type {?} */\r\n    TreeNode.prototype.data;\r\n    /** @type {?} */\r\n    TreeNode.prototype.parent;\r\n    /** @type {?} */\r\n    TreeNode.prototype.treeModel;\r\n    /* Skipping unhandled member: ;*/\r\n    /* Skipping unhandled member: ;*/\r\n    /* Skipping unhandled member: ;*/\r\n    /* Skipping unhandled member: ;*/\r\n    /* Skipping unhandled member: ;*/\r\n    /* Skipping unhandled member: ;*/\r\n    /* Skipping unhandled member: ;*/\r\n    /* Skipping unhandled member: ;*/\r\n}\r\n/**\r\n * @return {?}\r\n */\r\nfunction uuid() {\r\n    return Math.floor(Math.random() * 10000000000000);\r\n}\n\nvar __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$1 = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nclass TreeModel {\r\n    constructor() {\r\n        this.options = new TreeOptions();\r\n        this.eventNames = Object.keys(TREE_EVENTS);\r\n        this.expandedNodeIds = {};\r\n        this.selectedLeafNodeIds = {};\r\n        this.activeNodeIds = {};\r\n        this.hiddenNodeIds = {};\r\n        this.focusedNodeId = null;\r\n        this.firstUpdate = true;\r\n        this.subscriptions = [];\r\n    }\r\n    // events\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    fireEvent(event) {\r\n        event.treeModel = this;\r\n        this.events[event.eventName].emit(event);\r\n        this.events.event.emit(event);\r\n    }\r\n    /**\r\n     * @param {?} eventName\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    subscribe(eventName, fn) {\r\n        /** @type {?} */\r\n        const subscription = this.events[eventName].subscribe(fn);\r\n        this.subscriptions.push(subscription);\r\n    }\r\n    // getters\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getFocusedNode() {\r\n        return this.focusedNode;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getActiveNode() {\r\n        return this.activeNodes[0];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getActiveNodes() {\r\n        return this.activeNodes;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getVisibleRoots() {\r\n        return this.virtualRoot.visibleChildren;\r\n    }\r\n    /**\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    getFirstRoot(skipHidden = false) {\r\n        return first(skipHidden ? this.getVisibleRoots() : this.roots);\r\n    }\r\n    /**\r\n     * @param {?=} skipHidden\r\n     * @return {?}\r\n     */\r\n    getLastRoot(skipHidden = false) {\r\n        return last(skipHidden ? this.getVisibleRoots() : this.roots);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isFocused() {\r\n        return TreeModel.focusedTree === this;\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    isNodeFocused(node) {\r\n        return this.focusedNode === node;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    isEmptyTree() {\r\n        return this.roots && this.roots.length === 0;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get focusedNode() {\r\n        return this.focusedNodeId ? this.getNodeById(this.focusedNodeId) : null;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get expandedNodes() {\r\n        /** @type {?} */\r\n        const nodes = Object.keys(this.expandedNodeIds)\r\n            .filter((/**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        (id) => this.expandedNodeIds[id]))\r\n            .map((/**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        (id) => this.getNodeById(id)));\r\n        return compact(nodes);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get activeNodes() {\r\n        /** @type {?} */\r\n        const nodes = Object.keys(this.activeNodeIds)\r\n            .filter((/**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        (id) => this.activeNodeIds[id]))\r\n            .map((/**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        (id) => this.getNodeById(id)));\r\n        return compact(nodes);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get hiddenNodes() {\r\n        /** @type {?} */\r\n        const nodes = Object.keys(this.hiddenNodeIds)\r\n            .filter((/**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        (id) => this.hiddenNodeIds[id]))\r\n            .map((/**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        (id) => this.getNodeById(id)));\r\n        return compact(nodes);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get selectedLeafNodes() {\r\n        /** @type {?} */\r\n        const nodes = Object.keys(this.selectedLeafNodeIds)\r\n            .filter((/**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        (id) => this.selectedLeafNodeIds[id]))\r\n            .map((/**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        (id) => this.getNodeById(id)));\r\n        return compact(nodes);\r\n    }\r\n    // locating nodes\r\n    /**\r\n     * @param {?} path\r\n     * @param {?=} startNode\r\n     * @return {?}\r\n     */\r\n    getNodeByPath(path, startNode = null) {\r\n        if (!path)\r\n            return null;\r\n        startNode = startNode || this.virtualRoot;\r\n        if (path.length === 0)\r\n            return startNode;\r\n        if (!startNode.children)\r\n            return null;\r\n        /** @type {?} */\r\n        const childId = path.shift();\r\n        /** @type {?} */\r\n        const childNode = find(startNode.children, { id: childId });\r\n        if (!childNode)\r\n            return null;\r\n        return this.getNodeByPath(path, childNode);\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    getNodeById(id) {\r\n        /** @type {?} */\r\n        const idStr = id.toString();\r\n        return this.getNodeBy((/**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        (node) => node.id.toString() === idStr));\r\n    }\r\n    /**\r\n     * @param {?} predicate\r\n     * @param {?=} startNode\r\n     * @return {?}\r\n     */\r\n    getNodeBy(predicate, startNode = null) {\r\n        startNode = startNode || this.virtualRoot;\r\n        if (!startNode.children)\r\n            return null;\r\n        /** @type {?} */\r\n        const found = find(startNode.children, predicate);\r\n        if (found) { // found in children\r\n            return found;\r\n        }\r\n        else { // look in children's children\r\n            for (let child of startNode.children) {\r\n                /** @type {?} */\r\n                const foundInChildren = this.getNodeBy(predicate, child);\r\n                if (foundInChildren)\r\n                    return foundInChildren;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    isExpanded(node) {\r\n        return this.expandedNodeIds[node.id];\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    isHidden(node) {\r\n        return this.hiddenNodeIds[node.id];\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    isActive(node) {\r\n        return this.activeNodeIds[node.id];\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    isSelected(node) {\r\n        return this.selectedLeafNodeIds[node.id];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.dispose();\r\n        this.unsubscribeAll();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    dispose() {\r\n        // Dispose reactions of the replaced nodes\r\n        if (this.virtualRoot) {\r\n            this.virtualRoot.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    unsubscribeAll() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} subscription\r\n         * @return {?}\r\n         */\r\n        subscription => subscription.unsubscribe()));\r\n        this.subscriptions = [];\r\n    }\r\n    // actions\r\n    /**\r\n     * @param {?} __0\r\n     * @return {?}\r\n     */\r\n    setData({ nodes, options = null, events = null }) {\r\n        if (options) {\r\n            this.options = new TreeOptions(options);\r\n        }\r\n        if (events) {\r\n            this.events = events;\r\n        }\r\n        if (nodes) {\r\n            this.nodes = nodes;\r\n        }\r\n        this.update();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    update() {\r\n        // Rebuild tree:\r\n        /** @type {?} */\r\n        let virtualRootConfig = {\r\n            id: this.options.rootId,\r\n            virtual: true,\r\n            [this.options.childrenField]: this.nodes\r\n        };\r\n        this.dispose();\r\n        this.virtualRoot = new TreeNode(virtualRootConfig, null, this, 0);\r\n        this.roots = this.virtualRoot.children;\r\n        // Fire event:\r\n        if (this.firstUpdate) {\r\n            if (this.roots) {\r\n                this.firstUpdate = false;\r\n                this._calculateExpandedNodes();\r\n            }\r\n        }\r\n        else {\r\n            this.fireEvent({ eventName: TREE_EVENTS.updateData });\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    setFocusedNode(node) {\r\n        this.focusedNodeId = node ? node.id : null;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setFocus(value) {\r\n        TreeModel.focusedTree = value ? this : null;\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    doForAll(fn) {\r\n        this.roots.forEach((/**\r\n         * @param {?} root\r\n         * @return {?}\r\n         */\r\n        (root) => root.doForAll(fn)));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    focusNextNode() {\r\n        /** @type {?} */\r\n        let previousNode = this.getFocusedNode();\r\n        /** @type {?} */\r\n        let nextNode = previousNode ? previousNode.findNextNode(true, true) : this.getFirstRoot(true);\r\n        if (nextNode)\r\n            nextNode.focus();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    focusPreviousNode() {\r\n        /** @type {?} */\r\n        let previousNode = this.getFocusedNode();\r\n        /** @type {?} */\r\n        let nextNode = previousNode ? previousNode.findPreviousNode(true) : this.getLastRoot(true);\r\n        if (nextNode)\r\n            nextNode.focus();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    focusDrillDown() {\r\n        /** @type {?} */\r\n        let previousNode = this.getFocusedNode();\r\n        if (previousNode && previousNode.isCollapsed && previousNode.hasChildren) {\r\n            previousNode.toggleExpanded();\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            let nextNode = previousNode ? previousNode.getFirstChild(true) : this.getFirstRoot(true);\r\n            if (nextNode)\r\n                nextNode.focus();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    focusDrillUp() {\r\n        /** @type {?} */\r\n        let previousNode = this.getFocusedNode();\r\n        if (!previousNode)\r\n            return;\r\n        if (previousNode.isExpanded) {\r\n            previousNode.toggleExpanded();\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            let nextNode = previousNode.realParent;\r\n            if (nextNode)\r\n                nextNode.focus();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} value\r\n     * @param {?=} multi\r\n     * @return {?}\r\n     */\r\n    setActiveNode(node, value, multi = false) {\r\n        if (multi) {\r\n            this._setActiveNodeMulti(node, value);\r\n        }\r\n        else {\r\n            this._setActiveNodeSingle(node, value);\r\n        }\r\n        if (value) {\r\n            node.focus(this.options.scrollOnActivate);\r\n            this.fireEvent({ eventName: TREE_EVENTS.activate, node });\r\n            this.fireEvent({ eventName: TREE_EVENTS.nodeActivate, node }); // For IE11\r\n        }\r\n        else {\r\n            this.fireEvent({ eventName: TREE_EVENTS.deactivate, node });\r\n            this.fireEvent({ eventName: TREE_EVENTS.nodeDeactivate, node }); // For IE11\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setSelectedNode(node, value) {\r\n        this.selectedLeafNodeIds = Object.assign({}, this.selectedLeafNodeIds, { [node.id]: value });\r\n        if (value) {\r\n            node.focus();\r\n            this.fireEvent({ eventName: TREE_EVENTS.select, node });\r\n        }\r\n        else {\r\n            this.fireEvent({ eventName: TREE_EVENTS.deselect, node });\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setExpandedNode(node, value) {\r\n        this.expandedNodeIds = Object.assign({}, this.expandedNodeIds, { [node.id]: value });\r\n        this.fireEvent({ eventName: TREE_EVENTS.toggleExpanded, node, isExpanded: value });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    expandAll() {\r\n        this.roots.forEach((/**\r\n         * @param {?} root\r\n         * @return {?}\r\n         */\r\n        (root) => root.expandAll()));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    collapseAll() {\r\n        this.roots.forEach((/**\r\n         * @param {?} root\r\n         * @return {?}\r\n         */\r\n        (root) => root.collapseAll()));\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setIsHidden(node, value) {\r\n        this.hiddenNodeIds = Object.assign({}, this.hiddenNodeIds, { [node.id]: value });\r\n    }\r\n    /**\r\n     * @param {?} nodeIds\r\n     * @return {?}\r\n     */\r\n    setHiddenNodeIds(nodeIds) {\r\n        this.hiddenNodeIds = nodeIds.reduce((/**\r\n         * @param {?} hiddenNodeIds\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        (hiddenNodeIds, id) => Object.assign(hiddenNodeIds, {\r\n            [id]: true\r\n        })), {});\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    performKeyAction(node, $event) {\r\n        /** @type {?} */\r\n        const action = this.options.actionMapping.keys[$event.keyCode];\r\n        if (action) {\r\n            $event.preventDefault();\r\n            action(this, node, $event);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} filter\r\n     * @param {?=} autoShow\r\n     * @return {?}\r\n     */\r\n    filterNodes(filter, autoShow = true) {\r\n        /** @type {?} */\r\n        let filterFn;\r\n        if (!filter) {\r\n            return this.clearFilter();\r\n        }\r\n        // support function and string filter\r\n        if (isString(filter)) {\r\n            filterFn = (/**\r\n             * @param {?} node\r\n             * @return {?}\r\n             */\r\n            (node) => node.displayField.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n        }\r\n        else if (isFunction(filter)) {\r\n            filterFn = filter;\r\n        }\r\n        else {\r\n            console.error('Don\\'t know what to do with filter', filter);\r\n            console.error('Should be either a string or function');\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const ids = {};\r\n        this.roots.forEach((/**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        (node) => this._filterNode(ids, node, filterFn, autoShow)));\r\n        this.hiddenNodeIds = ids;\r\n        this.fireEvent({ eventName: TREE_EVENTS.changeFilter });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    clearFilter() {\r\n        this.hiddenNodeIds = {};\r\n        this.fireEvent({ eventName: TREE_EVENTS.changeFilter });\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} to\r\n     * @return {?}\r\n     */\r\n    moveNode(node, to) {\r\n        /** @type {?} */\r\n        const fromIndex = node.getIndexInParent();\r\n        /** @type {?} */\r\n        const fromParent = node.parent;\r\n        if (!this.canMoveNode(node, to, fromIndex))\r\n            return;\r\n        /** @type {?} */\r\n        const fromChildren = fromParent.getField('children');\r\n        // If node doesn't have children - create children array\r\n        if (!to.parent.getField('children')) {\r\n            to.parent.setField('children', []);\r\n        }\r\n        /** @type {?} */\r\n        const toChildren = to.parent.getField('children');\r\n        /** @type {?} */\r\n        const originalNode = fromChildren.splice(fromIndex, 1)[0];\r\n        // Compensate for index if already removed from parent:\r\n        /** @type {?} */\r\n        let toIndex = (fromParent === to.parent && to.index > fromIndex) ? to.index - 1 : to.index;\r\n        toChildren.splice(toIndex, 0, originalNode);\r\n        fromParent.treeModel.update();\r\n        if (to.parent.treeModel !== fromParent.treeModel) {\r\n            to.parent.treeModel.update();\r\n        }\r\n        this.fireEvent({\r\n            eventName: TREE_EVENTS.moveNode,\r\n            node: originalNode,\r\n            to: { parent: to.parent.data, index: toIndex },\r\n            from: { parent: fromParent.data, index: fromIndex }\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} to\r\n     * @return {?}\r\n     */\r\n    copyNode(node, to) {\r\n        /** @type {?} */\r\n        const fromIndex = node.getIndexInParent();\r\n        if (!this.canMoveNode(node, to, fromIndex))\r\n            return;\r\n        // If node doesn't have children - create children array\r\n        if (!to.parent.getField('children')) {\r\n            to.parent.setField('children', []);\r\n        }\r\n        /** @type {?} */\r\n        const toChildren = to.parent.getField('children');\r\n        /** @type {?} */\r\n        const nodeCopy = this.options.getNodeClone(node);\r\n        toChildren.splice(to.index, 0, nodeCopy);\r\n        node.treeModel.update();\r\n        if (to.parent.treeModel !== node.treeModel) {\r\n            to.parent.treeModel.update();\r\n        }\r\n        this.fireEvent({ eventName: TREE_EVENTS.copyNode, node: nodeCopy, to: { parent: to.parent.data, index: to.index } });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getState() {\r\n        return {\r\n            expandedNodeIds: this.expandedNodeIds,\r\n            selectedLeafNodeIds: this.selectedLeafNodeIds,\r\n            activeNodeIds: this.activeNodeIds,\r\n            hiddenNodeIds: this.hiddenNodeIds,\r\n            focusedNodeId: this.focusedNodeId\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    setState(state) {\r\n        if (!state)\r\n            return;\r\n        Object.assign(this, {\r\n            expandedNodeIds: state.expandedNodeIds || {},\r\n            selectedLeafNodeIds: state.selectedLeafNodeIds || {},\r\n            activeNodeIds: state.activeNodeIds || {},\r\n            hiddenNodeIds: state.hiddenNodeIds || {},\r\n            focusedNodeId: state.focusedNodeId\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    subscribeToState(fn) {\r\n        autorun((/**\r\n         * @return {?}\r\n         */\r\n        () => fn(this.getState())));\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} to\r\n     * @param {?=} fromIndex\r\n     * @return {?}\r\n     */\r\n    canMoveNode(node, to, fromIndex = undefined) {\r\n        /** @type {?} */\r\n        const fromNodeIndex = fromIndex || node.getIndexInParent();\r\n        // same node:\r\n        if (node.parent === to.parent && fromIndex === to.index) {\r\n            return false;\r\n        }\r\n        return !to.parent.isDescendantOf(node);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    calculateExpandedNodes() {\r\n        this._calculateExpandedNodes();\r\n    }\r\n    // private methods\r\n    /**\r\n     * @private\r\n     * @param {?} ids\r\n     * @param {?} node\r\n     * @param {?} filterFn\r\n     * @param {?} autoShow\r\n     * @return {?}\r\n     */\r\n    _filterNode(ids, node, filterFn, autoShow) {\r\n        // if node passes function then it's visible\r\n        /** @type {?} */\r\n        let isVisible = filterFn(node);\r\n        if (node.children) {\r\n            // if one of node's children passes filter then this node is also visible\r\n            node.children.forEach((/**\r\n             * @param {?} child\r\n             * @return {?}\r\n             */\r\n            (child) => {\r\n                if (this._filterNode(ids, child, filterFn, autoShow)) {\r\n                    isVisible = true;\r\n                }\r\n            }));\r\n        }\r\n        // mark node as hidden\r\n        if (!isVisible) {\r\n            ids[node.id] = true;\r\n        }\r\n        // auto expand parents to make sure the filtered nodes are visible\r\n        if (autoShow && isVisible) {\r\n            node.ensureVisible();\r\n        }\r\n        return isVisible;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?=} startNode\r\n     * @return {?}\r\n     */\r\n    _calculateExpandedNodes(startNode = null) {\r\n        startNode = startNode || this.virtualRoot;\r\n        if (startNode.data[this.options.isExpandedField]) {\r\n            this.expandedNodeIds = Object.assign({}, this.expandedNodeIds, { [startNode.id]: true });\r\n        }\r\n        if (startNode.children) {\r\n            startNode.children.forEach((/**\r\n             * @param {?} child\r\n             * @return {?}\r\n             */\r\n            (child) => this._calculateExpandedNodes(child)));\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} node\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    _setActiveNodeSingle(node, value) {\r\n        // Deactivate all other nodes:\r\n        this.activeNodes\r\n            .filter((/**\r\n         * @param {?} activeNode\r\n         * @return {?}\r\n         */\r\n        (activeNode) => activeNode !== node))\r\n            .forEach((/**\r\n         * @param {?} activeNode\r\n         * @return {?}\r\n         */\r\n        (activeNode) => {\r\n            this.fireEvent({ eventName: TREE_EVENTS.deactivate, node: activeNode });\r\n            this.fireEvent({ eventName: TREE_EVENTS.nodeDeactivate, node: activeNode }); // For IE11\r\n        }));\r\n        if (value) {\r\n            this.activeNodeIds = { [node.id]: true };\r\n        }\r\n        else {\r\n            this.activeNodeIds = {};\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} node\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    _setActiveNodeMulti(node, value) {\r\n        this.activeNodeIds = Object.assign({}, this.activeNodeIds, { [node.id]: value });\r\n    }\r\n}\r\nTreeModel.focusedTree = null;\r\nTreeModel.decorators = [\r\n    { type: Injectable }\r\n];\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Array)\r\n], TreeModel.prototype, \"roots\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Object)\r\n], TreeModel.prototype, \"expandedNodeIds\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Object)\r\n], TreeModel.prototype, \"selectedLeafNodeIds\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Object)\r\n], TreeModel.prototype, \"activeNodeIds\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Object)\r\n], TreeModel.prototype, \"hiddenNodeIds\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Object)\r\n], TreeModel.prototype, \"focusedNodeId\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", TreeNode)\r\n], TreeModel.prototype, \"virtualRoot\", void 0);\r\n__decorate$1([\r\n    computed$1,\r\n    __metadata$1(\"design:type\", Object),\r\n    __metadata$1(\"design:paramtypes\", [])\r\n], TreeModel.prototype, \"focusedNode\", null);\r\n__decorate$1([\r\n    computed$1,\r\n    __metadata$1(\"design:type\", Object),\r\n    __metadata$1(\"design:paramtypes\", [])\r\n], TreeModel.prototype, \"expandedNodes\", null);\r\n__decorate$1([\r\n    computed$1,\r\n    __metadata$1(\"design:type\", Object),\r\n    __metadata$1(\"design:paramtypes\", [])\r\n], TreeModel.prototype, \"activeNodes\", null);\r\n__decorate$1([\r\n    computed$1,\r\n    __metadata$1(\"design:type\", Object),\r\n    __metadata$1(\"design:paramtypes\", [])\r\n], TreeModel.prototype, \"hiddenNodes\", null);\r\n__decorate$1([\r\n    computed$1,\r\n    __metadata$1(\"design:type\", Object),\r\n    __metadata$1(\"design:paramtypes\", [])\r\n], TreeModel.prototype, \"selectedLeafNodes\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setData\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"update\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setFocusedNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setFocus\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"doForAll\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"focusNextNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"focusPreviousNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"focusDrillDown\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"focusDrillUp\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setActiveNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setSelectedNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setExpandedNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"expandAll\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"collapseAll\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setIsHidden\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setHiddenNodeIds\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"filterNodes\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"clearFilter\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"moveNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"copyNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setState\", null);\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeModel.focusedTree;\r\n    /** @type {?} */\r\n    TreeModel.prototype.options;\r\n    /** @type {?} */\r\n    TreeModel.prototype.nodes;\r\n    /** @type {?} */\r\n    TreeModel.prototype.eventNames;\r\n    /** @type {?} */\r\n    TreeModel.prototype.virtualScroll;\r\n    /** @type {?} */\r\n    TreeModel.prototype.roots;\r\n    /** @type {?} */\r\n    TreeModel.prototype.expandedNodeIds;\r\n    /** @type {?} */\r\n    TreeModel.prototype.selectedLeafNodeIds;\r\n    /** @type {?} */\r\n    TreeModel.prototype.activeNodeIds;\r\n    /** @type {?} */\r\n    TreeModel.prototype.hiddenNodeIds;\r\n    /** @type {?} */\r\n    TreeModel.prototype.focusedNodeId;\r\n    /** @type {?} */\r\n    TreeModel.prototype.virtualRoot;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeModel.prototype.firstUpdate;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeModel.prototype.events;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeModel.prototype.subscriptions;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/tree-dragged-element.model.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeDraggedElement {\r\n    constructor() {\r\n        this._draggedElement = null;\r\n    }\r\n    /**\r\n     * @param {?} draggedElement\r\n     * @return {?}\r\n     */\r\n    set(draggedElement) {\r\n        this._draggedElement = draggedElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get() {\r\n        return this._draggedElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    isDragging() {\r\n        return !!this.get();\r\n    }\r\n}\r\nTreeDraggedElement.decorators = [\r\n    { type: Injectable, args: [{\r\n                providedIn: 'root'\r\n            },] }\r\n];\r\n/** @nocollapse */ TreeDraggedElement.ɵprov = ɵɵdefineInjectable({ factory: function TreeDraggedElement_Factory() { return new TreeDraggedElement(); }, token: TreeDraggedElement, providedIn: \"root\" });\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeDraggedElement.prototype._draggedElement;\r\n}\n\nvar __decorate$2 = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$2 = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n/** @type {?} */\r\nconst Y_OFFSET = 500;\r\n// Extra pixels outside the viewport, in each direction, to render nodes in\r\n/** @type {?} */\r\nconst Y_EPSILON = 150;\r\n// Minimum pixel change required to recalculate the rendered nodes\r\nclass TreeVirtualScroll {\r\n    /**\r\n     * @param {?} treeModel\r\n     */\r\n    constructor(treeModel) {\r\n        this.treeModel = treeModel;\r\n        this.yBlocks = 0;\r\n        this.x = 0;\r\n        this.viewportHeight = null;\r\n        this.viewport = null;\r\n        treeModel.virtualScroll = this;\r\n        this._dispose = [autorun((/**\r\n             * @return {?}\r\n             */\r\n            () => this.fixScroll()))];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get y() {\r\n        return this.yBlocks * Y_EPSILON;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get totalHeight() {\r\n        return this.treeModel.virtualRoot ? this.treeModel.virtualRoot.height : 0;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    fireEvent(event) {\r\n        this.treeModel.fireEvent(event);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    init() {\r\n        /** @type {?} */\r\n        const fn = this.recalcPositions.bind(this);\r\n        fn();\r\n        this._dispose = [\r\n            ...this._dispose,\r\n            reaction((/**\r\n             * @return {?}\r\n             */\r\n            () => this.treeModel.roots), fn),\r\n            reaction((/**\r\n             * @return {?}\r\n             */\r\n            () => this.treeModel.expandedNodeIds), fn),\r\n            reaction((/**\r\n             * @return {?}\r\n             */\r\n            () => this.treeModel.hiddenNodeIds), fn)\r\n        ];\r\n        this.treeModel.subscribe(TREE_EVENTS.loadNodeChildren, fn);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    isEnabled() {\r\n        return this.treeModel.options.useVirtualScroll;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    _setYBlocks(value) {\r\n        this.yBlocks = value;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    recalcPositions() {\r\n        this.treeModel.virtualRoot.height = this._getPositionAfter(this.treeModel.getVisibleRoots(), 0);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} nodes\r\n     * @param {?} startPos\r\n     * @return {?}\r\n     */\r\n    _getPositionAfter(nodes, startPos) {\r\n        /** @type {?} */\r\n        let position = startPos;\r\n        nodes.forEach((/**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        (node) => {\r\n            node.position = position;\r\n            position = this._getPositionAfterNode(node, position);\r\n        }));\r\n        return position;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} node\r\n     * @param {?} startPos\r\n     * @return {?}\r\n     */\r\n    _getPositionAfterNode(node, startPos) {\r\n        /** @type {?} */\r\n        let position = node.getSelfHeight() + startPos;\r\n        if (node.children && node.isExpanded) { // TBD: consider loading component as well\r\n            position = this._getPositionAfter(node.visibleChildren, position);\r\n        }\r\n        node.height = position - startPos;\r\n        return position;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    clear() {\r\n        this._dispose.forEach((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        (d) => d()));\r\n    }\r\n    /**\r\n     * @param {?} viewport\r\n     * @return {?}\r\n     */\r\n    setViewport(viewport) {\r\n        Object.assign(this, {\r\n            viewport,\r\n            x: viewport.scrollLeft,\r\n            yBlocks: Math.round(viewport.scrollTop / Y_EPSILON),\r\n            viewportHeight: viewport.getBoundingClientRect ? viewport.getBoundingClientRect().height : 0\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} force\r\n     * @param {?=} scrollToMiddle\r\n     * @return {?}\r\n     */\r\n    scrollIntoView(node, force, scrollToMiddle = true) {\r\n        if (node.options.scrollContainer) {\r\n            /** @type {?} */\r\n            const scrollContainer = node.options.scrollContainer;\r\n            /** @type {?} */\r\n            const scrollContainerHeight = scrollContainer.getBoundingClientRect().height;\r\n            /** @type {?} */\r\n            const scrollContainerTop = scrollContainer.getBoundingClientRect().top;\r\n            /** @type {?} */\r\n            const nodeTop = this.viewport.getBoundingClientRect().top + node.position - scrollContainerTop;\r\n            if (force || // force scroll to node\r\n                nodeTop < scrollContainer.scrollTop || // node is above scroll container\r\n                nodeTop + node.getSelfHeight() > scrollContainer.scrollTop + scrollContainerHeight) { // node is below container\r\n                scrollContainer.scrollTop = scrollToMiddle ?\r\n                    nodeTop - scrollContainerHeight / 2 : // scroll to middle\r\n                    nodeTop; // scroll to start\r\n            }\r\n        }\r\n        else {\r\n            if (force || // force scroll to node\r\n                node.position < this.y || // node is above viewport\r\n                node.position + node.getSelfHeight() > this.y + this.viewportHeight) { // node is below viewport\r\n                if (this.viewport) {\r\n                    this.viewport.scrollTop = scrollToMiddle ?\r\n                        node.position - this.viewportHeight / 2 : // scroll to middle\r\n                        node.position; // scroll to start\r\n                    this._setYBlocks(Math.floor(this.viewport.scrollTop / Y_EPSILON));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} nodes\r\n     * @return {?}\r\n     */\r\n    getViewportNodes(nodes) {\r\n        if (!nodes)\r\n            return [];\r\n        /** @type {?} */\r\n        const visibleNodes = nodes.filter((/**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        (node) => !node.isHidden));\r\n        if (!this.isEnabled())\r\n            return visibleNodes;\r\n        if (!this.viewportHeight || !visibleNodes.length)\r\n            return [];\r\n        // When loading children async this method is called before their height and position is calculated.\r\n        // In that case firstIndex === 0 and lastIndex === visibleNodes.length - 1 (e.g. 1000),\r\n        // which means that it loops through every visibleNodes item and push them into viewportNodes array.\r\n        // We can prevent nodes from being pushed to the array and wait for the appropriate calculations to take place\r\n        /** @type {?} */\r\n        const lastVisibleNode = visibleNodes.slice(-1)[0];\r\n        if (!lastVisibleNode.height && lastVisibleNode.position === 0)\r\n            return [];\r\n        // Search for first node in the viewport using binary search\r\n        // Look for first node that starts after the beginning of the viewport (with buffer)\r\n        // Or that ends after the beginning of the viewport\r\n        /** @type {?} */\r\n        const firstIndex = binarySearch(visibleNodes, (/**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        (node) => {\r\n            return (node.position + Y_OFFSET > this.y) ||\r\n                (node.position + node.height > this.y);\r\n        }));\r\n        // Search for last node in the viewport using binary search\r\n        // Look for first node that starts after the end of the viewport (with buffer)\r\n        /** @type {?} */\r\n        const lastIndex = binarySearch(visibleNodes, (/**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        (node) => {\r\n            return node.position - Y_OFFSET > this.y + this.viewportHeight;\r\n        }), firstIndex);\r\n        /** @type {?} */\r\n        const viewportNodes = [];\r\n        for (let i = firstIndex; i <= lastIndex; i++) {\r\n            viewportNodes.push(visibleNodes[i]);\r\n        }\r\n        return viewportNodes;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    fixScroll() {\r\n        /** @type {?} */\r\n        const maxY = Math.max(0, this.totalHeight - this.viewportHeight);\r\n        if (this.y < 0)\r\n            this._setYBlocks(0);\r\n        if (this.y > maxY)\r\n            this._setYBlocks(maxY / Y_EPSILON);\r\n    }\r\n}\r\nTreeVirtualScroll.decorators = [\r\n    { type: Injectable }\r\n];\r\n/** @nocollapse */\r\nTreeVirtualScroll.ctorParameters = () => [\r\n    { type: TreeModel }\r\n];\r\n__decorate$2([\r\n    observable$1,\r\n    __metadata$2(\"design:type\", Object)\r\n], TreeVirtualScroll.prototype, \"yBlocks\", void 0);\r\n__decorate$2([\r\n    observable$1,\r\n    __metadata$2(\"design:type\", Object)\r\n], TreeVirtualScroll.prototype, \"x\", void 0);\r\n__decorate$2([\r\n    observable$1,\r\n    __metadata$2(\"design:type\", Object)\r\n], TreeVirtualScroll.prototype, \"viewportHeight\", void 0);\r\n__decorate$2([\r\n    computed$1,\r\n    __metadata$2(\"design:type\", Object),\r\n    __metadata$2(\"design:paramtypes\", [])\r\n], TreeVirtualScroll.prototype, \"y\", null);\r\n__decorate$2([\r\n    computed$1,\r\n    __metadata$2(\"design:type\", Object),\r\n    __metadata$2(\"design:paramtypes\", [])\r\n], TreeVirtualScroll.prototype, \"totalHeight\", null);\r\n__decorate$2([\r\n    action$1,\r\n    __metadata$2(\"design:type\", Function),\r\n    __metadata$2(\"design:paramtypes\", [Object]),\r\n    __metadata$2(\"design:returntype\", void 0)\r\n], TreeVirtualScroll.prototype, \"_setYBlocks\", null);\r\n__decorate$2([\r\n    action$1,\r\n    __metadata$2(\"design:type\", Function),\r\n    __metadata$2(\"design:paramtypes\", []),\r\n    __metadata$2(\"design:returntype\", void 0)\r\n], TreeVirtualScroll.prototype, \"recalcPositions\", null);\r\n__decorate$2([\r\n    action$1,\r\n    __metadata$2(\"design:type\", Function),\r\n    __metadata$2(\"design:paramtypes\", [Object]),\r\n    __metadata$2(\"design:returntype\", void 0)\r\n], TreeVirtualScroll.prototype, \"setViewport\", null);\r\n__decorate$2([\r\n    action$1,\r\n    __metadata$2(\"design:type\", Function),\r\n    __metadata$2(\"design:paramtypes\", [Object, Object, Object]),\r\n    __metadata$2(\"design:returntype\", void 0)\r\n], TreeVirtualScroll.prototype, \"scrollIntoView\", null);\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeVirtualScroll.prototype._dispose;\r\n    /** @type {?} */\r\n    TreeVirtualScroll.prototype.yBlocks;\r\n    /** @type {?} */\r\n    TreeVirtualScroll.prototype.x;\r\n    /** @type {?} */\r\n    TreeVirtualScroll.prototype.viewportHeight;\r\n    /** @type {?} */\r\n    TreeVirtualScroll.prototype.viewport;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeVirtualScroll.prototype.treeModel;\r\n}\r\n/**\r\n * @param {?} nodes\r\n * @param {?} condition\r\n * @param {?=} firstIndex\r\n * @return {?}\r\n */\r\nfunction binarySearch(nodes, condition, firstIndex = 0) {\r\n    /** @type {?} */\r\n    let index = firstIndex;\r\n    /** @type {?} */\r\n    let toIndex = nodes.length - 1;\r\n    while (index !== toIndex) {\r\n        /** @type {?} */\r\n        let midIndex = Math.floor((index + toIndex) / 2);\r\n        if (condition(nodes[midIndex])) {\r\n            toIndex = midIndex;\r\n        }\r\n        else {\r\n            if (index === midIndex)\r\n                index = toIndex;\r\n            else\r\n                index = midIndex;\r\n        }\r\n    }\r\n    return index;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/loading.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass LoadingComponent {\r\n}\r\nLoadingComponent.decorators = [\r\n    { type: Component, args: [{\r\n                encapsulation: ViewEncapsulation.None,\r\n                selector: 'tree-loading-component',\r\n                template: `\r\n    <span *ngIf=\"!template\">loading...</span>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"template\"\r\n      [ngTemplateOutletContext]=\"{ $implicit: node }\">\r\n    </ng-container>\r\n  `\r\n            }] }\r\n];\r\nLoadingComponent.propDecorators = {\r\n    template: [{ type: Input }],\r\n    node: [{ type: Input }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    LoadingComponent.prototype.template;\r\n    /** @type {?} */\r\n    LoadingComponent.prototype.node;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/tree-viewport.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeViewportComponent {\r\n    /**\r\n     * @param {?} elementRef\r\n     * @param {?} ngZone\r\n     * @param {?} virtualScroll\r\n     */\r\n    constructor(elementRef, ngZone, virtualScroll) {\r\n        this.elementRef = elementRef;\r\n        this.ngZone = ngZone;\r\n        this.virtualScroll = virtualScroll;\r\n        this.setViewport = throttle((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.virtualScroll.setViewport(this.elementRef.nativeElement);\r\n        }), 17);\r\n        this.scrollEventHandler = this.setViewport.bind(this);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.virtualScroll.init();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.setViewport();\r\n            this.virtualScroll.fireEvent({ eventName: TREE_EVENTS.initialized });\r\n        }));\r\n        /** @type {?} */\r\n        let el = this.elementRef.nativeElement;\r\n        this.ngZone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            el.addEventListener('scroll', this.scrollEventHandler);\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.virtualScroll.clear();\r\n        /** @type {?} */\r\n        let el = this.elementRef.nativeElement;\r\n        el.removeEventListener('scroll', this.scrollEventHandler);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getTotalHeight() {\r\n        return ((this.virtualScroll.isEnabled() &&\r\n            this.virtualScroll.totalHeight + 'px') ||\r\n            'auto');\r\n    }\r\n}\r\nTreeViewportComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'tree-viewport',\r\n                providers: [TreeVirtualScroll],\r\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div [style.height]=\"getTotalHeight()\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n            }] }\r\n];\r\n/** @nocollapse */\r\nTreeViewportComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: NgZone },\r\n    { type: TreeVirtualScroll }\r\n];\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeViewportComponent.prototype.setViewport;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeViewportComponent.prototype.scrollEventHandler;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeViewportComponent.prototype.elementRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeViewportComponent.prototype.ngZone;\r\n    /** @type {?} */\r\n    TreeViewportComponent.prototype.virtualScroll;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/tree.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeComponent {\r\n    /**\r\n     * @param {?} treeModel\r\n     * @param {?} treeDraggedElement\r\n     */\r\n    constructor(treeModel, treeDraggedElement) {\r\n        this.treeModel = treeModel;\r\n        this.treeDraggedElement = treeDraggedElement;\r\n        treeModel.eventNames.forEach((/**\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        (name) => this[name] = new EventEmitter()));\r\n        treeModel.subscribeToState((/**\r\n         * @param {?} state\r\n         * @return {?}\r\n         */\r\n        (state) => this.stateChange.emit(state)));\r\n    }\r\n    // Will be handled in ngOnChanges\r\n    /**\r\n     * @param {?} nodes\r\n     * @return {?}\r\n     */\r\n    set nodes(nodes) {\r\n    }\r\n    ;\r\n    /**\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    set options(options) {\r\n    }\r\n    ;\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set focused(value) {\r\n        this.treeModel.setFocus(value);\r\n    }\r\n    /**\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    set state(state) {\r\n        this.treeModel.setState(state);\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeydown($event) {\r\n        if (!this.treeModel.isFocused)\r\n            return;\r\n        if (includes(['input', 'textarea'], document.activeElement.tagName.toLowerCase()))\r\n            return;\r\n        /** @type {?} */\r\n        const focusedNode = this.treeModel.getFocusedNode();\r\n        this.treeModel.performKeyAction(focusedNode, $event);\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onMousedown($event) {\r\n        /**\r\n         * @param {?} startElement\r\n         * @param {?} nodeName\r\n         * @return {?}\r\n         */\r\n        function isOutsideClick(startElement, nodeName) {\r\n            return !startElement ? true : startElement.localName === nodeName ? false : isOutsideClick(startElement.parentElement, nodeName);\r\n        }\r\n        if (isOutsideClick($event.target, 'tree-root')) {\r\n            this.treeModel.setFocus(false);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ngOnChanges(changes) {\r\n        if (changes.options || changes.nodes) {\r\n            this.treeModel.setData({\r\n                options: changes.options && changes.options.currentValue,\r\n                nodes: changes.nodes && changes.nodes.currentValue,\r\n                events: pick(this, this.treeModel.eventNames)\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    sizeChanged() {\r\n        this.viewportComponent.setViewport();\r\n    }\r\n}\r\nTreeComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'Tree, tree-root',\r\n                providers: [TreeModel],\r\n                template: `\r\n      <tree-viewport #viewport>\r\n          <div\r\n                  class=\"angular-tree-component\"\r\n                  [class.node-dragging]=\"treeDraggedElement.isDragging()\"\r\n                  [class.angular-tree-component-rtl]=\"treeModel.options.rtl\">\r\n              <tree-node-collection\r\n                      *ngIf=\"treeModel.roots\"\r\n                      [nodes]=\"treeModel.roots\"\r\n                      [treeModel]=\"treeModel\"\r\n                      [templates]=\"{\r\n            loadingTemplate: loadingTemplate,\r\n            treeNodeTemplate: treeNodeTemplate,\r\n            treeNodeWrapperTemplate: treeNodeWrapperTemplate,\r\n            treeNodeFullTemplate: treeNodeFullTemplate\r\n          }\">\r\n              </tree-node-collection>\r\n              <tree-node-drop-slot\r\n                      class=\"empty-tree-drop-slot\"\r\n                      *ngIf=\"treeModel.isEmptyTree()\"\r\n                      [dropIndex]=\"0\"\r\n                      [node]=\"treeModel.virtualRoot\">\r\n              </tree-node-drop-slot>\r\n          </div>\r\n      </tree-viewport>\r\n  `\r\n            }] }\r\n];\r\n/** @nocollapse */\r\nTreeComponent.ctorParameters = () => [\r\n    { type: TreeModel },\r\n    { type: TreeDraggedElement }\r\n];\r\nTreeComponent.propDecorators = {\r\n    loadingTemplate: [{ type: ContentChild, args: ['loadingTemplate', { static: false },] }],\r\n    treeNodeTemplate: [{ type: ContentChild, args: ['treeNodeTemplate', { static: false },] }],\r\n    treeNodeWrapperTemplate: [{ type: ContentChild, args: ['treeNodeWrapperTemplate', { static: false },] }],\r\n    treeNodeFullTemplate: [{ type: ContentChild, args: ['treeNodeFullTemplate', { static: false },] }],\r\n    viewportComponent: [{ type: ViewChild, args: ['viewport', { static: false },] }],\r\n    nodes: [{ type: Input }],\r\n    options: [{ type: Input }],\r\n    focused: [{ type: Input }],\r\n    state: [{ type: Input }],\r\n    toggleExpanded: [{ type: Output }],\r\n    activate: [{ type: Output }],\r\n    deactivate: [{ type: Output }],\r\n    nodeActivate: [{ type: Output }],\r\n    nodeDeactivate: [{ type: Output }],\r\n    select: [{ type: Output }],\r\n    deselect: [{ type: Output }],\r\n    focus: [{ type: Output }],\r\n    blur: [{ type: Output }],\r\n    updateData: [{ type: Output }],\r\n    initialized: [{ type: Output }],\r\n    moveNode: [{ type: Output }],\r\n    copyNode: [{ type: Output }],\r\n    loadNodeChildren: [{ type: Output }],\r\n    changeFilter: [{ type: Output }],\r\n    event: [{ type: Output }],\r\n    stateChange: [{ type: Output }],\r\n    onKeydown: [{ type: HostListener, args: ['body: keydown', ['$event'],] }],\r\n    onMousedown: [{ type: HostListener, args: ['body: mousedown', ['$event'],] }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeComponent.prototype._nodes;\r\n    /** @type {?} */\r\n    TreeComponent.prototype._options;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.loadingTemplate;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.treeNodeTemplate;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.treeNodeWrapperTemplate;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.treeNodeFullTemplate;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.viewportComponent;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.toggleExpanded;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.activate;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.deactivate;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.nodeActivate;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.nodeDeactivate;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.select;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.deselect;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.focus;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.blur;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.updateData;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.initialized;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.moveNode;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.copyNode;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.loadNodeChildren;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.changeFilter;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.event;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.stateChange;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.treeModel;\r\n    /** @type {?} */\r\n    TreeComponent.prototype.treeDraggedElement;\r\n    /* Skipping unhandled member: ;*/\r\n    /* Skipping unhandled member: ;*/\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/tree-node.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeNodeComponent {\r\n}\r\nTreeNodeComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'TreeNode, tree-node',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div\r\n        *ngIf=\"!templates.treeNodeFullTemplate\"\r\n        [class]=\"node.getClass()\"\r\n        [class.tree-node]=\"true\"\r\n        [class.tree-node-expanded]=\"node.isExpanded && node.hasChildren\"\r\n        [class.tree-node-collapsed]=\"node.isCollapsed && node.hasChildren\"\r\n        [class.tree-node-leaf]=\"node.isLeaf\"\r\n        [class.tree-node-active]=\"node.isActive\"\r\n        [class.tree-node-focused]=\"node.isFocused\"\r\n      >\r\n        <tree-node-drop-slot\r\n          *ngIf=\"index === 0\"\r\n          [dropIndex]=\"node.index\"\r\n          [node]=\"node.parent\"\r\n        ></tree-node-drop-slot>\r\n\r\n        <tree-node-wrapper\r\n          [node]=\"node\"\r\n          [index]=\"index\"\r\n          [templates]=\"templates\"\r\n        ></tree-node-wrapper>\r\n\r\n        <tree-node-children\r\n          [node]=\"node\"\r\n          [templates]=\"templates\"\r\n        ></tree-node-children>\r\n        <tree-node-drop-slot\r\n          [dropIndex]=\"node.index + 1\"\r\n          [node]=\"node.parent\"\r\n        ></tree-node-drop-slot>\r\n      </div>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"templates.treeNodeFullTemplate\"\r\n        [ngTemplateOutletContext]=\"{\r\n          $implicit: node,\r\n          node: node,\r\n          index: index,\r\n          templates: templates\r\n        }\"\r\n      >\r\n      </ng-container>\r\n    </ng-container>\r\n  `\r\n            }] }\r\n];\r\nTreeNodeComponent.propDecorators = {\r\n    node: [{ type: Input }],\r\n    index: [{ type: Input }],\r\n    templates: [{ type: Input }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeNodeComponent.prototype.node;\r\n    /** @type {?} */\r\n    TreeNodeComponent.prototype.index;\r\n    /** @type {?} */\r\n    TreeNodeComponent.prototype.templates;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/tree-node-content.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeNodeContent {\r\n}\r\nTreeNodeContent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'tree-node-content',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n  <span *ngIf=\"!template\">{{ node.displayField }}</span>\r\n  <ng-container\r\n    [ngTemplateOutlet]=\"template\"\r\n    [ngTemplateOutletContext]=\"{ $implicit: node, node: node, index: index }\">\r\n  </ng-container>`\r\n            }] }\r\n];\r\nTreeNodeContent.propDecorators = {\r\n    node: [{ type: Input }],\r\n    index: [{ type: Input }],\r\n    template: [{ type: Input }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeNodeContent.prototype.node;\r\n    /** @type {?} */\r\n    TreeNodeContent.prototype.index;\r\n    /** @type {?} */\r\n    TreeNodeContent.prototype.template;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/tree-node-drop-slot.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeNodeDropSlot {\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onDrop($event) {\r\n        this.node.mouseAction('drop', $event.event, {\r\n            from: $event.element,\r\n            to: { parent: this.node, index: this.dropIndex }\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} element\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    allowDrop(element, $event) {\r\n        return this.node.options.allowDrop(element, { parent: this.node, index: this.dropIndex }, $event);\r\n    }\r\n}\r\nTreeNodeDropSlot.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'TreeNodeDropSlot, tree-node-drop-slot',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <div\r\n      class=\"node-drop-slot\"\r\n      (treeDrop)=\"onDrop($event)\"\r\n      [treeAllowDrop]=\"allowDrop.bind(this)\"\r\n      [allowDragoverStyling]=\"true\">\r\n    </div>\r\n  `\r\n            }] }\r\n];\r\nTreeNodeDropSlot.propDecorators = {\r\n    node: [{ type: Input }],\r\n    dropIndex: [{ type: Input }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeNodeDropSlot.prototype.node;\r\n    /** @type {?} */\r\n    TreeNodeDropSlot.prototype.dropIndex;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/tree-node-expander.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeNodeExpanderComponent {\r\n}\r\nTreeNodeExpanderComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'tree-node-expander',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <span\r\n        *ngIf=\"node.hasChildren\"\r\n        [class.toggle-children-wrapper-expanded]=\"node.isExpanded\"\r\n        [class.toggle-children-wrapper-collapsed]=\"node.isCollapsed\"\r\n        class=\"toggle-children-wrapper\"\r\n        (click)=\"node.mouseAction('expanderClick', $event)\"\r\n      >\r\n        <span class=\"toggle-children\"></span>\r\n      </span>\r\n      <span *ngIf=\"!node.hasChildren\" class=\"toggle-children-placeholder\">\r\n      </span>\r\n    </ng-container>\r\n  `\r\n            }] }\r\n];\r\nTreeNodeExpanderComponent.propDecorators = {\r\n    node: [{ type: Input }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeNodeExpanderComponent.prototype.node;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/tree-node-children.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeNodeChildrenComponent {\r\n}\r\nTreeNodeChildrenComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'tree-node-children',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div\r\n        [class.tree-children]=\"true\"\r\n        [class.tree-children-no-padding]=\"node.options.levelPadding\"\r\n        *treeAnimateOpen=\"\r\n          node.isExpanded;\r\n          speed: node.options.animateSpeed;\r\n          acceleration: node.options.animateAcceleration;\r\n          enabled: node.options.animateExpand\r\n        \"\r\n      >\r\n        <tree-node-collection\r\n          *ngIf=\"node.children\"\r\n          [nodes]=\"node.children\"\r\n          [templates]=\"templates\"\r\n          [treeModel]=\"node.treeModel\"\r\n        >\r\n        </tree-node-collection>\r\n        <tree-loading-component\r\n          [style.padding-left]=\"node.getNodePadding()\"\r\n          class=\"tree-node-loading\"\r\n          *ngIf=\"!node.children\"\r\n          [template]=\"templates.loadingTemplate\"\r\n          [node]=\"node\"\r\n        ></tree-loading-component>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n            }] }\r\n];\r\nTreeNodeChildrenComponent.propDecorators = {\r\n    node: [{ type: Input }],\r\n    templates: [{ type: Input }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeNodeChildrenComponent.prototype.node;\r\n    /** @type {?} */\r\n    TreeNodeChildrenComponent.prototype.templates;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/mobx-angular/mobx-proxy.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// Re-export mobx operators to be able to use inside components with AOT:\r\n/**\r\n * @param {...?} args\r\n * @return {?}\r\n */\r\nfunction actionInternal(...args) {\r\n    return ((/** @type {?} */ (action$1)))(...args);\r\n}\r\n/** @type {?} */\r\nconst action = (/** @type {?} */ (Object.assign(actionInternal, action$1)));\r\n/**\r\n * @param {...?} args\r\n * @return {?}\r\n */\r\nfunction computedInternal(...args) {\r\n    return ((/** @type {?} */ (computed$1)))(...args);\r\n}\r\n/** @type {?} */\r\nconst computed = (/** @type {?} */ (Object.assign(computedInternal, computed$1)));\r\n/**\r\n * @param {...?} args\r\n * @return {?}\r\n */\r\nfunction observableInternal(...args) {\r\n    return ((/** @type {?} */ (observable$1)))(...args);\r\n}\r\n/** @type {?} */\r\nconst observable = (/** @type {?} */ (Object.assign(observableInternal, observable$1)));\n\nvar __decorate$3 = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$3 = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nclass TreeNodeCollectionComponent {\r\n    constructor() {\r\n        this._dispose = [];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get nodes() {\r\n        return this._nodes;\r\n    }\r\n    /**\r\n     * @param {?} nodes\r\n     * @return {?}\r\n     */\r\n    set nodes(nodes) {\r\n        this.setNodes(nodes);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get marginTop() {\r\n        /** @type {?} */\r\n        const firstNode = this.viewportNodes && this.viewportNodes.length && this.viewportNodes[0];\r\n        /** @type {?} */\r\n        const relativePosition = firstNode && firstNode.parent\r\n            ? firstNode.position -\r\n                firstNode.parent.position -\r\n                firstNode.parent.getSelfHeight()\r\n            : 0;\r\n        return `${relativePosition}px`;\r\n    }\r\n    /**\r\n     * @param {?} nodes\r\n     * @return {?}\r\n     */\r\n    setNodes(nodes) {\r\n        this._nodes = nodes;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.virtualScroll = this.treeModel.virtualScroll;\r\n        this._dispose = [\r\n            // return node indexes so we can compare structurally,\r\n            reaction((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                return this.virtualScroll\r\n                    .getViewportNodes(this.nodes)\r\n                    .map((/**\r\n                 * @param {?} n\r\n                 * @return {?}\r\n                 */\r\n                n => n.index));\r\n            }), (/**\r\n             * @param {?} nodeIndexes\r\n             * @return {?}\r\n             */\r\n            nodeIndexes => {\r\n                this.viewportNodes = nodeIndexes.map((/**\r\n                 * @param {?} i\r\n                 * @return {?}\r\n                 */\r\n                i => this.nodes[i]));\r\n            }), (/** @type {?} */ ({ compareStructural: true, fireImmediately: true }))),\r\n            reaction((/**\r\n             * @return {?}\r\n             */\r\n            () => this.nodes), (/**\r\n             * @param {?} nodes\r\n             * @return {?}\r\n             */\r\n            nodes => {\r\n                this.viewportNodes = this.virtualScroll.getViewportNodes(nodes);\r\n            }))\r\n        ];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this._dispose.forEach((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        d => d()));\r\n    }\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    trackNode(index, node) {\r\n        return node.id;\r\n    }\r\n}\r\nTreeNodeCollectionComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'tree-node-collection',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div [style.margin-top]=\"marginTop\">\r\n        <tree-node\r\n          *ngFor=\"let node of viewportNodes; let i = index; trackBy: trackNode\"\r\n          [node]=\"node\"\r\n          [index]=\"i\"\r\n          [templates]=\"templates\"\r\n        >\r\n        </tree-node>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n            }] }\r\n];\r\nTreeNodeCollectionComponent.propDecorators = {\r\n    nodes: [{ type: Input }],\r\n    treeModel: [{ type: Input }],\r\n    templates: [{ type: Input }]\r\n};\r\n__decorate$3([\r\n    observable,\r\n    __metadata$3(\"design:type\", Object)\r\n], TreeNodeCollectionComponent.prototype, \"_nodes\", void 0);\r\n__decorate$3([\r\n    observable,\r\n    __metadata$3(\"design:type\", Array)\r\n], TreeNodeCollectionComponent.prototype, \"viewportNodes\", void 0);\r\n__decorate$3([\r\n    computed,\r\n    __metadata$3(\"design:type\", String),\r\n    __metadata$3(\"design:paramtypes\", [])\r\n], TreeNodeCollectionComponent.prototype, \"marginTop\", null);\r\n__decorate$3([\r\n    action,\r\n    __metadata$3(\"design:type\", Function),\r\n    __metadata$3(\"design:paramtypes\", [Object]),\r\n    __metadata$3(\"design:returntype\", void 0)\r\n], TreeNodeCollectionComponent.prototype, \"setNodes\", null);\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeNodeCollectionComponent.prototype.treeModel;\r\n    /** @type {?} */\r\n    TreeNodeCollectionComponent.prototype._nodes;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeNodeCollectionComponent.prototype.virtualScroll;\r\n    /** @type {?} */\r\n    TreeNodeCollectionComponent.prototype.templates;\r\n    /** @type {?} */\r\n    TreeNodeCollectionComponent.prototype.viewportNodes;\r\n    /** @type {?} */\r\n    TreeNodeCollectionComponent.prototype._dispose;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/tree-node-wrapper.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeNodeWrapperComponent {\r\n    constructor() {\r\n    }\r\n}\r\nTreeNodeWrapperComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'tree-node-wrapper',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n      <div *ngIf=\"!templates.treeNodeWrapperTemplate\" class=\"node-wrapper\" [style.padding-left]=\"node.getNodePadding()\">\r\n          <tree-node-checkbox *ngIf=\"node.options.useCheckbox\" [node]=\"node\"></tree-node-checkbox>\r\n          <tree-node-expander [node]=\"node\"></tree-node-expander>\r\n          <div class=\"node-content-wrapper\"\r\n               [class.node-content-wrapper-active]=\"node.isActive\"\r\n               [class.node-content-wrapper-focused]=\"node.isFocused\"\r\n               (click)=\"node.mouseAction('click', $event)\"\r\n               (dblclick)=\"node.mouseAction('dblClick', $event)\"\r\n               (mouseover)=\"node.mouseAction('mouseOver', $event)\"\r\n               (mouseout)=\"node.mouseAction('mouseOut', $event)\"\r\n               (contextmenu)=\"node.mouseAction('contextMenu', $event)\"\r\n               (treeDrop)=\"node.onDrop($event)\"\r\n               (treeDropDragOver)=\"node.mouseAction('dragOver', $event)\"\r\n               (treeDropDragLeave)=\"node.mouseAction('dragLeave', $event)\"\r\n               (treeDropDragEnter)=\"node.mouseAction('dragEnter', $event)\"\r\n               [treeAllowDrop]=\"node.allowDrop\"\r\n               [allowDragoverStyling]=\"node.allowDragoverStyling()\"\r\n               [treeDrag]=\"node\"\r\n               [treeDragEnabled]=\"node.allowDrag()\">\r\n\r\n              <tree-node-content [node]=\"node\" [index]=\"index\" [template]=\"templates.treeNodeTemplate\">\r\n              </tree-node-content>\r\n          </div>\r\n      </div>\r\n      <ng-container\r\n              [ngTemplateOutlet]=\"templates.treeNodeWrapperTemplate\"\r\n              [ngTemplateOutletContext]=\"{ $implicit: node, node: node, index: index, templates: templates }\">\r\n      </ng-container>\r\n  `\r\n            }] }\r\n];\r\n/** @nocollapse */\r\nTreeNodeWrapperComponent.ctorParameters = () => [];\r\nTreeNodeWrapperComponent.propDecorators = {\r\n    node: [{ type: Input }],\r\n    index: [{ type: Input }],\r\n    templates: [{ type: Input }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeNodeWrapperComponent.prototype.node;\r\n    /** @type {?} */\r\n    TreeNodeWrapperComponent.prototype.index;\r\n    /** @type {?} */\r\n    TreeNodeWrapperComponent.prototype.templates;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/tree-node-checkbox.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeNodeCheckboxComponent {\r\n}\r\nTreeNodeCheckboxComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'tree-node-checkbox',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <input\r\n        class=\"tree-node-checkbox\"\r\n        type=\"checkbox\"\r\n        (click)=\"node.mouseAction('checkboxClick', $event)\"\r\n        [checked]=\"node.isSelected\"\r\n        [indeterminate]=\"node.isPartiallySelected\"\r\n      />\r\n    </ng-container>\r\n  `\r\n            }] }\r\n];\r\nTreeNodeCheckboxComponent.propDecorators = {\r\n    node: [{ type: Input }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeNodeCheckboxComponent.prototype.node;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/directives/tree-drop.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst DRAG_OVER_CLASS = 'is-dragging-over';\r\n/** @type {?} */\r\nconst DRAG_DISABLED_CLASS = 'is-dragging-over-disabled';\r\nclass TreeDropDirective {\r\n    /**\r\n     * @param {?} el\r\n     * @param {?} renderer\r\n     * @param {?} treeDraggedElement\r\n     * @param {?} ngZone\r\n     */\r\n    constructor(el, renderer, treeDraggedElement, ngZone) {\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.treeDraggedElement = treeDraggedElement;\r\n        this.ngZone = ngZone;\r\n        this.allowDragoverStyling = true;\r\n        this.onDropCallback = new EventEmitter();\r\n        this.onDragOverCallback = new EventEmitter();\r\n        this.onDragLeaveCallback = new EventEmitter();\r\n        this.onDragEnterCallback = new EventEmitter();\r\n        this._allowDrop = (/**\r\n         * @param {?} element\r\n         * @param {?} $event\r\n         * @return {?}\r\n         */\r\n        (element, $event) => true);\r\n        this.dragOverEventHandler = this.onDragOver.bind(this);\r\n        this.dragEnterEventHandler = this.onDragEnter.bind(this);\r\n        this.dragLeaveEventHandler = this.onDragLeave.bind(this);\r\n    }\r\n    /**\r\n     * @param {?} allowDrop\r\n     * @return {?}\r\n     */\r\n    set treeAllowDrop(allowDrop) {\r\n        if (allowDrop instanceof Function) {\r\n            this._allowDrop = allowDrop;\r\n        }\r\n        else\r\n            this._allowDrop = (/**\r\n             * @param {?} element\r\n             * @param {?} $event\r\n             * @return {?}\r\n             */\r\n            (element, $event) => allowDrop);\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    allowDrop($event) {\r\n        return this._allowDrop(this.treeDraggedElement.get(), $event);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        /** @type {?} */\r\n        let el = this.el.nativeElement;\r\n        this.ngZone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            el.addEventListener('dragover', this.dragOverEventHandler);\r\n            el.addEventListener('dragenter', this.dragEnterEventHandler);\r\n            el.addEventListener('dragleave', this.dragLeaveEventHandler);\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        /** @type {?} */\r\n        let el = this.el.nativeElement;\r\n        el.removeEventListener('dragover', this.dragOverEventHandler);\r\n        el.removeEventListener('dragenter', this.dragEnterEventHandler);\r\n        el.removeEventListener('dragleave', this.dragLeaveEventHandler);\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onDragOver($event) {\r\n        if (!this.allowDrop($event)) {\r\n            if (this.allowDragoverStyling) {\r\n                return this.addDisabledClass();\r\n            }\r\n            return;\r\n        }\r\n        this.onDragOverCallback.emit({ event: $event, element: this.treeDraggedElement.get() });\r\n        $event.preventDefault();\r\n        if (this.allowDragoverStyling) {\r\n            this.addClass();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onDragEnter($event) {\r\n        if (!this.allowDrop($event))\r\n            return;\r\n        $event.preventDefault();\r\n        this.onDragEnterCallback.emit({ event: $event, element: this.treeDraggedElement.get() });\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onDragLeave($event) {\r\n        if (!this.allowDrop($event)) {\r\n            if (this.allowDragoverStyling) {\r\n                return this.removeDisabledClass();\r\n            }\r\n            return;\r\n        }\r\n        this.onDragLeaveCallback.emit({ event: $event, element: this.treeDraggedElement.get() });\r\n        if (this.allowDragoverStyling) {\r\n            this.removeClass();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onDrop($event) {\r\n        if (!this.allowDrop($event))\r\n            return;\r\n        $event.preventDefault();\r\n        this.onDropCallback.emit({ event: $event, element: this.treeDraggedElement.get() });\r\n        if (this.allowDragoverStyling) {\r\n            this.removeClass();\r\n        }\r\n        this.treeDraggedElement.set(null);\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    addClass() {\r\n        this.renderer.addClass(this.el.nativeElement, DRAG_OVER_CLASS);\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    removeClass() {\r\n        this.renderer.removeClass(this.el.nativeElement, DRAG_OVER_CLASS);\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    addDisabledClass() {\r\n        this.renderer.addClass(this.el.nativeElement, DRAG_DISABLED_CLASS);\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    removeDisabledClass() {\r\n        this.renderer.removeClass(this.el.nativeElement, DRAG_DISABLED_CLASS);\r\n    }\r\n}\r\nTreeDropDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[treeDrop]'\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nTreeDropDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 },\r\n    { type: TreeDraggedElement },\r\n    { type: NgZone }\r\n];\r\nTreeDropDirective.propDecorators = {\r\n    allowDragoverStyling: [{ type: Input }],\r\n    onDropCallback: [{ type: Output, args: ['treeDrop',] }],\r\n    onDragOverCallback: [{ type: Output, args: ['treeDropDragOver',] }],\r\n    onDragLeaveCallback: [{ type: Output, args: ['treeDropDragLeave',] }],\r\n    onDragEnterCallback: [{ type: Output, args: ['treeDropDragEnter',] }],\r\n    treeAllowDrop: [{ type: Input }],\r\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeDropDirective.prototype.allowDragoverStyling;\r\n    /** @type {?} */\r\n    TreeDropDirective.prototype.onDropCallback;\r\n    /** @type {?} */\r\n    TreeDropDirective.prototype.onDragOverCallback;\r\n    /** @type {?} */\r\n    TreeDropDirective.prototype.onDragLeaveCallback;\r\n    /** @type {?} */\r\n    TreeDropDirective.prototype.onDragEnterCallback;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDropDirective.prototype.dragOverEventHandler;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDropDirective.prototype.dragEnterEventHandler;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDropDirective.prototype.dragLeaveEventHandler;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDropDirective.prototype._allowDrop;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDropDirective.prototype.el;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDropDirective.prototype.renderer;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDropDirective.prototype.treeDraggedElement;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDropDirective.prototype.ngZone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/directives/tree-drag.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst DRAG_OVER_CLASS$1 = 'is-dragging-over';\r\nclass TreeDragDirective {\r\n    /**\r\n     * @param {?} el\r\n     * @param {?} renderer\r\n     * @param {?} treeDraggedElement\r\n     * @param {?} ngZone\r\n     */\r\n    constructor(el, renderer, treeDraggedElement, ngZone) {\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.treeDraggedElement = treeDraggedElement;\r\n        this.ngZone = ngZone;\r\n        this.dragEventHandler = this.onDrag.bind(this);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        /** @type {?} */\r\n        let el = this.el.nativeElement;\r\n        this.ngZone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            el.addEventListener('drag', this.dragEventHandler);\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngDoCheck() {\r\n        this.renderer.setAttribute(this.el.nativeElement, 'draggable', this.treeDragEnabled ? 'true' : 'false');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        /** @type {?} */\r\n        let el = this.el.nativeElement;\r\n        el.removeEventListener('drag', this.dragEventHandler);\r\n    }\r\n    /**\r\n     * @param {?} ev\r\n     * @return {?}\r\n     */\r\n    onDragStart(ev) {\r\n        // setting the data is required by firefox\r\n        ev.dataTransfer.setData('text', ev.target.id);\r\n        this.treeDraggedElement.set(this.draggedElement);\r\n        if (this.draggedElement.mouseAction) {\r\n            this.draggedElement.mouseAction('dragStart', ev);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} ev\r\n     * @return {?}\r\n     */\r\n    onDrag(ev) {\r\n        if (this.draggedElement.mouseAction) {\r\n            this.draggedElement.mouseAction('drag', ev);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onDragEnd() {\r\n        if (this.draggedElement.mouseAction) {\r\n            this.draggedElement.mouseAction('dragEnd');\r\n        }\r\n        this.treeDraggedElement.set(null);\r\n    }\r\n}\r\nTreeDragDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[treeDrag]'\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nTreeDragDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 },\r\n    { type: TreeDraggedElement },\r\n    { type: NgZone }\r\n];\r\nTreeDragDirective.propDecorators = {\r\n    draggedElement: [{ type: Input, args: ['treeDrag',] }],\r\n    treeDragEnabled: [{ type: Input }],\r\n    onDragStart: [{ type: HostListener, args: ['dragstart', ['$event'],] }],\r\n    onDragEnd: [{ type: HostListener, args: ['dragend',] }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    TreeDragDirective.prototype.draggedElement;\r\n    /** @type {?} */\r\n    TreeDragDirective.prototype.treeDragEnabled;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDragDirective.prototype.dragEventHandler;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDragDirective.prototype.el;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDragDirective.prototype.renderer;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDragDirective.prototype.treeDraggedElement;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeDragDirective.prototype.ngZone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/directives/tree-animate-open.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst EASE_ACCELERATION = 1.005;\r\nclass TreeAnimateOpenDirective {\r\n    /**\r\n     * @param {?} renderer\r\n     * @param {?} templateRef\r\n     * @param {?} viewContainerRef\r\n     */\r\n    constructor(renderer, templateRef, viewContainerRef) {\r\n        this.renderer = renderer;\r\n        this.templateRef = templateRef;\r\n        this.viewContainerRef = viewContainerRef;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set isOpen(value) {\r\n        if (value) {\r\n            this._show();\r\n            if (this.isEnabled && this._isOpen === false) {\r\n                this._animateOpen();\r\n            }\r\n        }\r\n        else {\r\n            this.isEnabled ? this._animateClose() : this._hide();\r\n        }\r\n        this._isOpen = !!value;\r\n    }\r\n    ;\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    _show() {\r\n        if (this.innerElement)\r\n            return;\r\n        // create child view\r\n        this.innerElement = this.viewContainerRef.createEmbeddedView(this.templateRef).rootNodes[0];\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    _hide() {\r\n        this.viewContainerRef.clear();\r\n        this.innerElement = null;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    _animateOpen() {\r\n        /** @type {?} */\r\n        let delta = this.animateSpeed;\r\n        /** @type {?} */\r\n        let ease = this.animateAcceleration;\r\n        /** @type {?} */\r\n        let maxHeight = 0;\r\n        // set height to 0\r\n        this.renderer.setStyle(this.innerElement, 'max-height', `0`);\r\n        // increase maxHeight until height doesn't change\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            // Allow inner element to create its content\r\n            /** @type {?} */\r\n            const i = setInterval((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                if (!this._isOpen || !this.innerElement)\r\n                    return clearInterval(i);\r\n                maxHeight += delta;\r\n                /** @type {?} */\r\n                const roundedMaxHeight = Math.round(maxHeight);\r\n                this.renderer.setStyle(this.innerElement, 'max-height', `${roundedMaxHeight}px`);\r\n                /** @type {?} */\r\n                const height = this.innerElement.getBoundingClientRect ? this.innerElement.getBoundingClientRect().height : 0;\r\n                delta *= ease;\r\n                ease *= EASE_ACCELERATION;\r\n                if (height < roundedMaxHeight) {\r\n                    // Make maxHeight auto because animation finished and container might change height later on\r\n                    this.renderer.setStyle(this.innerElement, 'max-height', null);\r\n                    clearInterval(i);\r\n                }\r\n            }), 17);\r\n        }));\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    _animateClose() {\r\n        if (!this.innerElement)\r\n            return;\r\n        /** @type {?} */\r\n        let delta = this.animateSpeed;\r\n        /** @type {?} */\r\n        let ease = this.animateAcceleration;\r\n        /** @type {?} */\r\n        let height = this.innerElement.getBoundingClientRect().height;\r\n        // TBD use renderer\r\n        // slowly decrease maxHeight to 0, starting from current height\r\n        /** @type {?} */\r\n        const i = setInterval((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (this._isOpen || !this.innerElement)\r\n                return clearInterval(i);\r\n            height -= delta;\r\n            this.renderer.setStyle(this.innerElement, 'max-height', `${height}px`);\r\n            delta *= ease;\r\n            ease *= EASE_ACCELERATION;\r\n            if (height <= 0) {\r\n                // after animation complete - remove child element\r\n                this.viewContainerRef.clear();\r\n                this.innerElement = null;\r\n                clearInterval(i);\r\n            }\r\n        }), 17);\r\n    }\r\n}\r\nTreeAnimateOpenDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[treeAnimateOpen]'\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nTreeAnimateOpenDirective.ctorParameters = () => [\r\n    { type: Renderer2 },\r\n    { type: TemplateRef },\r\n    { type: ViewContainerRef }\r\n];\r\nTreeAnimateOpenDirective.propDecorators = {\r\n    animateSpeed: [{ type: Input, args: ['treeAnimateOpenSpeed',] }],\r\n    animateAcceleration: [{ type: Input, args: ['treeAnimateOpenAcceleration',] }],\r\n    isEnabled: [{ type: Input, args: ['treeAnimateOpenEnabled',] }],\r\n    isOpen: [{ type: Input, args: ['treeAnimateOpen',] }]\r\n};\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeAnimateOpenDirective.prototype._isOpen;\r\n    /** @type {?} */\r\n    TreeAnimateOpenDirective.prototype.animateSpeed;\r\n    /** @type {?} */\r\n    TreeAnimateOpenDirective.prototype.animateAcceleration;\r\n    /** @type {?} */\r\n    TreeAnimateOpenDirective.prototype.isEnabled;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeAnimateOpenDirective.prototype.innerElement;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeAnimateOpenDirective.prototype.renderer;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeAnimateOpenDirective.prototype.templateRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    TreeAnimateOpenDirective.prototype.viewContainerRef;\r\n    /* Skipping unhandled member: ;*/\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/angular-tree-component.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TreeModule {\r\n}\r\nTreeModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [\r\n                    TreeComponent,\r\n                    TreeNodeComponent,\r\n                    TreeNodeContent,\r\n                    LoadingComponent,\r\n                    TreeDropDirective,\r\n                    TreeDragDirective,\r\n                    TreeNodeExpanderComponent,\r\n                    TreeNodeChildrenComponent,\r\n                    TreeNodeDropSlot,\r\n                    TreeNodeCollectionComponent,\r\n                    TreeViewportComponent,\r\n                    TreeNodeWrapperComponent,\r\n                    TreeNodeCheckboxComponent,\r\n                    TreeAnimateOpenDirective,\r\n                    TreeMobxAutorunDirective\r\n                ],\r\n                exports: [\r\n                    TreeComponent,\r\n                    TreeNodeComponent,\r\n                    TreeNodeContent,\r\n                    LoadingComponent,\r\n                    TreeDropDirective,\r\n                    TreeDragDirective,\r\n                    TreeNodeExpanderComponent,\r\n                    TreeNodeChildrenComponent,\r\n                    TreeNodeDropSlot,\r\n                    TreeNodeCollectionComponent,\r\n                    TreeViewportComponent,\r\n                    TreeNodeWrapperComponent,\r\n                    TreeNodeCheckboxComponent,\r\n                    TreeAnimateOpenDirective,\r\n                    TreeMobxAutorunDirective\r\n                ],\r\n                imports: [CommonModule],\r\n                providers: []\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public-api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: circlon-angular-tree-component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { KEYS, LoadingComponent, TREE_ACTIONS, TreeAnimateOpenDirective, TreeComponent, TreeDragDirective, TreeDraggedElement, TreeDropDirective, TreeModel, TreeModule, TreeNode, TreeNodeCheckboxComponent, TreeNodeChildrenComponent, TreeNodeCollectionComponent, TreeNodeComponent, TreeNodeContent, TreeNodeDropSlot, TreeNodeExpanderComponent, TreeNodeWrapperComponent, TreeViewportComponent, TreeVirtualScroll, actionInternal as ɵa, action as ɵb, computed as ɵc, observable as ɵd, TreeMobxAutorunDirective as ɵe };\n//# sourceMappingURL=circlon-angular-tree-component.js.map\n","export default \"<mat-toolbar class=\\\"toolbar mat-primary\\\">\\r\\n    <button mat-icon-button class=\\\"example-icon\\\" aria-label=\\\"Example icon-button with menu icon\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n        <mat-icon>menu</mat-icon>\\r\\n    </button>\\r\\n    <mat-icon svgIcon=\\\"tree-logo\\\" aria-hidden=\\\"false\\\" class=\\\"main-logo\\\"></mat-icon>\\r\\n    <span>Angular Tree Component</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <a href=\\\"https://github.com/CirclonGroup/angular-tree-component\\\" title=\\\"GitHub\\\" target=\\\"_blank\\\" class=\\\"toolbar-link\\\">\\r\\n        <mat-icon svgIcon=\\\"github\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example thumbs up SVG icon\\\"></mat-icon>\\r\\n    </a>\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n    <mat-sidenav #sidenav mode=\\\"side\\\" opened class=\\\"sidenav\\\">\\r\\n        <div class=\\\"sidenav-menu\\\">\\r\\n            <app-nav-item *ngFor=\\\"let navEntry of nav\\\"\\r\\n                          [node]=\\\"navEntry\\\" [selectedNodes]=\\\"currentNodes\\\"></app-nav-item>\\r\\n        </div>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content class=\\\"sidenav-content\\\" [ngClass]=\\\"{'sidenav-open': sidenav.opened}\\\">\\r\\n        <main role=\\\"main\\\" class=\\\"main-content\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </main>\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n<footer>\\r\\n    <app-footer></app-footer>\\r\\n</footer>\\r\\n\";","export default \"<h1>Basic usage</h1>\\r\\n\\r\\n<h2>Working tree</h2>\\r\\n\\r\\n<tree-root [nodes]=\\\"nodes\\\"></tree-root>\\r\\n\\r\\n<h2>How to implement</h2>\\r\\n\";","export default \"<tree-root\\r\\n  #tree\\r\\n  [nodes]=\\\"nodes\\\"\\r\\n  [options]=\\\"options\\\"\\r\\n  [focused]=\\\"true\\\"\\r\\n>\\r\\n</tree-root>\\r\\n<br>\\r\\n<b>Custom Keys:</b><br>\\r\\nenter - show alert<br>\\r\\n<br>\\r\\n<b>Custom Mouse Actions:</b><br>\\r\\nshift+click - select multi<br>\\r\\ndouble click - expand / collapse<br>\\r\\nright-click - show alert\\r\\n\";","export default \"<h1>Customize Actions</h1>\\r\\n\\r\\n<h2>Demo</h2>\\r\\n\\r\\n<div class=\\\"demo-container\\\">\\r\\n    <app-actions-demo></app-actions-demo>\\r\\n</div>\\r\\n\\r\\n<h2>Override key and mouse actions</h2>\\r\\n\\r\\n<p>Angular Tree Component comes with a default mapping of mouse events and key events to actions. For example - click on the node activates / deactivates it, click on the expander expands / collapses it, pressing space or enter will toggle the node activation (same as click), etc.</p>\\r\\n<p>Using the <code>actionMapping</code> option, you can override how the tree reacts to mouse and key events, by providing a custom mapping.</p>\\r\\n\\r\\n<code-example>{{ actionMapping }}</code-example>\\r\\n\\r\\n\\r\\n<h2>actionMapping (IActionMapping)</h2>\\r\\n\\r\\n<p>The <code>actionMapping</code> attribute needs to implement the <code>IActionMapping</code> interface, which is an object that maps predefined mouse events, and key codes, to callbacks.</p>\\r\\n\\r\\n\\r\\n<h2>The callback (IActionHandler)</h2>\\r\\n\\r\\n<p>The callback always receives three parameters: <code>TreeModel</code>, <code>TreeNode</code>, and <code>$event</code>.</p>\\r\\n\\r\\n\\r\\n<h2>TREE_ACTIONS</h2>\\r\\n\\r\\n<p>Notice the <code>TREE_ACTIONS</code> object. It holds predefined callbacks that do common actions.</p>\\r\\n<p>The available attributes are:</p>\\r\\n\\r\\n<ul>\\r\\n    <li><code>TOGGLE_ACTIVE</code></li>\\r\\n    <li><code>TOGGLE_ACTIVE_MULTI</code></li>\\r\\n    <li><code>ACTIVATE</code></li>\\r\\n    <li><code>DEACTIVATE</code></li>\\r\\n    <li><code>TOGGLE_SELECTED</code></li>\\r\\n    <li><code>SELECT</code></li>\\r\\n    <li><code>DESELECT</code></li>\\r\\n    <li><code>FOCUS</code></li>\\r\\n    <li><code>TOGGLE_EXPANDED</code></li>\\r\\n    <li><code>EXPAND</code></li>\\r\\n    <li><code>COLLAPSE</code></li>\\r\\n    <li><code>DRILL_DOWN</code></li>\\r\\n    <li><code>DRILL_UP</code></li>\\r\\n    <li><code>NEXT_NODE</code></li>\\r\\n    <li><code>PREVIOUS_NODE</code></li>\\r\\n    <li><code>MOVE_NODE</code></li>\\r\\n</ul>\\r\\n\\r\\n\\r\\n<h2>Mouse actions</h2>\\r\\n\\r\\n<p>In mouse actions, the <code>TreeNode</code> parameter of the callback is the node that the event was activated on (e.g. clicked on).</p>\\r\\n<p>The possible attributes for <code>actionMapping.mouse</code> are:</p>\\r\\n\\r\\n<ul>\\r\\n    <li><code>click</code></li>\\r\\n    <li><code>dblClick</code></li>\\r\\n    <li><code>expanderClick</code></li>\\r\\n    <li><code>checkboxClick</code></li>\\r\\n    <li><code>contextMenu</code> (right click)</li>\\r\\n    <li><code>dragStart</code></li>\\r\\n    <li><code>drag</code></li>\\r\\n    <li><code>dragOver</code></li>\\r\\n    <li><code>dragEnd</code></li>\\r\\n    <li><code>dragLeave</code></li>\\r\\n    <li><code>dragEnter</code></li>\\r\\n    <li><code>drop</code></li>\\r\\n</ul>\\r\\n\\r\\n<code-example>{{ mouseActions }}</code-example>\\r\\n\\r\\n\\r\\n<h2>Shift+Click (Alt / Ctrl)</h2>\\r\\n\\r\\n<p>If you want to perform actions based on modifier keys, use <code>$event.shiftKey</code>, <code>$event.ctrlKey</code> etc., provided on the third callback argument - <code>$event</code>.</p>\\r\\n\\r\\n\\r\\n<h2>Keyboard events</h2>\\r\\n\\r\\n<p>In keyboard events, the <code>TreeNode</code> parameter of the callback is the currently focused node. In case no node is focused, this will be <code>null</code>.</p>\\r\\n<p>The attributes for <code>actionMapping.keys</code> are integers which represent the key code (e.g. 32 for Space)</p>\\r\\n<p>Angular Tree Component exposes a <code>KEYS</code> constant with predefined common key codes:</p>\\r\\n\\r\\n<code-example language=\\\"json\\\">{{ keys }}</code-example>\\r\\n\\r\\n<p>So you can use those, or pass any keycode you'd like.</p>\\r\\n<p>For example:</p>\\r\\n\\r\\n<code-example>{{ keysExample }}</code-example>\\r\\n\\r\\n\\r\\n<h2>Default mapping</h2>\\r\\n\\r\\n<p>Here is the default mapping that ships with Angular Tree Component:</p>\\r\\n\\r\\n<code-example>{{ defaultMapping }}</code-example>\\r\\n\\r\\n\\r\\n<h2>Context menu</h2>\\r\\n\\r\\n<p>In case you want to open your own context menu, you must first run <code>$event.preventDefault()</code> within the callback.</p>\\r\\n\";","export default \"<tree-root\\r\\n  #tree\\r\\n  [nodes]=\\\"nodes\\\"\\r\\n  [options]=\\\"options\\\"\\r\\n  [focused]=\\\"true\\\"\\r\\n>\\r\\n</tree-root>\\r\\n<p>API:</p>\\r\\n<button (click)=\\\"tree.treeModel.focusNextNode()\\\">next node</button>\\r\\n<button (click)=\\\"tree.treeModel.focusPreviousNode()\\\">previous node</button>\\r\\n<button (click)=\\\"tree.treeModel.focusDrillDown()\\\">drill down</button>\\r\\n<button (click)=\\\"tree.treeModel.focusDrillUp()\\\">drill up</button>\\r\\n<button (click)=\\\"options.allowDrag = true\\\">allowDrag</button>\\r\\n<p></p>\\r\\n<button\\r\\n        [disabled]=\\\"!tree.treeModel.getFocusedNode()\\\"\\r\\n        (click)=\\\"tree.treeModel.getFocusedNode().toggleActivated()\\\">\\r\\n    {{ tree.treeModel.getFocusedNode()?.isActive ? 'deactivate' : 'activate' }}\\r\\n</button>\\r\\n<button\\r\\n        [disabled]=\\\"!tree.treeModel.getFocusedNode()\\\"\\r\\n        (click)=\\\"tree.treeModel.getFocusedNode().toggleExpanded()\\\">\\r\\n    {{ tree.treeModel.getFocusedNode()?.isExpanded ? 'collapse' : 'expand' }}\\r\\n</button>\\r\\n<button\\r\\n        [disabled]=\\\"!tree.treeModel.getFocusedNode()\\\"\\r\\n        (click)=\\\"tree.treeModel.getFocusedNode().blur()\\\">\\r\\n    blur\\r\\n</button>\\r\\n<button\\r\\n        (click)=\\\"addNode(tree)\\\">\\r\\n    Add Node\\r\\n</button>\\r\\n<button\\r\\n        (click)=\\\"activateSubSub(tree)\\\">\\r\\n    Activate inner node\\r\\n</button>\\r\\n<button\\r\\n        (click)=\\\"tree.treeModel.expandAll()\\\">\\r\\n    Expand All\\r\\n</button>\\r\\n<button\\r\\n        (click)=\\\"tree.treeModel.collapseAll()\\\">\\r\\n    Collapse All\\r\\n</button>\\r\\n<button\\r\\n        (click)=\\\"activeNodes(tree.treeModel)\\\">\\r\\n    getActiveNodes()\\r\\n</button>\\r\\n\";","export default \"<h1>Calling API Methods</h1>\\r\\n\\r\\n<h2>Demo</h2>\\r\\n\\r\\n<div class=\\\"demo-container\\\">\\r\\n    <app-api-demo></app-api-demo>\\r\\n</div>\\r\\n\\r\\n<code-example>{{ html }}</code-example>\\r\\n\\r\\n<p>Or by accessing the <code>treeNode</code> that is passed through <a [routerLink]=\\\"['/', 'fundamentals', 'events']\\\">Events</a> or using <a [routerLink]=\\\"['/', 'fundamentals', 'actions']\\\">Action Mapping</a>.</p>\\r\\n\";","export default \"<h1>Events</h1>\\r\\n\\r\\n<h2>Registering events</h2>\\r\\n\\r\\n<p>You can react to whatever happened on the tree by registering to events.</p>\\r\\n<p>If you're looking to override behaviour - see Customize actions section.</p>\\r\\n<p>Events use Angular's output:</p>\\r\\n\\r\\n<code-example>{{ event }}</code-example>\\r\\n\\r\\n\\r\\n<h2>treeModel</h2>\\r\\n\\r\\n<p>All events have a <code>treeModel</code> attribute that allows you to access the tree API.</p>\\r\\n<p>Specific events and other attributes are listed below:</p>\\r\\n\\r\\n\\r\\n<h2>toggleExpanded</h2>\\r\\n\\r\\n<p>Triggers when expanding / collapsing a tree node.</p>\\r\\n\\r\\n<code-example language=\\\"json\\\">{{ toggleExpanded }}</code-example>\\r\\n\\r\\n\\r\\n<h2>activate / nodeActivate</h2>\\r\\n<p>Triggers when activating a tree node, by clicking on the node, or by using the Enter / Space keys.</p>\\r\\n<p>nodeActivate is an alias to support older browser versions.</p>\\r\\n<code-example language=\\\"json\\\">{{ basicEvent }}</code-example>\\r\\n\\r\\n\\r\\n<h2>deactivate / nodeDeactivate</h2>\\r\\n<p>Triggers when deactivating a tree node, by clicking on the node, or by using the Enter or Space keys.</p>\\r\\n<p>nodeDeactivate is an alias to support older browser versions.</p>\\r\\n<code-example language=\\\"json\\\">{{ basicEvent }}</code-example>\\r\\n\\r\\n\\r\\n<h2>focus</h2>\\r\\n<p>Triggers when focusing on a node, by moving with the arrow keys.</p>\\r\\n<code-example language=\\\"json\\\">{{ basicEvent }}</code-example>\\r\\n\\r\\n\\r\\n<h2>blur</h2>\\r\\n<p>Triggers when focusing on a node, by moving with the arrow keys.</p>\\r\\n<code-example language=\\\"json\\\">{{ basicEvent }}</code-example>\\r\\n\\r\\n<h2>initialized</h2>\\r\\n<p>Triggers after tree model was created.</p>\\r\\n<p>Good for performing actions immediately on init, like expanding / activating certain nodes, etc.</p>\\r\\n<p>You can access the tree model using a ref, as described in the API section.</p>\\r\\n<code-example language=\\\"json\\\">{{ eventName }}</code-example>\\r\\n\\r\\n\\r\\n<h2>updateData</h2>\\r\\nTriggers after tree model was updated, either by changing the inputs of the tree (nodes, options, etc.) or a direct call to <code>update()</code>.\\r\\n<code-example language=\\\"json\\\">{{ eventName }}</code-example>\\r\\n\\r\\n\\r\\n<h2>moveNode</h2>\\r\\n<p>This event is fired any time moveNode is called on the tree.</p>\\r\\n<p>Typically - when drag and dropping a node.</p>\\r\\n<code-example language=\\\"json\\\">{{ move }}</code-example>\\r\\n\\r\\n\\r\\n<h2>copyNode</h2>\\r\\n<p>This event is fired any time copyNode is called on the tree.</p>\\r\\n<p>Typically - when drag and dropping a node while ctrl key is pressed.</p>\\r\\n<code-example language=\\\"json\\\">{{ copy }}</code-example>\\r\\n\\r\\n\\r\\n<h2>event</h2>\\r\\n<p>Catch-all event that is triggered on every other event that is triggered.</p>\\r\\n<p>Useful for doing the same action for different events by checking the eventName.</p>\\r\\n<p>The parameters will match whatever event was sent originally.</p>\\r\\n<code-example language=\\\"json\\\">{{ baseEvent }}</code-example>\\r\\n\\r\\n\\r\\n<h2>loadNodeChildren</h2>\\r\\n<p>Callback after async children were added to the tree. The <code>node</code> returned is the parent node.</p>\\r\\n<code-example language=\\\"json\\\">{{ basicEvent }}</code-example>\\r\\n\\r\\n\\r\\n<h2>changeFilter</h2>\\r\\n<p>Fired after filter has changed or cleared</p>\\r\\n<code-example language=\\\"json\\\">{{ eventName }}</code-example>\\r\\n\";","export default \"<h1>Focused</h1>\\r\\n\\r\\n<code-example>{{ focus }}</code-example>\\r\\n\\r\\n<h2>@Input() focused</h2>\\r\\n\\r\\n<p>Whether the tree should be focused. Key navigation only works when the tree is focused.</p>\\r\\n<p>Default value: <code>false</code>.</p>\\r\\n\";","export default \"<h1>Common Issues</h1>\\r\\n\\r\\n<h2>Tree not rendered</h2>\\r\\n<p>Case: when tree is hidden (for example inside tab or modal), it is not rendered when it becomes visible.</p>\\r\\n<p>Solution: after it becomes visible (preferably using <code>setTimeout</code>) - call <code>tree.sizeChanged()</code>, which recalculates the rendered nodes according to the actual viewport size.</p>\\r\\n\\r\\n<h2>Tree state (expanded / selected nodes) gets lost</h2>\\r\\n<p>Maybe you are not supplying unique IDs to the nodes.</p>\\r\\n<p>The tree maintains its state by using IDs, and if you don't supply ones the tree will generate random ones automatically. Which means that if you update the data - the state will be lost.</p>\\r\\n\\r\\n<h2>Scroll Into View doesn't work</h2>\\r\\n<p>See <code>scrollContainer</code> option in <a [routerLink]=\\\"['/', 'fundamentals', 'options']\\\">Options</a> for more information.</p>\\r\\n\";","export default \"<h1>Nodes</h1>\\r\\n\\r\\n<p>Inputs to Tree component:</p>\\r\\n\\r\\n<code-example>&lt;tree-root [nodes]=nodes [options]=\\\"options\\\"&gt;&lt;/tree-root&gt;</code-example>\\r\\n\\r\\n<h2>nodes</h2>\\r\\n\\r\\n<p>Array of root nodes of the tree.</p>\\r\\n<p>Each node may contain the following fields:</p>\\r\\n\\r\\n<table>\\r\\n    <tr>\\r\\n        <th>Property</th>\\r\\n        <th>Description</th>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <td>id</td>\\r\\n        <td>\\r\\n            Unique ID for the node.<br>\\r\\n            If one is not supplied it will be created by the tree library.\\r\\n        </td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <td>name</td>\\r\\n        <td>Will be displayed by default in the tree.</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <td>children</td>\\r\\n        <td>An array of the node's children.<br>\\r\\n            Each child is an object with the same structure as the parent node.</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <td>hasChildren</td>\\r\\n        <td>For async data load. Denotes that this node might have children, even when 'children' attr is empty.</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <td>isExpanded</td>\\r\\n        <td>Determines whether the node starts as expanded by default. Notice that this field is not bindable, meaning that changing it doesn't affect the tree and vice versa.</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<p>Example:</p>\\r\\n\\r\\n<code-example language=\\\"json\\\">{{ nodes }}</code-example>\\r\\n\\r\\n<h2>Focused</h2>\\r\\n\\r\\n<p>Whether the tree should be focused. Key navigation only works when the tree is focused.</p>\\r\\n<p>Default value: <code>false</code>.</p>\\r\\n\";","export default \"<h1>Options</h1>\\r\\n\\r\\n<code-example>&lt;tree-root [nodes]=nodes [options]=\\\"options\\\"&gt;&lt;/tree-root&gt;</code-example>\\r\\n\\r\\n<h2>options</h2>\\r\\n\\r\\n<p>Object of type <code>ITreeOptions</code></p>\\r\\n\\r\\n<p>Example:</p>\\r\\n\\r\\n<code-example>{{ options }}</code-example>\\r\\n\";","export default \"<input id=\\\"filter\\\" #filter (keyup)=\\\"tree.treeModel.filterNodes(filter.value)\\\" placeholder=\\\"filter nodes\\\"/>\\r\\n<tree-root [options]=\\\"options\\\" [(state)]=\\\"state\\\" #tree [focused]=\\\"true\\\" [nodes]=\\\"nodes\\\"></tree-root>\\r\\n\";","export default \"<h1>2-way binding to state</h1>\\r\\n\\r\\n<p>You can control the tree state using 2-way binding.</p>\\r\\n<p>The state includes the following:</p>\\r\\n\\r\\n<table>\\r\\n    <tr>\\r\\n        <td>expandedNodeIds</td>\\r\\n        <td>dictionary of node IDs to booleans</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <td>selectedLeafNodeIds</td>\\r\\n        <td>dictionary of node IDs to booleans</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <td>activeNodeIds</td>\\r\\n        <td>dictionary of node IDs to booleans</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <td>hiddenNodeIds</td>\\r\\n        <td>dictionary of node IDs to booleans</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <td>focusedNodeId</td>\\r\\n        <td>node ID</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<p>You can change the state reference and the tree will respond automatically, and also access the tree state at any time, as it is always updated via the 2-way binding.</p>\\r\\n\\r\\n<p>Example:</p>\\r\\n\\r\\n<code-example>{{ example }}</code-example>\\r\\n\\r\\n\\r\\n<h2>!important note</h2>\\r\\n<p>You must have an 'id' property on the nodes in order for this to work. Otherwise - the tree will automatically generate internal IDs which change every time you change the nodes array.</p>\\r\\n\\r\\n\\r\\n<h2>Persist state to localstorage</h2>\\r\\n<p>This example is using the 2 way binding to tree state to auto save & restore from localstorage:</p>\\r\\n<code-example>{{ localStorage }}</code-example>\\r\\n\\r\\n<h3>Demo</h3>\\r\\n\\r\\n<div class=\\\"demo-container\\\">\\r\\n    <app-state-binding-demo></app-state-binding-demo>\\r\\n</div>\\r\\n\\r\\n\\r\\n<h2>Using API</h2>\\r\\n<p>Alternatively, you can use <code>getState</code>, <code>setState</code> and <code>subscribe</code> on treeModel API. <code>subscribe</code> will callback a function every time state changes.</p>\\r\\n<code-example>{{ api }}</code-example>\\r\\n\";","export default \"<h1>Styling</h1>\\r\\n\\r\\n<p>The tree comes with very basic style.</p>\\r\\n<p>The following classes are available for customization:</p>\\r\\n\\r\\n<ul>\\r\\n    <li>.angular-tree-component</li>\\r\\n    <li>.angular-tree-component-rtl</li>\\r\\n    <li>.tree-node</li>\\r\\n    <li>.tree-node-wrapper</li>\\r\\n    <li>.tree-node-expanded</li>\\r\\n    <li>.tree-node-collapsed</li>\\r\\n    <li>.tree-node-focused</li>\\r\\n    <li>.tree-node-active</li>\\r\\n    <li>.tree-node-level-X</li>\\r\\n    <li>.tree-node-leaf</li>\\r\\n    <li>.node-wrapper</li>\\r\\n    <li>.toggle-children-wrapper</li>\\r\\n    <li>.toggle-children</li>\\r\\n    <li>.toggle-children-placeholder</li>\\r\\n    <li>.node-content-wrapper</li>\\r\\n    <li>.tree-children</li>\\r\\n    <li>.tree-node-loading</li>\\r\\n    <li>.node-drop-slot</li>\\r\\n    <li>.is-dragging-over</li>\\r\\n    <li>.is-dragging-over-disabled</li>\\r\\n</ul>\\r\\n\\r\\n<h2>Overriding style</h2>\\r\\n<p>Surround your tree with a class, and add your custom style to your style.scss file.</p>\\r\\n<p>Scope all the custom rules under your custom class - and that's it!</p>\\r\\n\\r\\n<h2>Example styles</h2>\\r\\n<p>These styles were provided by the community. They might be outdated.</p>\\r\\n<p>If you find an error in these styles please suggest an edit - don't open a github issue.</p>\\r\\n<p>Thanks</p>\\r\\n\\r\\n\\r\\n<h3>Branch lines</h3>\\r\\n<p>This theme puts explorer like branch lines that connect the parents with their children</p>\\r\\n<div class=\\\"lightbox\\\">\\r\\n    <img src=\\\"assets/styling/f50955b-Screen_Shot_2016-11-29_at_12.11.52_PM.png\\\" alt=\\\"Branch lines\\\">\\r\\n</div>\\r\\n<code-example>{{ branchLines }}</code-example>\\r\\n\\r\\n\\r\\n<h3>Pull right</h3>\\r\\n<p>This theme allows placing items in the right side of the tree nodes using <code>pull-right</code> class.</p>\\r\\n<p>It is based on flexbox, so relevant only to browsers who support it.</p>\\r\\n<div class=\\\"lightbox\\\">\\r\\n    <img src=\\\"assets/styling/28d7625-Screen_Shot_2016-11-29_at_12.11.01_PM.png\\\" alt=\\\"Pull right\\\">\\r\\n</div>\\r\\n<code-example>{{ pullRight }}</code-example>\\r\\n\\r\\n\\r\\n<h3>ACE Admin theme</h3>\\r\\n<p><a href=\\\"http://ace.jeka.by/treeview.html\\\" target=\\\"_blank\\\">ACE Admin theme</a> style.</p>\\r\\n<p>Credit to Viet Anh Do for sending this theme!</p>\\r\\n<div class=\\\"lightbox\\\">\\r\\n    <img src=\\\"assets/styling/0bd50e1-treecss.png\\\" alt=\\\"ACE Admin theme\\\">\\r\\n</div>\\r\\n<code-example>{{ ace }}</code-example>\\r\\n\";","export default \"<h3>treeNodeTemplate and loadingTemplate</h3>\\r\\n<tree-root id=\\\"tree1\\\" [focused]=\\\"true\\\" [nodes]=\\\"nodes1\\\" [options]=\\\"options1\\\">\\r\\n    <ng-template #treeNodeTemplate let-node let-index=\\\"index\\\">\\r\\n        <span [class]=\\\"node.data.className + 'Index'\\\">{{ index }}</span>\\r\\n        <span [class]=\\\"node.data.className\\\" [class.title]=\\\"true\\\">{{ node.data.title }}</span>\\r\\n    </ng-template>\\r\\n    <ng-template #loadingTemplate let-node>\\r\\n        <div [class]=\\\"node.data.className + 'Loading'\\\">Loading {{ node.data.title }}...</div>\\r\\n    </ng-template>\\r\\n</tree-root>\\r\\n\\r\\n<h3>treeNodeWrapper</h3>\\r\\n<tree-root id=\\\"tree3\\\" [focused]=\\\"true\\\" [nodes]=\\\"nodes2\\\" [options]=\\\"options1\\\">\\r\\n    <ng-template #treeNodeWrapperTemplate let-node let-index=\\\"index\\\">\\r\\n        <span [class]=\\\"node.data.className + 'Index'\\\">{{ index }}</span>\\r\\n        <input type=\\\"checkbox\\\"><span>&rarr;</span>\\r\\n        <span [class]=\\\"node.data.className\\\" [class.title]=\\\"true\\\">{{ node.data.title }}</span>\\r\\n    </ng-template>\\r\\n</tree-root>\\r\\n<h3>treeNodeFullTemplate</h3>\\r\\n<tree-root id=\\\"tree2\\\" [focused]=\\\"true\\\" [nodes]=\\\"nodes2\\\">\\r\\n    <ng-template #treeNodeFullTemplate let-node let-index=\\\"index\\\" let-templates=\\\"templates\\\">\\r\\n        <div class=\\\"tree-node\\\">\\r\\n            <input type=\\\"checkbox\\\" [checked]=\\\"node.isActive\\\" (change)=\\\"node.toggleActivated(true)\\\" />\\r\\n            <tree-node-expander [node]=\\\"node\\\"></tree-node-expander>\\r\\n            <div\\r\\n                    class=\\\"node-content-wrapper\\\"\\r\\n                    [class.node-content-wrapper-active]=\\\"node.isActive\\\"\\r\\n                    [class.node-content-wrapper-focused]=\\\"node.isFocused\\\"\\r\\n                    (click)=\\\"node.toggleActivated(true)\\\">\\r\\n                <span [class]=\\\"node.data.className + 'Index'\\\">{{ index }}</span>\\r\\n                <span [class]=\\\"node.data.className\\\" [class.title]=\\\"true\\\">{{ node.data.title }}</span>\\r\\n            </div>\\r\\n            <tree-node-children [node]=\\\"node\\\" [templates]=\\\"templates\\\"></tree-node-children>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</tree-root>\\r\\n\";","export default \"<h1>Custom Templates</h1>\\r\\n\\r\\n<p>You can customize the tree's templates using embedded <code>ng-template</code> tags.</p>\\r\\n\\r\\n<h2>Demo</h2>\\r\\n\\r\\n<div class=\\\"demo-container\\\">\\r\\n    <app-templates-demo></app-templates-demo>\\r\\n</div>\\r\\n\\r\\n\\r\\n<h2>#treeNodeTemplate</h2>\\r\\n\\r\\n<p>Use #treeNodeTemplate for the content of the node.</p>\\r\\n<p>You will have access to the following variables:</p>\\r\\n\\r\\n<table>\\r\\n    <tr>\\r\\n        <th>Variable</th>\\r\\n        <th>Description</th>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <td>node</td>\\r\\n        <td>Node of type TreeNode. Exposes many useful methods, as well as a <code>data</code> attribute with the original node's data.</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <td>index</td>\\r\\n        <td>The index of the current node in the parent's children.</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<p>For example:</p>\\r\\n\\r\\n<code-example>{{ template }}</code-example>\\r\\n\\r\\n\\r\\n<h2>#treeNodeWrapperTemplate</h2>\\r\\n\\r\\n<p>This option is useful in case all you need to further customise the expander location and the node's event listeners.</p>\\r\\n<p>Start by specifying the following template, and make sure the tree still renders as expected.</p>\\r\\n<p>Then remove / change whatever you need:</p>\\r\\n\\r\\n<code-example>{{ treeNodeWrapper }}</code-example>\\r\\n\\r\\n\\r\\n<h2>#loadingTemplate</h2>\\r\\n\\r\\n<p>For asynchronous data loading, use #loadingTemplate to customize the message that appears while loading the children.</p>\\r\\n<p>For example:</p>\\r\\n\\r\\n<code-example>{{ treeLoading }}</code-example>\\r\\n\\r\\n<h2>#treeNodeFullTemplate</h2>\\r\\n\\r\\n<p>This option is useful in case all other customisation options are not suitable for you.</p>\\r\\n<p>It allows for full customisation of the node, as it replaces the internal template for the TreeNode component.</p>\\r\\n<p>Start by specifying the following template, and make sure the tree still renders as expected.</p>\\r\\n<p>Then remove / change whatever you need:</p>\\r\\n\\r\\n<code-example>{{ fullTemplate }}</code-example>\\r\\n\\r\\n<div class=\\\"alert is-important\\\">\\r\\n    <p>Do not remove <code>let-templates=\\\"templates\\\"</code> and passing <code>[templates]=\\\"templates\\\"</code> to <code>tree-node-children</code>. If you do that, the children of your nodes will not receive the custom template you provided.</p>\\r\\n</div>\\r\\n\";","export default \"<h1>Getting Started</h1>\\r\\n\\r\\n<p>This page will help you get started with angular-tree-component. You'll be up and running in a jiffy! This project is completely free and open to use under the MIT license.</p>\\r\\n\\r\\n<h2>Slack Community</h2>\\r\\n\\r\\n<p>The best way to get support from the community: <a href=\\\"https://angular-tree-component.herokuapp.com/\\\" target=\\\"_blank\\\">https://angular-tree-component.herokuapp.com/</a></p>\\r\\n\\r\\n<h2>Supported Angular Versions</h2>\\r\\n\\r\\n<p>We follow the Angular Versions. Version 10 of the angular-tree-component supports Angular 10, Version 9 of the tree Angular 9.<br>\\r\\n    Please note that ownership of the tree changed between Version 8 and 9. We will focus all new development on Version 9 and up.</p>\\r\\n\\r\\n<h2>Installation</h2>\\r\\n\\r\\n<h3>Angular 9 and up</h3>\\r\\n\\r\\n<h4>Installing with npm</h4>\\r\\n\\r\\n<code-example language=\\\"sh\\\">npm install @circlon/angular-tree-component --save</code-example>\\r\\n\\r\\n<h4>Installing with yarn</h4>\\r\\n\\r\\n<code-example language=\\\"sh\\\">yarn add @circlon/angular-tree-component</code-example>\\r\\n\\r\\n<h4>Import css</h4>\\r\\n\\r\\n<p>Add styles to your <code>styles.scss</code>:</p>\\r\\n\\r\\n<code-example language=\\\"sh\\\">@import '~@circlon/angular-tree-component/css/angular-tree-component.css';</code-example>\\r\\n\\r\\n<h4>Import TreeModule</h4>\\r\\n\\r\\n<p>Import the TreeModule into your <code>app.module.ts</code>:</p>\\r\\n\\r\\n<code-example language=\\\"sh\\\">imports: [TreeModule]</code-example>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<h3>Angular 8 and down</h3>\\r\\n\\r\\n<h4>Installing with npm</h4>\\r\\n\\r\\n<code-example language=\\\"sh\\\">npm install angular-tree-component --save</code-example>\\r\\n\\r\\n<h4>Installing with yarn</h4>\\r\\n\\r\\n<code-example language=\\\"sh\\\">yarn add angular-tree-component</code-example>\\r\\n\\r\\n<h4>Import css</h4>\\r\\n\\r\\n<p>Add styles to your <code>styles.scss</code>:</p>\\r\\n\\r\\n<code-example language=\\\"sh\\\">@import '~angular-tree-component/dist/angular-tree-component.css';</code-example>\\r\\n\\r\\n<h4>Import TreeModule</h4>\\r\\n\\r\\n<p>Import the TreeModule into your <code>app.module.ts</code>:</p>\\r\\n\\r\\n<code-example language=\\\"sh\\\">imports: [TreeModule.forRoot()]</code-example>\\r\\n\";","export default \"<div class=\\\"footer-blocks\\\">\\r\\n    <div class=\\\"footer-block\\\">\\r\\n        <h3>Help</h3>\\r\\n        <ul>\\r\\n            <li><a href=\\\"https://angular-tree-component.herokuapp.com/\\\" target=\\\"_blank\\\">Slack</a></li>\\r\\n            <li><a href=\\\"https://stackoverflow.com/questions/tagged/angular-tree-component\\\" target=\\\"_blank\\\">Stackoverflow</a></li>\\r\\n            <li><a href=\\\"https://github.com/CirclonGroup/angular-tree-component/issues\\\" target=\\\"_blank\\\">Report Issues</a></li>\\r\\n            <li><a href=\\\"https://github.com/CirclonGroup/angular-tree-component/blob/master/CODE_OF_CONDUCT.md\\\" target=\\\"_blank\\\">Code of Conduct</a></li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<p>Powered by the Community. Code licensed under an <a href=\\\"https://github.com/CirclonGroup/angular-tree-component/blob/master/LICENSE\\\" target=\\\"_blank\\\">MIT-style License</a>.</p>\\r\\n\";","export default \"<div *ngIf=\\\"!node.children\\\">\\r\\n    <a [routerLink]=\\\"node.link\\\" [ngClass]=\\\"classes\\\" title=\\\"{{node.tooltip}}\\\"\\r\\n       class=\\\"vertical-menu-item\\\">\\r\\n        <span>{{node.title}}</span>\\r\\n    </a>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"node.children\\\">\\r\\n    <a *ngIf=\\\"node.link != null\\\" [routerLink]=\\\"node.link\\\" [ngClass]=\\\"classes\\\" title=\\\"{{node.tooltip}}\\\"\\r\\n       (click)=\\\"headerClicked()\\\" class=\\\"vertical-menu-item heading\\\">\\r\\n        <span>{{node.title}}</span>\\r\\n        <mat-icon class=\\\"rotating-icon\\\">chevron_right</mat-icon>\\r\\n    </a>\\r\\n\\r\\n    <button *ngIf=\\\"node.link == null\\\" type=\\\"button\\\" [ngClass]=\\\"classes\\\" title=\\\"{{node.tooltip}}\\\"\\r\\n            (click)=\\\"headerClicked()\\\" class=\\\"vertical-menu-item heading\\\"\\r\\n            [attr.aria-pressed]=\\\"isExpanded\\\">\\r\\n        <span>{{node.title}}</span>\\r\\n        <mat-icon class=\\\"rotating-icon\\\">chevron_right</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"heading-children\\\" [ngClass]=\\\"classes\\\">\\r\\n        <app-nav-item *ngFor=\\\"let node of nodeChildren\\\" [level]=\\\"level + 1\\\" [isWide]=\\\"isWide\\\"\\r\\n                      [isParentExpanded]=\\\"isExpanded\\\"\\r\\n                      [node]=\\\"node\\\" [selectedNodes]=\\\"selectedNodes\\\"></app-nav-item>\\r\\n    </div>\\r\\n</div>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GettingStartedComponent } from './getting-started/getting-started.component';\r\nimport { BasicUsageComponent } from './examples/basic-usage/basic-usage.component';\r\nimport { NodesComponent } from './fundamentals/nodes/nodes.component';\r\nimport { OptionsComponent } from './fundamentals/options/options.component';\r\nimport { ActionsComponent } from './fundamentals/actions/actions.component';\r\nimport { TemplatesComponent } from './fundamentals/templates/templates.component';\r\nimport { EventsComponent } from './fundamentals/events/events.component';\r\nimport { StateBindingComponent } from './fundamentals/state-binding/state-binding.component';\r\nimport { ApiComponent } from './fundamentals/api/api.component';\r\nimport { StylingComponent } from './fundamentals/styling/styling.component';\r\nimport { FocusComponent } from './fundamentals/focus/focus.component';\r\nimport { IssuesComponent } from './fundamentals/issues/issues.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GettingStartedComponent,\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'examples',\r\n    children: [\r\n      { path: 'basic', component: BasicUsageComponent }\r\n    ]\r\n  },\r\n  {\r\n    path: 'fundamentals',\r\n    children: [\r\n      { path: 'nodes', component: NodesComponent },\r\n      { path: 'options', component: OptionsComponent },\r\n      { path: 'actions', component: ActionsComponent },\r\n      { path: 'templates', component: TemplatesComponent },\r\n      { path: 'events', component: EventsComponent },\r\n      { path: 'state', component: StateBindingComponent },\r\n      { path: 'api', component: ApiComponent },\r\n      { path: 'styling', component: StylingComponent },\r\n      { path: 'focus', component: FocusComponent },\r\n      { path: 'issues', component: IssuesComponent },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      routes,\r\n      {\r\n        scrollPositionRestoration: 'enabled'\r\n      }\r\n    ),\r\n  ],\r\n  exports: [\r\n    RouterModule,\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","export default \".example-spacer {\\n  flex: 1 1 auto;\\n}\\n\\n.toolbar {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  z-index: 10;\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\\n}\\n\\n.toolbar-link {\\n  display: flex;\\n  align-items: center;\\n  padding: 24px;\\n  margin: 0 -16px;\\n}\\n\\n.main-logo {\\n  padding: 0 8px;\\n}\\n\\n.sidenav-container {\\n  min-height: 100%;\\n  height: auto;\\n  max-width: 100%;\\n  margin: 0;\\n  transform: none;\\n}\\n\\n.sidenav-container .sidenav {\\n  position: fixed;\\n  top: 64px;\\n  bottom: 0;\\n  left: 0;\\n  padding: 0;\\n  min-width: 260px;\\n  box-shadow: 6px 0 6px rgba(0, 0, 0, 0.1);\\n}\\n\\n.sidenav-container .sidenav .sidenav-menu :first-child {\\n  margin-top: 16px;\\n}\\n\\n.sidenav-container .sidenav .sidenav-menu .menu-item {\\n  display: block;\\n  max-width: 260px;\\n  font-weight: 400;\\n  padding-left: 20px;\\n}\\n\\n.sidenav-container .sidenav-content {\\n  height: 100%;\\n}\\n\\n.sidenav-container .sidenav-content.sidenav-open {\\n  margin-left: 278px;\\n}\\n\\n.sidenav-container .sidenav-content .main-content {\\n  min-height: 100vh;\\n  padding: 80px 3rem 2rem;\\n}\\n\\nfooter {\\n  padding: 48px;\\n  font-weight: 300;\\n  background-color: #3f51b5;\\n  z-index: 0;\\n}\\n\\nfooter .footer-content {\\n  display: flex;\\n  justify-content: center;\\n  margin: 0 0 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2RvY3MtYXBwL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtBQUNGOztBQUVBO0VBQ0UsZUFBQTtFQUNBLE1BQUE7RUFDQSxRQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7RUFDQSwwQ0FBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUNFO0VBQ0UsZUFBQTtFQUNBLFNBQUE7RUFDQSxTQUFBO0VBQ0EsT0FBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtFQUNBLHdDQUFBO0FBQ0o7O0FBRU07RUFDRSxnQkFBQTtBQUFSOztBQUdNO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQURSOztBQU1FO0VBQ0UsWUFBQTtBQUpKOztBQU1JO0VBQ0Usa0JBQUE7QUFKTjs7QUFPSTtFQUNFLGlCQUFBO0VBQ0EsdUJBQUE7QUFMTjs7QUFVQTtFQUNFLGFBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0VBQ0EsVUFBQTtBQVBGOztBQVNFO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7QUFQSiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXNwYWNlciB7XHJcbiAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuXHJcbi50b29sYmFyIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgei1pbmRleDogMTA7XHJcbiAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSgwLDAsMCwuMyk7XHJcbn1cclxuXHJcbi50b29sYmFyLWxpbmsge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBwYWRkaW5nOiAyNHB4O1xyXG4gIG1hcmdpbjogMCAtMTZweDtcclxufVxyXG5cclxuLm1haW4tbG9nbyB7XHJcbiAgcGFkZGluZzogMCA4cHg7XHJcbn1cclxuXHJcbi5zaWRlbmF2LWNvbnRhaW5lciB7XHJcbiAgbWluLWhlaWdodDogMTAwJTtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbjogMDtcclxuICB0cmFuc2Zvcm06IG5vbmU7XHJcblxyXG4gIC5zaWRlbmF2IHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogNjRweDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWluLXdpZHRoOiAyNjBweDtcclxuICAgIGJveC1zaGFkb3c6IDZweCAwIDZweCByZ2JhKDAsMCwwLDAuMSk7XHJcblxyXG4gICAgLnNpZGVuYXYtbWVudSB7XHJcbiAgICAgIDpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTZweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgLm1lbnUtaXRlbSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAyNjBweDtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnNpZGVuYXYtY29udGVudCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gICAgJi5zaWRlbmF2LW9wZW4ge1xyXG4gICAgICBtYXJnaW4tbGVmdDogMjc4cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLm1haW4tY29udGVudCB7XHJcbiAgICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG4gICAgICBwYWRkaW5nOiA4MHB4IDNyZW0gMnJlbTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmZvb3RlciB7XHJcbiAgcGFkZGluZzogNDhweDtcclxuICBmb250LXdlaWdodDogMzAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzZjUxYjU7XHJcbiAgei1pbmRleDogMDtcclxuXHJcbiAgLmZvb3Rlci1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbjogMCAwIDQwcHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\";","import { Component } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NavigationNode } from './navigation/navigation.model';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'docs-app';\r\n\r\n  nav: NavigationNode[] = [\r\n    { title: 'Getting Started', children: null, link: [''] },\r\n    { title: 'Fundamentals', children:\r\n        [\r\n          { title: 'Nodes', url: 'fundamentals/nodes', children: null, link: ['fundamentals', 'nodes'] },\r\n          { title: 'Options', url: 'fundamentals/options', children: null, link: ['fundamentals', 'options'] },\r\n          { title: 'Customize Actions', url: 'fundamentals/actions', children: null, link: ['fundamentals', 'actions'] },\r\n          { title: 'Custom Templates', url: 'fundamentals/templates', children: null, link: ['fundamentals', 'templates'] },\r\n          { title: 'Events', url: 'fundamentals/events', children: null, link: ['fundamentals', 'events'] },\r\n          { title: '2-way binding to state', url: 'fundamentals/state', children: null, link: ['fundamentals', 'state'] },\r\n          { title: 'Calling API Methods', url: 'fundamentals/api', children: null, link: ['fundamentals', 'api'] },\r\n          { title: 'Styling', url: 'fundamentals/styling', children: null, link: ['fundamentals', 'styling'] },\r\n          { title: 'Focused', url: 'fundamentals/focus', children: null, link: ['fundamentals', 'focus'] },\r\n          { title: 'Common issues', url: 'fundamentals/issues', children: null, link: ['fundamentals', 'issues'] },\r\n        ]\r\n    },\r\n    { title: 'Examples', children:\r\n        [\r\n          { title: 'Basic', url: 'examples/basic', children: null, link: ['examples', 'basic'] },\r\n        ]\r\n    },\r\n  ];\r\n  currentNodes = [];\r\n\r\n  constructor(\r\n    iconRegistry: MatIconRegistry,\r\n    sanitizer: DomSanitizer,\r\n    private router: Router\r\n  ) {\r\n    iconRegistry.addSvgIcon(\r\n      'github',\r\n      sanitizer.bypassSecurityTrustResourceUrl('assets/github-icon.svg')\r\n    );\r\n    iconRegistry.addSvgIcon(\r\n      'tree-logo',\r\n      sanitizer.bypassSecurityTrustResourceUrl('assets/tree-logo.svg')\r\n    );\r\n\r\n    // TODO: build this nice\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe((event: NavigationEnd) => {\r\n        let newCurrent = [];\r\n        this.nav.forEach(navNode => {\r\n          if (navNode.link && this.router.isActive(this.router.createUrlTree(navNode.link), false)) {\r\n            newCurrent.push({...navNode});\r\n          }\r\n          if (navNode.children) {\r\n            navNode.children.forEach(childNode => {\r\n              if (childNode.link && this.router.isActive(this.router.createUrlTree(childNode.link), false)) {\r\n                newCurrent.push({...childNode});\r\n              }\r\n            });\r\n          }\r\n        });\r\n        if (newCurrent.length >= 2 && newCurrent.find(n => n.title === this.nav[0].title) !== undefined) {\r\n          newCurrent = newCurrent.filter(n => n.title !== this.nav[0].title);\r\n        }\r\n        this.currentNodes = newCurrent;\r\n      });\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { GettingStartedComponent } from './getting-started/getting-started.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CustomElementsModule } from './custom-elements/custom-elements.module';\r\nimport { CodeExampleModule } from './custom-elements/code/code-example.module';\r\nimport { ExamplesModule } from './examples/examples.module';\r\nimport { TreeModule } from 'angular-tree-component';\r\nimport { FundamentalsModule } from './fundamentals/fundamentals.module';\r\nimport { LayoutModule } from './layout/layout.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, GettingStartedComponent],\r\n  imports: [\r\n    SharedModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    AppRoutingModule,\r\n    CustomElementsModule,\r\n    LayoutModule,\r\n    CodeExampleModule,\r\n    ExamplesModule,\r\n    TreeModule,\r\n    FundamentalsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","/* tslint:disable component-selector */\r\nimport { Component, HostBinding, ElementRef, ViewChild, Input, AfterViewInit } from '@angular/core';\r\nimport { CodeComponent } from './code.component';\r\n\r\n/**\r\n * An embeddable code block that displays nicely formatted code.\r\n * Example usage:\r\n *\r\n * ```\r\n * <code-example language=\"ts\" linenums=\"2\" class=\"special\" header=\"Do Stuff\">\r\n * // a code block\r\n * console.log('do stuff');\r\n * </code-example>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'code-example',\r\n  template: `\r\n    <!-- Content projection is used to get the content HTML provided to this component -->\r\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\r\n    <header *ngIf=\"header\">{{header}}</header>\r\n    <aio-code [ngClass]=\"classes\"\r\n              [language]=\"language\"\r\n              [linenums]=\"linenums\"\r\n              [path]=\"path\"\r\n              [region]=\"region\"\r\n              [hideCopy]=\"hidecopy\"\r\n              [header]=\"header\">\r\n    </aio-code>\r\n  `,\r\n})\r\nexport class CodeExampleComponent implements AfterViewInit {\r\n  classes: {};\r\n\r\n  @Input() language: string;\r\n\r\n  @Input() linenums: string;\r\n\r\n  @Input() region: string;\r\n\r\n  @Input()\r\n  set header(header: string) {\r\n    this._header = header;\r\n    this.classes = {\r\n      'headed-code': !!this.header,\r\n      'simple-code': !this.header,\r\n    };\r\n  }\r\n  get header(): string { return this._header; }\r\n  private _header: string;\r\n\r\n  @Input()\r\n  set path(path: string) {\r\n    this._path = path;\r\n    this.isAvoid = this.path.indexOf('.avoid.') !== -1;\r\n  }\r\n  get path(): string { return this._path; }\r\n  private _path = '';\r\n\r\n  @Input()\r\n  set hidecopy(hidecopy: boolean) {\r\n    // Coerce the boolean value.\r\n    this._hidecopy = hidecopy != null && `${hidecopy}` !== 'false';\r\n  }\r\n  get hidecopy(): boolean { return this._hidecopy; }\r\n  private _hidecopy: boolean;\r\n\r\n  @Input('hide-copy')\r\n  set hyphenatedHideCopy(hidecopy: boolean) {\r\n    this.hidecopy = hidecopy;\r\n  }\r\n\r\n  @Input('hideCopy')\r\n  set capitalizedHideCopy(hidecopy: boolean) {\r\n    this.hidecopy = hidecopy;\r\n  }\r\n\r\n  @HostBinding('class.avoidFile') isAvoid = false;\r\n\r\n  @ViewChild('content', { static: true }) content: ElementRef;\r\n\r\n  @ViewChild(CodeComponent, { static: true }) aioCode: CodeComponent;\r\n\r\n  ngAfterViewInit() {\r\n    this.aioCode.code = this.content.nativeElement.innerHTML;\r\n  }\r\n}\r\n","import { NgModule, Type } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CodeExampleComponent } from './code-example.component';\r\nimport { CodeModule } from './code.module';\r\nimport { WithCustomElementComponent } from '../element-registry';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule, CodeModule ],\r\n  declarations: [ CodeExampleComponent ],\r\n  exports: [ CodeExampleComponent ],\r\n  entryComponents: [ CodeExampleComponent ]\r\n})\r\nexport class CodeExampleModule implements WithCustomElementComponent {\r\n  customElementComponent: Type<any> = CodeExampleComponent;\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewChild } from '@angular/core';\r\nimport { PrettyPrinter } from './pretty-printer.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CopierService } from '../../shared/copier.service';\r\nimport { Logger } from '../../shared/logger.service';\r\n\r\n/**\r\n * Formatted Code Block\r\n *\r\n * Pretty renders a code block, used in the docs and API reference by the code-example and\r\n * code-tabs embedded components.\r\n * It includes a \"copy\" button that will send the content to the clipboard when clicked\r\n *\r\n * Example usage:\r\n *\r\n * ```\r\n * <aio-code\r\n *   [language]=\"ts\"\r\n *   [linenums]=\"true\"\r\n *   [path]=\"router/src/app/app.module.ts\"\r\n *   [region]=\"animations-module\">\r\n * </aio-code>\r\n * ```\r\n *\r\n *\r\n * Renders code provided through the `updateCode` method.\r\n */\r\n@Component({\r\n  selector: 'aio-code',\r\n  template: `\r\n    <pre class=\"prettyprint lang-{{language}}\">\r\n      <button *ngIf=\"!hideCopy\" class=\"material-icons copy-button no-print\"\r\n        title=\"Copy code snippet\"\r\n        [attr.aria-label]=\"ariaLabel\"\r\n        (click)=\"doCopy()\">\r\n        <span aria-hidden=\"true\">content_copy</span>\r\n      </button>\r\n      <code class=\"animated fadeIn\" #codeContainer></code>\r\n    </pre>\r\n    `\r\n})\r\nexport class CodeComponent implements OnChanges {\r\n  ariaLabel = '';\r\n\r\n  /** The code to be copied when clicking the copy button, this should not be HTML encoded */\r\n  private codeText: string;\r\n\r\n  /** Code that should be formatted with current inputs and displayed in the view. */\r\n  set code(code: string) {\r\n    this._code = code;\r\n\r\n    if (!this._code || !this._code.trim()) {\r\n      this.showMissingCodeMessage();\r\n    } else {\r\n      this.formatDisplayedCode();\r\n    }\r\n  }\r\n  get code(): string { return this._code; }\r\n  _code: string;\r\n\r\n  /** Whether the copy button should be shown. */\r\n  @Input() hideCopy: boolean;\r\n\r\n  /** Language to render the code (e.g. javascript, dart, typescript). */\r\n  @Input() language: string | undefined;\r\n\r\n  /**\r\n   * Whether to display line numbers:\r\n   *  - If false: hide\r\n   *  - If true: show\r\n   *  - If number: show but start at that number\r\n   */\r\n  @Input() linenums: boolean | number | string | undefined;\r\n\r\n  /** Path to the source of the code. */\r\n  @Input() path: string;\r\n\r\n  /** Region of the source of the code being displayed. */\r\n  @Input() region: string;\r\n\r\n  /** Optional header to be displayed above the code. */\r\n  @Input()\r\n  set header(header: string | undefined) {\r\n    this._header = header;\r\n    this.ariaLabel = this.header ? `Copy code snippet from ${this.header}` : '';\r\n  }\r\n  get header(): string|undefined { return this._header; }\r\n  private _header: string | undefined;\r\n\r\n  @Output() codeFormatted = new EventEmitter<void>();\r\n\r\n  /** The element in the template that will display the formatted code. */\r\n  @ViewChild('codeContainer', { static: true }) codeContainer: ElementRef;\r\n\r\n  constructor(\r\n    private snackbar: MatSnackBar,\r\n    private pretty: PrettyPrinter,\r\n    private copier: CopierService,\r\n    private logger: Logger) {}\r\n\r\n  ngOnChanges() {\r\n    // If some inputs have changed and there is code displayed, update the view with the latest\r\n    // formatted code.\r\n    if (this.code) {\r\n      this.formatDisplayedCode();\r\n    }\r\n  }\r\n\r\n  private formatDisplayedCode() {\r\n    const leftAlignedCode = leftAlign(this.code);\r\n    this.setCodeHtml(leftAlignedCode); // start with unformatted code\r\n    this.codeText = this.getCodeText(); // store the unformatted code as text (for copying)\r\n\r\n    this.pretty\r\n      .formatCode(leftAlignedCode, this.language, this.getLinenums())\r\n      .pipe(tap(() => this.codeFormatted.emit()))\r\n      .subscribe(c => this.setCodeHtml(c), () => { /* ignore failure to format */ }\r\n      );\r\n  }\r\n\r\n  /** Sets the message showing that the code could not be found. */\r\n  private showMissingCodeMessage() {\r\n    const src = this.path ? this.path + (this.region ? '#' + this.region : '') : '';\r\n    const srcMsg = src ? ` for\\n${src}` : '.';\r\n    this.setCodeHtml(`<p class=\"code-missing\">The code sample is missing${srcMsg}</p>`);\r\n  }\r\n\r\n  /** Sets the innerHTML of the code container to the provided code string. */\r\n  private setCodeHtml(formattedCode: string) {\r\n    // **Security:** Code example content is provided by docs authors and as such its considered to\r\n    // be safe for innerHTML purposes.\r\n    this.codeContainer.nativeElement.innerHTML = formattedCode;\r\n  }\r\n\r\n  /** Gets the textContent of the displayed code element. */\r\n  private getCodeText() {\r\n    // `prettify` may remove newlines, e.g. when `linenums` are on. Retrieve the content of the\r\n    // container as text, before prettifying it.\r\n    // We take the textContent because we don't want it to be HTML encoded.\r\n    return this.codeContainer.nativeElement.textContent;\r\n  }\r\n\r\n  /** Copies the code snippet to the user's clipboard. */\r\n  doCopy() {\r\n    const code = this.codeText;\r\n    const successfullyCopied = this.copier.copyText(code);\r\n\r\n    if (successfullyCopied) {\r\n      this.logger.log('Copied code to clipboard:', code);\r\n      this.snackbar.open('Code Copied', '', { duration: 800 });\r\n    } else {\r\n      this.logger.error(new Error(`ERROR copying code to clipboard: \"${code}\"`));\r\n      this.snackbar.open('Copy failed. Please try again!', '', { duration: 800 });\r\n    }\r\n  }\r\n\r\n  /** Gets the calculated value of linenums (boolean/number). */\r\n  getLinenums() {\r\n    const linenums =\r\n      typeof this.linenums === 'boolean' ? this.linenums :\r\n        this.linenums === 'true' ? true :\r\n          this.linenums === 'false' ? false :\r\n            typeof this.linenums === 'string' ? parseInt(this.linenums, 10) :\r\n              this.linenums;\r\n\r\n    return (linenums != null) && !isNaN(linenums as number) && linenums;\r\n  }\r\n}\r\n\r\nfunction leftAlign(text: string): string {\r\n  let indent = Number.MAX_VALUE;\r\n\r\n  const lines = text.split('\\n');\r\n  lines.forEach(line => {\r\n    const lineIndent = line.search(/\\S/);\r\n    if (lineIndent !== -1) {\r\n      indent = Math.min(lineIndent, indent);\r\n    }\r\n  });\r\n\r\n  return lines.map(line => line.substr(indent)).join('\\n').trim();\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CodeComponent } from './code.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { PrettyPrinter } from './pretty-printer.service';\r\nimport { CopierService } from '../../shared/copier.service';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule, MatSnackBarModule ],\r\n  declarations: [ CodeComponent ],\r\n  entryComponents: [ CodeComponent ],\r\n  exports: [ CodeComponent ],\r\n  providers: [ PrettyPrinter, CopierService ]\r\n})\r\nexport class CodeModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { from, Observable } from 'rxjs';\r\nimport { first, map, share } from 'rxjs/operators';\r\nimport { Logger } from '../../shared/logger.service';\r\n\r\ntype PrettyPrintOne = (code: string, language?: string, linenums?: number | boolean) => string;\r\n\r\n/**\r\n * Wrapper around the prettify.js library\r\n */\r\n@Injectable()\r\nexport class PrettyPrinter {\r\n\r\n  private prettyPrintOne: Observable<PrettyPrintOne>;\r\n\r\n  constructor(private logger: Logger) {\r\n    this.prettyPrintOne = from(this.getPrettyPrintOne()).pipe(share());\r\n  }\r\n\r\n  private getPrettyPrintOne(): Promise<PrettyPrintOne> {\r\n    const ppo = (window as any)['prettyPrintOne'];\r\n    return ppo ? Promise.resolve(ppo) :\r\n      // `prettyPrintOne` is not on `window`, which means `prettify.js` has not been loaded yet.\r\n      // Import it; ad a side-effect it will add `prettyPrintOne` on `window`.\r\n      import('../../../assets/js/prettify.js' as any)\r\n        .then(\r\n          () => (window as any)['prettyPrintOne'],\r\n          err => {\r\n            const msg = `Cannot get prettify.js from server: ${err.message}`;\r\n            this.logger.error(new Error(msg));\r\n            // return a pretty print fn that always fails.\r\n            return () => { throw new Error(msg); };\r\n          });\r\n  }\r\n\r\n  /**\r\n   * Format code snippet as HTML\r\n   * @param {string} code - the code snippet to format; should already be HTML encoded\r\n   * @param {string} [language] - The language of the code to render (could be javascript, html, typescript, etc)\r\n   * @param {string|number} [linenums] - Whether to display line numbers:\r\n   *  - false: don't display\r\n   *  - true: do display\r\n   *  - number: do display but start at the given number\r\n   * @returns Observable<string> - Observable of formatted code\r\n   */\r\n  formatCode(code: string, language?: string, linenums?: number | boolean) {\r\n    return this.prettyPrintOne.pipe(\r\n      map(ppo => {\r\n        try {\r\n          return ppo(code, language, linenums);\r\n        } catch (err) {\r\n          const msg = `Could not format code that begins '${code.substr(0, 50)}...'.`;\r\n          console.error(msg, err);\r\n          throw new Error(msg);\r\n        }\r\n      }),\r\n      first(),  // complete immediately\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ROUTES} from '@angular/router';\r\nimport { ElementsLoader } from './elements-loader';\r\nimport {\r\n  ELEMENT_MODULE_LOAD_CALLBACKS,\r\n  ELEMENT_MODULE_LOAD_CALLBACKS_AS_ROUTES,\r\n  ELEMENT_MODULE_LOAD_CALLBACKS_TOKEN\r\n} from './element-registry';\r\nimport { LazyCustomElementComponent } from './lazy-custom-element.component';\r\n\r\n@NgModule({\r\n  declarations: [ LazyCustomElementComponent ],\r\n  exports: [ LazyCustomElementComponent ],\r\n  providers: [\r\n    ElementsLoader,\r\n    { provide: ELEMENT_MODULE_LOAD_CALLBACKS_TOKEN, useValue: ELEMENT_MODULE_LOAD_CALLBACKS },\r\n\r\n    // Providing these routes as a signal to the build system that these modules should be\r\n    // registered as lazy-loadable.\r\n    // TODO(andrewjs): Provide first-class support for providing this.\r\n    // { provide: ROUTES, useValue: ELEMENT_MODULE_LOAD_CALLBACKS_AS_ROUTES, multi: true },\r\n  ],\r\n})\r\nexport class CustomElementsModule { }\r\n","import { InjectionToken, Type } from '@angular/core';\r\nimport { LoadChildrenCallback } from '@angular/router';\r\n\r\n// Modules containing custom elements must be set up as lazy-loaded routes (loadChildren)\r\n// TODO(andrewjs): This is a hack, Angular should have first-class support for preparing a module\r\n// that contains custom elements.\r\nexport const ELEMENT_MODULE_LOAD_CALLBACKS_AS_ROUTES = [\r\n  {\r\n    selector: 'code-example',\r\n    loadChildren: () => import('./code/code-example.module').then(m => m.CodeExampleModule)\r\n  },\r\n  {\r\n    selector: 'code-tabs',\r\n    loadChildren: () => import('./code/code-tabs.module').then(m => m.CodeTabsModule)\r\n  },\r\n];\r\n\r\n/**\r\n * Interface expected to be implemented by all modules that declare a component that can be used as\r\n * a custom element.\r\n */\r\nexport interface WithCustomElementComponent {\r\n  customElementComponent: Type<any>;\r\n}\r\n\r\n/** Injection token to provide the element path modules. */\r\nexport const ELEMENT_MODULE_LOAD_CALLBACKS_TOKEN = new InjectionToken<Map<string, LoadChildrenCallback>>('aio/elements-map');\r\n\r\n/** Map of possible custom element selectors to their lazy-loadable module paths. */\r\nexport const ELEMENT_MODULE_LOAD_CALLBACKS = new Map<string, LoadChildrenCallback>();\r\nELEMENT_MODULE_LOAD_CALLBACKS_AS_ROUTES.forEach(route => {\r\n  ELEMENT_MODULE_LOAD_CALLBACKS.set(route.selector, route.loadChildren);\r\n});\r\n","import {\r\n  Compiler,\r\n  Inject,\r\n  Injectable,\r\n  NgModuleFactory,\r\n  NgModuleRef,\r\n  Type,\r\n} from '@angular/core';\r\nimport { ELEMENT_MODULE_LOAD_CALLBACKS_TOKEN, WithCustomElementComponent } from './element-registry';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { createCustomElement } from '@angular/elements';\r\nimport { LoadChildrenCallback } from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class ElementsLoader {\r\n  /** Map of unregistered custom elements and their respective module paths to load. */\r\n  private elementsToLoad: Map<string, LoadChildrenCallback>;\r\n  /** Map of custom elements that are in the process of being loaded and registered. */\r\n  private elementsLoading = new Map<string, Promise<void>>();\r\n\r\n  constructor(private moduleRef: NgModuleRef<any>,\r\n              @Inject(ELEMENT_MODULE_LOAD_CALLBACKS_TOKEN) elementModulePaths: Map<string, LoadChildrenCallback>,\r\n              private compiler: Compiler) {\r\n    this.elementsToLoad = new Map(elementModulePaths);\r\n  }\r\n\r\n  /**\r\n   * Queries the provided element for any custom elements that have not yet been registered with\r\n   * the browser. Custom elements that are registered will be removed from the list of unregistered\r\n   * elements so that they will not be queried in subsequent calls.\r\n   */\r\n  loadContainedCustomElements(element: HTMLElement): Observable<void> {\r\n    const unregisteredSelectors = Array.from(this.elementsToLoad.keys())\r\n      .filter(s => element.querySelector(s));\r\n\r\n    if (!unregisteredSelectors.length) { return of(undefined); }\r\n\r\n    // Returns observable that completes when all discovered elements have been registered.\r\n    const allRegistered = Promise.all(unregisteredSelectors.map(s => this.loadCustomElement(s)));\r\n    return from(allRegistered.then(() => undefined));\r\n  }\r\n\r\n  /** Loads and registers the custom element defined on the `WithCustomElement` module factory. */\r\n  loadCustomElement(selector: string): Promise<void> {\r\n    if (this.elementsLoading.has(selector)) {\r\n      // The custom element is in the process of being loaded and registered.\r\n      return this.elementsLoading.get(selector)!;\r\n    }\r\n\r\n    if (this.elementsToLoad.has(selector)) {\r\n      // Load and register the custom element (for the first time).\r\n      const modulePathLoader = this.elementsToLoad.get(selector)!;\r\n      const loadedAndRegistered =\r\n        (modulePathLoader() as Promise<NgModuleFactory<WithCustomElementComponent> | Type<WithCustomElementComponent>>)\r\n          .then(elementModuleOrFactory => {\r\n            /**\r\n             * With View Engine, the NgModule factory is created and provided when loaded.\r\n             * With Ivy, only the NgModule class is provided loaded and must be compiled.\r\n             * This uses the same mechanism as the deprecated `SystemJsNgModuleLoader` in\r\n             * in `packages/core/src/linker/system_js_ng_module_factory_loader.ts`\r\n             * to pass on the NgModuleFactory, or compile the NgModule and return its NgModuleFactory.\r\n             */\r\n            if (elementModuleOrFactory instanceof NgModuleFactory) {\r\n              return elementModuleOrFactory;\r\n            } else {\r\n              return this.compiler.compileModuleAsync(elementModuleOrFactory);\r\n            }\r\n          })\r\n          .then(elementModuleFactory => {\r\n            const elementModuleRef = elementModuleFactory.create(this.moduleRef.injector);\r\n            const injector = elementModuleRef.injector;\r\n            const CustomElementComponent = elementModuleRef.instance.customElementComponent;\r\n            const CustomElement = createCustomElement(CustomElementComponent, {injector});\r\n\r\n            customElements!.define(selector, CustomElement);\r\n            return customElements.whenDefined(selector);\r\n          })\r\n          .then(() => {\r\n            // The custom element has been successfully loaded and registered.\r\n            // Remove from `elementsLoading` and `elementsToLoad`.\r\n            this.elementsLoading.delete(selector);\r\n            this.elementsToLoad.delete(selector);\r\n          })\r\n          .catch(err => {\r\n            // The custom element has failed to load and register.\r\n            // Remove from `elementsLoading`.\r\n            // (Do not remove from `elementsToLoad` in case it was a temporary error.)\r\n            this.elementsLoading.delete(selector);\r\n            return Promise.reject(err);\r\n          });\r\n\r\n      this.elementsLoading.set(selector, loadedAndRegistered);\r\n      return loadedAndRegistered;\r\n    }\r\n\r\n    // The custom element has already been loaded and registered.\r\n    return Promise.resolve();\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { ElementsLoader } from './elements-loader';\r\nimport { Logger } from '../shared/logger.service';\r\n\r\n@Component({\r\n  selector: 'aio-lazy-ce',\r\n  template: '',\r\n})\r\nexport class LazyCustomElementComponent implements OnInit {\r\n  @Input() selector = '';\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private elementsLoader: ElementsLoader,\r\n    private logger: Logger,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (!this.selector || /[^\\w-]/.test(this.selector)) {\r\n      this.logger.error(new Error(`Invalid selector for 'aio-lazy-ce': ${this.selector}`));\r\n      return;\r\n    }\r\n\r\n    this.elementRef.nativeElement.innerHTML = `<${this.selector}></${this.selector}>`;\r\n    this.elementsLoader.loadCustomElement(this.selector);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2V4YW1wbGVzL2Jhc2ljLXVzYWdlL2Jhc2ljLXVzYWdlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-basic-usage',\r\n  templateUrl: './basic-usage.component.html',\r\n  styleUrls: ['./basic-usage.component.scss']\r\n})\r\nexport class BasicUsageComponent implements OnInit {\r\n\r\n  nodes = [\r\n    {\r\n      name: 'root1',\r\n      children: [\r\n        { name: 'child1' },\r\n        { name: 'child2' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'root2',\r\n      children: [\r\n        { name: 'child2.1', children: [] },\r\n        { name: 'child2.2', children: [\r\n            {name: 'grandchild2.2.1'}\r\n          ] }\r\n      ]\r\n    },\r\n    { name: 'root3' },\r\n    { name: 'root4', children: [] },\r\n    { name: 'root5', children: null }\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BasicUsageComponent } from './basic-usage/basic-usage.component';\r\nimport { TreeModule } from 'angular-tree-component';\r\n\r\n@NgModule({\r\n  declarations: [BasicUsageComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TreeModule\r\n  ]\r\n})\r\nexport class ExamplesModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9hY3Rpb25zL2FjdGlvbnMtZGVtby9hY3Rpb25zLWRlbW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component } from '@angular/core';\r\nimport { IActionMapping, ITreeOptions, KEYS, TREE_ACTIONS } from 'angular-tree-component';\r\n\r\n@Component({\r\n  selector: 'app-actions-demo',\r\n  templateUrl: './actions-demo.component.html',\r\n  styleUrls: ['./actions-demo.component.scss']\r\n})\r\nexport class ActionsDemoComponent {\r\n\r\n  nodes = [\r\n    {\r\n      name: 'root1',\r\n      children: [\r\n        {\r\n          name: 'child1'\r\n        }, {\r\n          name: 'child2'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'root2',\r\n      children: [\r\n        {\r\n          name: 'child2.1'\r\n        }, {\r\n          name: 'child2.2',\r\n          children: [\r\n            {\r\n              id: 1001,\r\n              name: 'subsub'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  actionMapping: IActionMapping = {\r\n    mouse: {\r\n      contextMenu: (tree, node, $event) => {\r\n        $event.preventDefault();\r\n        alert(`context menu for ${node.data.name}`);\r\n      },\r\n      dblClick: (tree, node, $event) => {\r\n        if (node.hasChildren) {\r\n          TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\r\n        }\r\n      },\r\n      click: (tree, node, $event) => {\r\n        $event.shiftKey\r\n          ? TREE_ACTIONS.TOGGLE_ACTIVE_MULTI(tree, node, $event)\r\n          : TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\r\n      },\r\n      mouseOver: (tree, node, $event) => {\r\n        $event.preventDefault();\r\n        console.log(`mouseOver ${node.data.name}`);\r\n      },\r\n      mouseOut: (tree, node, $event) => {\r\n        $event.preventDefault();\r\n        console.log(`mouseOut ${node.data.name}`);\r\n      }\r\n    },\r\n    keys: {\r\n      [KEYS.ENTER]: (tree, node, $event) => alert(`This is ${node.data.name}`)\r\n    }\r\n  };\r\n\r\n  options: ITreeOptions = {\r\n    actionMapping: this.actionMapping\r\n  };\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9hY3Rpb25zL2FjdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-actions',\r\n  templateUrl: './actions.component.html',\r\n  styleUrls: ['./actions.component.scss']\r\n})\r\nexport class ActionsComponent {\r\n\r\n  actionMapping = `\r\nimport { TREE_ACTIONS, KEYS, IActionMapping } from 'angular-tree-component';\r\n\r\nconst actionMapping: IActionMapping = {\r\n  mouse: {\r\n    click: TREE_ACTIONS.TOGGLE_SELECTED_MULTI\r\n  },\r\n  keys: {\r\n    [KEYS.ENTER]: (tree, node, $event) => alert(\\`This is \\${node.data.name\\}\\`)\r\n  }\r\n}\r\n`;\r\n\r\n  mouseActions = `\r\nimport { TREE_ACTIONS, IActionMapping } from 'angular-tree-component';\r\n\r\nactionMapping: IActionMapping = {\r\n  mouse: {\r\n    dblClick: (tree, node, $event) => // Open a modal with node content,\r\n    click: TREE_ACTIONS.TOGGLE_SELECTED_MULTI,\r\n  }\r\n}\r\n`;\r\n\r\n  keys = `\r\nKEYS = {\r\n  LEFT: 37,\r\n  UP: 38,\r\n  RIGHT: 39,\r\n  DOWN: 40,\r\n  ENTER: 13,\r\n  SPACE: 32\r\n}\r\n`;\r\n\r\n  keysExample = `\r\nimport { TREE_ACTIONS, KEYS, IActionMapping } from 'angular-tree-component';\r\n\r\nactionMapping:IActionMapping = {\r\n  keys: {\r\n    127: (tree, node, $event) => // do something to delete the node,\r\n    [KEYS.ENTER]: TREE_ACTIONS.EXPAND\r\n  }\r\n}\r\n`;\r\n\r\n  defaultMapping = `\r\nconst defaultActionMapping: IActionMapping = {\r\n  mouse: {\r\n    click: TREE_ACTIONS.TOGGLE_ACTIVE,\r\n    dblClick: null,\r\n    contextMenu: null,\r\n    expanderClick: TREE_ACTIONS.TOGGLE_EXPANDED,\r\n    checkboxClick: TREE_ACTIONS.TOGGLE_SELECTED,\r\n    drop: TREE_ACTIONS.MOVE_NODE\r\n  },\r\n  keys: {\r\n    [KEYS.RIGHT]: TREE_ACTIONS.DRILL_DOWN,\r\n    [KEYS.LEFT]: TREE_ACTIONS.DRILL_UP,\r\n    [KEYS.DOWN]: TREE_ACTIONS.NEXT_NODE,\r\n    [KEYS.UP]: TREE_ACTIONS.PREVIOUS_NODE,\r\n    [KEYS.SPACE]: TREE_ACTIONS.TOGGLE_ACTIVE,\r\n    [KEYS.ENTER]: TREE_ACTIONS.TOGGLE_ACTIVE\r\n  }\r\n};\r\n`;\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9hcGkvYXBpLWRlbW8vYXBpLWRlbW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component } from '@angular/core';\r\nimport { ITreeOptions } from 'angular-tree-component';\r\n\r\n@Component({\r\n  selector: 'app-api-demo',\r\n  templateUrl: './api-demo.component.html',\r\n  styleUrls: ['./api-demo.component.scss']\r\n})\r\nexport class ApiDemoComponent {\r\n\r\n  options: ITreeOptions = {\r\n\r\n  };\r\n  nodes = [\r\n    {\r\n      name: 'root1',\r\n      children: [\r\n        {\r\n          name: 'child1'\r\n        }, {\r\n          name: 'child2'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'root2',\r\n      children: [\r\n        {\r\n          name: 'child2.1'\r\n        }, {\r\n          name: 'child2.2',\r\n          children: [\r\n            {\r\n              id: 1001,\r\n              name: 'subsub'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  addNode(tree: any) {\r\n    this.nodes[0].children.push({\r\n      name: 'a new child'\r\n    });\r\n    tree.treeModel.update();\r\n  }\r\n\r\n  activateSubSub(tree: any) {\r\n    // tree.treeModel.getNodeBy((node) => node.data.name === 'subsub')\r\n    tree.treeModel.getNodeById(1001)\r\n      .setActiveAndVisible();\r\n  }\r\n\r\n  activeNodes(treeModel: any) {\r\n    console.log(treeModel.activeNodes);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9hcGkvYXBpLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-api',\r\n  templateUrl: './api.component.html',\r\n  styleUrls: ['./api.component.scss']\r\n})\r\nexport class ApiComponent {\r\n  html = `\r\n<tree-root #tree [nodes]=\"nodes\"></tree-root>\r\n\r\n<button (click)=\"tree.treeModel.focusNextNode()\">next node</button>\r\n<button (click)=\"tree.treeModel.focusPreviousNode()\">previous node</button>\r\n<button (click)=\"tree.treeModel.focusDrillDown()\">drill down</button>\r\n<button (click)=\"tree.treeModel.focusDrillUp()\">drill up</button>\r\n`;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9ldmVudHMvZXZlbnRzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.scss']\r\n})\r\nexport class EventsComponent {\r\n  event = `\r\n<tree-root [nodes]=\"nodes\"\r\n    (toggleExpanded)=\"onEvent($event)\"\r\n    (activate)=\"onEvent($event)\"\r\n    (focus)=\"onEvent($event)\"\r\n    (blur)=\"onEvent($event)\">\r\n</tree-root>\r\n\r\nonEvent = ($event) => console.log($event);\r\n`;\r\n\r\n  toggleExpanded = `\r\n{\r\n  eventName: string;\r\n  node: ITreeNode;\r\n  isActive: boolean;\r\n}\r\n`;\r\n\r\n  basicEvent = `\r\n{\r\n  eventName: string;\r\n  node: ITreeNode;\r\n}\r\n`;\r\n\r\n  eventName = `\r\n{\r\n  eventName: string;\r\n}\r\n`;\r\n\r\n  move = `\r\n{\r\n  eventName: string;\r\n  node: ITreeNode; // The node that was moved\r\n  to: {\r\n    parent: ITreeNode; // The parent node that contains the moved node\r\n    index: number; // Index in the parent where the node was moved\r\n  }\r\n}\r\n`;\r\n\r\n  copy = `\r\n{\r\n  eventName: string;\r\n  node: ITreeNode; // The node that was copied\r\n  to: {\r\n    parent: ITreeNode; // The parent node that contains the copied node\r\n    index: number; // Index in the parent where the node was copied\r\n  }\r\n}\r\n`;\r\n\r\n  baseEvent = `\r\n{\r\n  eventName: string;\r\n  ...rest: corresponding to the original event\r\n}`;\r\n\r\n  // TODO: add stateChange\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9mb2N1cy9mb2N1cy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-focus',\r\n  templateUrl: './focus.component.html',\r\n  styleUrls: ['./focus.component.scss']\r\n})\r\nexport class FocusComponent {\r\n  focus = `<tree-root [nodes]=\"nodes\" [focused]=\"true\" [options]=\"options\"></tree-root>`;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NodesComponent } from './nodes/nodes.component';\r\nimport { CodeExampleModule } from '../custom-elements/code/code-example.module';\r\nimport { OptionsComponent } from './options/options.component';\r\nimport { ActionsComponent } from './actions/actions.component';\r\nimport { TemplatesComponent } from './templates/templates.component';\r\nimport { ActionsDemoComponent } from './actions/actions-demo/actions-demo.component';\r\nimport { TreeModule } from 'angular-tree-component';\r\nimport { TemplatesDemoComponent } from './templates/templates-demo/templates-demo.component';\r\nimport { EventsComponent } from './events/events.component';\r\nimport { StateBindingComponent } from './state-binding/state-binding.component';\r\nimport { StateBindingDemoComponent } from './state-binding/state-binding-demo/state-binding-demo.component';\r\nimport { ApiComponent } from './api/api.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ApiDemoComponent } from './api/api-demo/api-demo.component';\r\nimport { StylingComponent } from './styling/styling.component';\r\nimport { FocusComponent } from './focus/focus.component';\r\nimport { IssuesComponent } from './issues/issues.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NodesComponent,\r\n    OptionsComponent,\r\n    ActionsComponent,\r\n    TemplatesComponent,\r\n    ActionsDemoComponent,\r\n    TemplatesDemoComponent,\r\n    EventsComponent,\r\n    StateBindingComponent,\r\n    StateBindingDemoComponent,\r\n    ApiComponent,\r\n    ApiDemoComponent,\r\n    StylingComponent,\r\n    FocusComponent,\r\n    IssuesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CodeExampleModule,\r\n    TreeModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class FundamentalsModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9pc3N1ZXMvaXNzdWVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-issues',\r\n  templateUrl: './issues.component.html',\r\n  styleUrls: ['./issues.component.scss']\r\n})\r\nexport class IssuesComponent {\r\n  // TODO: add drag/drop\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9ub2Rlcy9ub2Rlcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nodes',\r\n  templateUrl: './nodes.component.html',\r\n  styleUrls: ['./nodes.component.scss']\r\n})\r\nexport class NodesComponent implements OnInit {\r\n\r\n  nodes = `[\r\n  {\r\n    id: 1,\r\n    name: 'root1',\r\n    children: [\r\n      { id: 2, name: 'child1' },\r\n      { id: 3, name: 'child2' }\r\n    ]\r\n  }\r\n]`;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9vcHRpb25zL29wdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-options',\r\n  templateUrl: './options.component.html',\r\n  styleUrls: ['./options.component.scss']\r\n})\r\nexport class OptionsComponent implements OnInit {\r\n\r\n  options = `\r\nimport { TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from '@circlon/angular-tree-component';\r\n\r\nclass MyComponent {\r\n  ...\r\n  options: ITreeOptions = {\r\n    displayField: 'nodeName',\r\n    isExpandedField: 'expanded',\r\n    idField: 'uuid',\r\n    hasChildrenField: 'nodes',\r\n    actionMapping: {\r\n      mouse: {\r\n        dblClick: (tree, node, $event) => {\r\n          if (node.hasChildren) TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\r\n        }\r\n      },\r\n      keys: {\r\n        [KEYS.ENTER]: (tree, node, $event) => {\r\n          node.expandAll();\r\n        }\r\n      }\r\n    },\r\n    nodeHeight: 23,\r\n    allowDrag: (node) => {\r\n      return true;\r\n    },\r\n    allowDrop: (node) => {\r\n      return true;\r\n    },\r\n    allowDragoverStyling: true,\r\n    levelPadding: 10,\r\n    useVirtualScroll: true,\r\n    animateExpand: true,\r\n    scrollOnActivate: true,\r\n    animateSpeed: 30,\r\n    animateAcceleration: 1.2,\r\n    scrollContainer: document.documentElement // HTML\r\n  }\r\n}\r\n`;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9zdGF0ZS1iaW5kaW5nL3N0YXRlLWJpbmRpbmctZGVtby9zdGF0ZS1iaW5kaW5nLWRlbW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ITreeState } from 'angular-tree-component';\r\n\r\n@Component({\r\n  selector: 'app-state-binding-demo',\r\n  templateUrl: './state-binding-demo.component.html',\r\n  styleUrls: ['./state-binding-demo.component.scss']\r\n})\r\nexport class StateBindingDemoComponent {\r\n\r\n  get state(): ITreeState {\r\n    return localStorage.treeState && JSON.parse(localStorage.treeState);\r\n  }\r\n  set state(state: ITreeState) {\r\n    localStorage.treeState = JSON.stringify(state);\r\n  }\r\n\r\n  options = {\r\n    getChildren: () => new Promise((resolve) => {\r\n      setTimeout(() => resolve([\r\n        { id: 5, name: 'child2.1', children: [] },\r\n        { id: 6, name: 'child2.2', children: [\r\n            { id: 7, name: 'grandchild2.2.1' }\r\n          ] }\r\n      ]), 2000);\r\n    })\r\n  };\r\n\r\n  nodes = [\r\n    {\r\n      id: 1,\r\n      name: 'root1',\r\n      children: [\r\n        { id: 2, name: 'child1' },\r\n        { id: 3, name: 'child2' }\r\n      ]\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'root2',\r\n      hasChildren: true\r\n    }\r\n  ];\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9zdGF0ZS1iaW5kaW5nL3N0YXRlLWJpbmRpbmcuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-state-binding',\r\n  templateUrl: './state-binding.component.html',\r\n  styleUrls: ['./state-binding.component.scss']\r\n})\r\nexport class StateBindingComponent {\r\n  example = `\r\nimport \\{ Component \\} from \\'@angular/core\\';\r\nimport \\{ ITreeState \\} from \\'angular-tree-component\\';\r\n\r\n@Component(\\{\r\n  selector: \\'app-saverestore\\',\r\n  template: \\`\r\n    <tree-root [(state)]=\"state\" [nodes]=\"nodes\"></tree-root>\r\n    <button (click)=\"collapseAll()\">collapse all</button>\r\n    <button (click)=\"hideFolders()\">hide folders</button>\r\n  \\`,\r\n  styles: []\r\n\\})\r\nexport class MyComponent \\{\r\n  state: ITreeState;\r\n  nodes = [\r\n    { id: 1, isFolder: true, name: 'folder1', children: [\r\n      { id: 2, name: 'file1', isFolder: false },\r\n      { id: 3, name: 'file2', isFolder: false }\r\n    ] },\r\n    { id: 4, isFolder: false, name: 'flatfile1' },\r\n    { id: 5, isFolder: false, name: 'flatfile2' }\r\n  ];\r\n\r\n  collapseAll() {\r\n    this.state = {\r\n      ...this.state,\r\n      expandedNodeIds: {}\r\n    };\r\n  }\r\n\r\n  hideFolders() {\r\n    const hiddenNodeIds = {};\r\n\r\n    this.nodes.forEach((node) => {\r\n      if (node.isFolder) {\r\n        hiddenNodeIds[node.id] = true;\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      ...this.state,\r\n      hiddenNodeIds\r\n    };\r\n  }\r\n}\r\n`;\r\n\r\n  localStorage = `\r\n<tree-root\r\n  [(state)]=\"state\"\r\n  [nodes]=\"nodes\">\r\n</tree-root>\r\n\r\nclass MyComponent {\r\n  get state() {\r\n    return localStorage.treeState && JSON.parse(localStorage.treeState);\r\n  }\r\n  set state(state) {\r\n    localStorage.treeState = JSON.stringify(state);\r\n  }\r\n}\r\n`;\r\n\r\n  api = `\r\n<tree-root\r\n  #tree\r\n  (initialize)=\"onInit(tree)\"\r\n  [nodes]=\"nodes\">\r\n</tree-root>\r\n\r\nclass MyComponent {\r\n  onInit(tree) {\r\n    if (localStorage.treeState) {\r\n      tree.treeModel.setState(JSON.parse(localStorage.treeState);\r\n    }\r\n    tree.treeModel.subscribe((state) => {\r\n      localStorage.treeState = JSON.stringify(state);\r\n    });\r\n  }\r\n}\r\n`;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy9zdHlsaW5nL3N0eWxpbmcuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-styling',\r\n  templateUrl: './styling.component.html',\r\n  styleUrls: ['./styling.component.scss']\r\n})\r\nexport class StylingComponent {\r\n\r\n  branchLines = `\r\n.node-content-wrapper, .tree-children {\r\n  position: relative;\r\n}\r\n\r\n.node-content-wrapper::before, .tree-children::after {\r\n  content: \"\";\r\n  position: absolute;\r\n}\r\n\r\n.node-content-wrapper::before {\r\n  border-bottom: 1px solid lightgrey;\r\n  border-left: 1px solid lightgrey;\r\n  height: 28px;\r\n  top: -17px;\r\n  width: 20px;\r\n  left: -28px;\r\n}\r\n\r\n.tree-node-level-1 > tree-node-wrapper > .node-wrapper > .node-content-wrapper::before {\r\n  display: none;\r\n}\r\n\r\n.tree-node-leaf > .node-wrapper > .node-content-wrapper::before {\r\n  width: 25px;\r\n}\r\n\r\n.tree-children::after {\r\n  border-left: 1px solid lightgrey;\r\n  height: 100%;\r\n  top: -15px;\r\n  left: -15px;\r\n}\r\n\r\ntree-node:last-child > .tree-node > .tree-children::after {\r\n  border-left: none;\r\n}\r\n\r\n.toggle-children {\r\n  z-index: 1;\r\n}\r\n`;\r\n\r\n  pullRight = `\r\n.tree {\r\n  width: 300px;\r\n}\r\n\r\n.node-content-wrapper {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: baseline;\r\n}\r\n\r\n.node-content-wrapper {\r\n  flex-grow: 1;\r\n  position: relative;\r\n}\r\n\r\n.pull-right {\r\n  position: absolute;\r\n  right: 10px;\r\n}\r\n`;\r\n\r\n  ace = `\r\ndiv.tree div.tree-children::before,\r\ndiv.tree::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    border-left: 1px dotted #23527c;\r\n    height: 100%;\r\n    top: -14px;\r\n    left: 12px\r\n}\r\n\r\ndiv.tree {\r\n    padding-left: 0;\r\n    margin-left: -5px\r\n}\r\n\r\ndiv.tree div.tree-children {\r\n    position: relative;\r\n    padding-left: 0;\r\n    margin-left: 16px\r\n}\r\n\r\ndiv.tree div.tree-children::before {\r\n    left: 5px\r\n}\r\n\r\ndiv.tree tree-node>div>.node-wrapper {\r\n    margin-left: 24px\r\n}\r\n\r\ndiv.tree tree-node>div>.node-wrapper>.node-content-wrapper {\r\n    margin-left: 4px\r\n}\r\n\r\ndiv.tree tree-node>div.tree-node-leaf>.node-wrapper {\r\n    margin-left: 0\r\n}\r\n\r\ndiv.tree tree-node>div::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    border-bottom: 1px dotted #23527c;\r\n    width: 7px;\r\n    margin-top: 12px;\r\n    left: 7px\r\n}\r\n\r\ndiv.tree tree-node>div .toggle-children-wrapper {\r\n    width: 13px;\r\n    height: 13px;\r\n    border: 1px solid #23527c;\r\n    position: absolute;\r\n    left: 15px;\r\n    margin-top: 5px;\r\n    margin-left: 0;\r\n    display: inline-block;\r\n    background-color: #fff;\r\n    z-index: 1\r\n}\r\n\r\ndiv.tree tree-node>div .toggle-children-wrapper::before {\r\n    content: \"\";\r\n    display: inline-block;\r\n    width: 7px;\r\n    border-top: 1px solid #23527c;\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 2px\r\n}\r\n\r\ndiv.tree tree-node>div .toggle-children-wrapper.toggle-children-wrapper-collapsed::after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    height: 7px;\r\n    border-left: 1px solid #23527c;\r\n    position: absolute;\r\n    top: 2px;\r\n    left: 5px\r\n}\r\n\r\ndiv.tree tree-node>div .toggle-children-wrapper .toggle-children {\r\n    display: none\r\n}\r\n\r\ndiv.tree tree-node>div .node-content-wrapper {\r\n    margin-left: 4px\r\n}\r\n\r\ndiv.tree>tree-node>div::before {\r\n    left: 14px\r\n}\r\n\r\ndiv.tree>tree-node>div>.node-wrapper>tree-node-expander>.toggle-children-wrapper {\r\n    left: 22px\r\n}\r\n`;\r\n\r\n}\r\n","export default \".root1Class {\\n  color: blue;\\n}\\n\\n.root2Class {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2RvY3MtYXBwL3NyYy9hcHAvZnVuZGFtZW50YWxzL3RlbXBsYXRlcy90ZW1wbGF0ZXMtZGVtby90ZW1wbGF0ZXMtZGVtby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7QUFDRiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy90ZW1wbGF0ZXMvdGVtcGxhdGVzLWRlbW8vdGVtcGxhdGVzLWRlbW8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm9vdDFDbGFzcyB7XHJcbiAgY29sb3I6IGJsdWU7XHJcbn1cclxuXHJcbi5yb290MkNsYXNzIHtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcbiJdfQ== */\";","import { Component } from '@angular/core';\r\nimport { ITreeOptions } from 'angular-tree-component';\r\n\r\n@Component({\r\n  selector: 'app-templates-demo',\r\n  templateUrl: './templates-demo.component.html',\r\n  styleUrls: ['./templates-demo.component.scss']\r\n})\r\nexport class TemplatesDemoComponent {\r\n\r\n  nodes1 = [\r\n    {\r\n      title: 'root1',\r\n      className: 'root1Class'\r\n    },\r\n    {\r\n      title: 'root2',\r\n      className: 'root2Class',\r\n      hasChildren: true\r\n    }\r\n  ];\r\n\r\n  nodes2 = [\r\n    {\r\n      title: 'root1',\r\n      className: 'root1Class'\r\n    },\r\n    {\r\n      title: 'root2',\r\n      className: 'root2Class',\r\n      children: [\r\n        { title: 'child1', className: 'child1Class' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  options1: ITreeOptions = {\r\n    getChildren: () => new Promise((resolve, reject) => { })\r\n  };\r\n\r\n  options0: ITreeOptions = {\r\n    displayField: 'title',\r\n    nodeClass: (node) => `${node.data.title}Class`\r\n  };\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2Z1bmRhbWVudGFscy90ZW1wbGF0ZXMvdGVtcGxhdGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-templates',\r\n  templateUrl: './templates.component.html',\r\n  styleUrls: ['./templates.component.scss']\r\n})\r\nexport class TemplatesComponent {\r\n  template = `\r\n<tree-root [nodes]=\"nodes\">\r\n  <ng-template #treeNodeTemplate let-node let-index=\"index\">\r\n    <span>{{ node.data.name }}</span>\r\n    <button (click)=\"go($event)\">Custom Action</button>\r\n  </ng-template>\r\n</tree-root>\r\n`;\r\n\r\n  treeNodeWrapper = `\r\n<tree-root [nodes]=\"nodes\">\r\n  <ng-template #treeNodeWrapperTemplate let-node let-index=\"index\">\r\n    <div class=\"node-wrapper\" [style.padding-left]=\"node.getNodePadding()\">\r\n      <tree-node-expander [node]=\"node\"></tree-node-expander>\r\n      <div class=\"node-content-wrapper\"\r\n        [class.node-content-wrapper-active]=\"node.isActive\"\r\n        [class.node-content-wrapper-focused]=\"node.isFocused\"\r\n        (click)=\"node.mouseAction('click', $event)\"\r\n        (dblclick)=\"node.mouseAction('dblClick', $event)\"\r\n        (contextmenu)=\"node.mouseAction('contextMenu', $event)\"\r\n        (treeDrop)=\"node.onDrop($event)\"\r\n        [treeAllowDrop]=\"node.allowDrop\"\r\n        [treeDrag]=\"node\"\r\n        [treeDragEnabled]=\"node.allowDrag()\">\r\n\r\n        <tree-node-content [node]=\"node\" [index]=\"index\"></tree-node-content>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</tree-root>\r\n`;\r\n\r\n  treeLoading = `\r\n<tree-root [nodes]=\"nodes\">\r\n  <template #loadingTemplate>Loading, please hold....</template>\r\n</tree-root>\r\n`;\r\n\r\n  fullTemplate = `\r\n<ng-template #treeNodeFullTemplate\r\n          let-node\r\n          let-index=\"index\"\r\n          let-templates=\"templates\">\r\n  <div\r\n    [class]=\"node.getClass()\"\r\n    [class.tree-node]=\"true\"\r\n    [class.tree-node-expanded]=\"node.isExpanded && node.hasChildren\"\r\n    [class.tree-node-collapsed]=\"node.isCollapsed && node.hasChildren\"\r\n    [class.tree-node-leaf]=\"node.isLeaf\"\r\n    [class.tree-node-active]=\"node.isActive\"\r\n    [class.tree-node-focused]=\"node.isFocused\">\r\n\r\n    <tree-node-drop-slot\r\n                         *ngIf=\"index === 0\"\r\n                         [dropIndex]=\"node.index\"\r\n                         [node]=\"node.parent\">\r\n    </tree-node-drop-slot>\r\n\r\n    <tree-node-wrapper [node]=\"node\" [index]=\"index\" [templates]=\"templates\">\r\n    </tree-node-wrapper>\r\n\r\n    <tree-node-children [node]=\"node\" [templates]=\"templates\">\r\n    </tree-node-children>\r\n    <tree-node-drop-slot [dropIndex]=\"node.index + 1\" [node]=\"node.parent\">\r\n    </tree-node-drop-slot>\r\n  </div>\r\n</ng-template>\r\n`;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9kb2NzLWFwcC9zcmMvYXBwL2dldHRpbmctc3RhcnRlZC9nZXR0aW5nLXN0YXJ0ZWQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-getting-started',\r\n  templateUrl: './getting-started.component.html',\r\n  styleUrls: ['./getting-started.component.scss']\r\n})\r\nexport class GettingStartedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \":host {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  margin: 0 0 40px;\\n}\\n:host > * {\\n  color: #fff;\\n}\\n.footer-blocks {\\n  display: flex;\\n  justify-content: center;\\n  text-align: left;\\n  margin: 0 0 40px;\\n}\\n.footer-block {\\n  margin: 0 24px;\\n  vertical-align: top;\\n}\\na {\\n  color: #fff;\\n}\\nh3 {\\n  color: #fff;\\n  text-transform: uppercase;\\n}\\nul {\\n  margin: 0;\\n  padding: 0;\\n}\\nul li {\\n  list-style-type: none;\\n  padding: 4px 0;\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2RvY3MtYXBwL3NyYy9hcHAvbGF5b3V0L2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7QUFDRjtBQUNFO0VBQ0UsV0FBQTtBQUNKO0FBR0E7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBQUY7QUFHQTtFQUNFLGNBQUE7RUFDQSxtQkFBQTtBQUFGO0FBR0E7RUFDRSxXQUFBO0FBQUY7QUFHQTtFQUNFLFdBQUE7RUFDQSx5QkFBQTtBQUFGO0FBR0E7RUFDRSxTQUFBO0VBQ0EsVUFBQTtBQUFGO0FBRUU7RUFDRSxxQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQUFKIiwiZmlsZSI6InByb2plY3RzL2RvY3MtYXBwL3NyYy9hcHAvbGF5b3V0L2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgbWFyZ2luOiAwIDAgNDBweDtcclxuXHJcbiAgPioge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgfVxyXG59XHJcblxyXG4uZm9vdGVyLWJsb2NrcyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIG1hcmdpbjogMCAwIDQwcHg7XHJcbn1cclxuXHJcbi5mb290ZXItYmxvY2sge1xyXG4gIG1hcmdpbjogMCAyNHB4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbn1cclxuXHJcbmEge1xyXG4gIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG5oMyB7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxufVxyXG5cclxudWwge1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG5cclxuICBsaSB7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiA0cHggMDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { NavItemComponent } from './nav-item/nav-item.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [FooterComponent, NavItemComponent],\r\n  exports: [\r\n    FooterComponent,\r\n    NavItemComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class LayoutModule { }\r\n","export default \"/************************************\\n             Media queries\\n To use these, put this snippet in the appropriate selector:\\n     @include bp(tiny) {\\n         background-color: purple;\\n     }\\n     Replace \\\"tiny\\\" with \\\"medium\\\" or \\\"big\\\" as necessary.\\n*************************************/\\nhtml {\\n  font-size: 62.5%;\\n}\\nbody {\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue Light\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, \\\"Lucida Grande\\\", sans-serif;\\n  margin: 0;\\n  color: #444444;\\n  font-size: 14px;\\n  font-size: 1.4rem;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\nh1, h2, h3, h4, h5, h6 {\\n  color: #333333;\\n}\\nh1 {\\n  font-size: 24px;\\n  font-size: 2.4rem;\\n  font-weight: 500;\\n  display: inline-block;\\n  margin: 8px 0px;\\n}\\n@media screen and (max-width: 600px) {\\n  h1 {\\n    margin-top: 0;\\n  }\\n}\\nh2 {\\n  font-size: 22px;\\n  font-size: 2.2rem;\\n  font-weight: 500;\\n  margin: 32px 0px 24px;\\n  clear: both;\\n}\\nh3 {\\n  font-size: 20px;\\n  font-size: 2rem;\\n  font-weight: 400;\\n  margin: 24px 0px 12px;\\n  clear: both;\\n}\\nh4 {\\n  font-size: 18px;\\n  font-size: 1.8rem;\\n  font-weight: 400;\\n  margin: 8px 0px;\\n  clear: both;\\n}\\nh5 {\\n  font-size: 16px;\\n  font-size: 1.6rem;\\n  font-weight: 500;\\n  margin: 8px 0px;\\n  clear: both;\\n}\\nh6 {\\n  font-size: 16px;\\n  font-size: 1.6rem;\\n  font-weight: 500;\\n  color: #6E6E6E;\\n  margin: 8px 0px;\\n  clear: both;\\n}\\nh2 a,\\nh3 a,\\nh4 a,\\nh5 a,\\nh6 a {\\n  font-size: inherit;\\n}\\n@media screen and (max-width: 600px) {\\n  h2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n    margin: 8px 0;\\n  }\\n}\\n.mat-tab-body-wrapper h2 {\\n  margin-top: 0;\\n}\\np,\\nol,\\nul,\\nol,\\nli,\\ninput,\\na {\\n  font-size: 14px;\\n  font-size: 1.4rem;\\n  line-height: 24px;\\n  line-height: 2.4rem;\\n  letter-spacing: 0.3px;\\n  letter-spacing: 0.03rem;\\n  font-weight: 400;\\n  color: #444444;\\n}\\np > em,\\nol > em,\\nul > em,\\nol > em,\\nli > em,\\ninput > em,\\na > em {\\n  letter-spacing: 0.3px;\\n  letter-spacing: 0.03rem;\\n}\\np {\\n  margin: 14px 0 0;\\n}\\np + ul {\\n  margin-top: 4px;\\n}\\nol li,\\nol p {\\n  margin: 4px 0;\\n}\\nol ol {\\n  list-style-type: lower-alpha;\\n}\\nol ol ol {\\n  list-style-type: lower-roman;\\n}\\nli {\\n  padding-bottom: 8px;\\n}\\nli p {\\n  margin: 0;\\n}\\na {\\n  text-decoration: none;\\n}\\n.app-toolbar a {\\n  font-size: 16px;\\n  font-size: 1.6rem;\\n  font-weight: 400;\\n  color: #FFFFFF;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue Light\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, \\\"Lucida Grande\\\", sans-serif;\\n  text-transform: uppercase;\\n}\\nstrong {\\n  font-weight: 500;\\n}\\ntable {\\n  border-collapse: collapse;\\n  border-radius: 2px;\\n  border-spacing: 0;\\n  margin: 12px 0 32px;\\n}\\ntable tbody th {\\n  max-width: 100px;\\n  padding: 13px 32px;\\n  text-align: left;\\n}\\ntd {\\n  font-weight: 400;\\n  padding: 8px 30px;\\n  letter-spacing: 0.3px;\\n  letter-spacing: 0.03rem;\\n}\\ntd > p:first-child,\\ntd ul:first-child {\\n  margin-top: 0;\\n}\\ntd > p:last-child,\\ntd ul:last-child {\\n  margin-bottom: 0;\\n}\\nth {\\n  font-size: 16px;\\n  font-size: 1.6rem;\\n  font-weight: 500;\\n  padding: 13px 32px;\\n  text-align: left;\\n}\\ncode {\\n  font-family: \\\"Droid Sans Mono\\\", monospace;\\n  font-size: 90%;\\n  color: #444444;\\n}\\n.sidenav-content a {\\n  color: #1976D2;\\n}\\n.sidenav-content a:hover {\\n  color: #6E6E6E;\\n}\\n:host {\\n  display: block;\\n}\\n.vertical-menu-item {\\n  box-sizing: border-box;\\n  color: #444444;\\n  cursor: pointer;\\n  flex: 1;\\n  display: flex;\\n  flex-wrap: nowrap;\\n  align-items: center;\\n  max-width: 260px;\\n  overflow-wrap: break-word;\\n  padding-top: 4px;\\n  padding-bottom: 4px;\\n  text-decoration: none;\\n  text-align: left;\\n  word-wrap: break-word;\\n}\\n.vertical-menu-item:hover {\\n  background-color: #DBDBDB;\\n  color: #1E88E5;\\n  text-shadow: 0 0 5px #ffffff;\\n}\\n.vertical-menu-item:focus {\\n  outline: #1E88E5 auto 2px;\\n}\\n.vertical-menu-item .node-title {\\n  flex: 1;\\n}\\n.vertical-menu-item .mat-icon {\\n  margin: 4px;\\n}\\n.vertical-menu-item.selected {\\n  color: #1E88E5;\\n}\\nbutton.vertical-menu-item {\\n  border: none;\\n  background-color: transparent;\\n  margin-right: 0;\\n  width: 100%;\\n}\\n.heading-children.expanded {\\n  visibility: visible;\\n  opacity: 1;\\n  max-height: 4000px;\\n  transition: visibility 500ms, opacity 500ms, max-height 500ms;\\n  transition-timing-function: ease-in-out;\\n}\\n.heading-children.collapsed {\\n  visibility: hidden;\\n  opacity: 0;\\n  max-height: 1px;\\n  transition: visibility 275ms, opacity 275ms, max-height 280ms;\\n  transition-timing-function: ease-out;\\n}\\n.level-1 {\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue Light\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, \\\"Lucida Grande\\\", sans-serif;\\n  font-weight: 400;\\n  font-size: 14px;\\n  padding-left: 14px;\\n  transition: background-color 0.2s;\\n}\\n.level-2 {\\n  color: #6E6E6E;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue Light\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, \\\"Lucida Grande\\\", sans-serif;\\n  font-weight: 400;\\n  font-size: 14px;\\n  padding-left: 12px;\\n  text-transform: none;\\n}\\n.level-3 {\\n  color: #6E6E6E;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue Light\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, \\\"Lucida Grande\\\", sans-serif;\\n  font-size: 14px;\\n  padding-left: 10px;\\n}\\n.level-4 {\\n  color: #6E6E6E;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue Light\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, \\\"Lucida Grande\\\", sans-serif;\\n  font-size: 14px;\\n  padding-left: 8px;\\n}\\n.level-1.expanded .mat-icon, .level-2.expanded .mat-icon {\\n  transform: rotate(90deg);\\n  transition: transform 150ms;\\n  transition-timing-function: ease-in-out;\\n}\\n.level-1:not(.expanded) .mat-icon, .level-2:not(.expanded) .mat-icon {\\n  transform: rotate(0deg);\\n  transition: transform 150ms;\\n  transition-timing-function: ease-in-out;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","import { Component, Input, OnChanges } from '@angular/core';\r\nimport { NavigationNode } from '../../navigation/navigation.model';\r\n\r\n@Component({\r\n  selector: 'app-nav-item',\r\n  templateUrl: './nav-item.component.html',\r\n  styleUrls: ['./nav-item.component.scss']\r\n})\r\nexport class NavItemComponent implements OnChanges {\r\n\r\n  @Input() isWide = false;\r\n  @Input() level = 1;\r\n  @Input() node: NavigationNode;\r\n  @Input() isParentExpanded = true;\r\n  @Input() selectedNodes: NavigationNode[] | undefined;\r\n\r\n  isExpanded = false;\r\n  isSelected = false;\r\n  classes: {[index: string]: boolean };\r\n  nodeChildren: NavigationNode[];\r\n\r\n  ngOnChanges() {\r\n    this.nodeChildren = this.node && this.node.children ? this.node.children.filter(n => !n.hidden) : [];\r\n\r\n    if (this.selectedNodes) {\r\n      const ix = this.selectedNodes.find(node => node.title === this.node.title);\r\n      this.isSelected = ix !== undefined; // this node is the selected node or its ancestor\r\n      // TODO: build this nice\r\n      /*\r\n      this.isExpanded = this.isParentExpanded &&\r\n        (this.isSelected || // expand if selected or ...\r\n          // preserve expanded state when display is wide; collapse in mobile.\r\n          (this.isWide && this.isExpanded));\r\n      */\r\n    } else {\r\n      this.isSelected = false;\r\n    }\r\n\r\n    this.setClasses();\r\n  }\r\n\r\n  setClasses() {\r\n    this.classes = {\r\n      ['level-' + this.level]: true,\r\n      collapsed: !this.isExpanded,\r\n      expanded: this.isExpanded,\r\n      selected: this.isSelected\r\n    };\r\n  }\r\n\r\n  headerClicked() {\r\n    this.isExpanded = !this.isExpanded;\r\n    this.setClasses();\r\n  }\r\n\r\n}\r\n","/**\r\n * This class is based on the code in the following projects:\r\n *\r\n * - https://github.com/zenorocha/select\r\n * - https://github.com/zenorocha/clipboard.js/\r\n *\r\n * Both released under MIT license - © Zeno Rocha\r\n *\r\n * It is also influenced by the Angular CDK `PendingCopy` class:\r\n * https://github.com/angular/components/blob/master/src/cdk/clipboard/pending-copy.ts\r\n */\r\n\r\nexport class CopierService {\r\n  /**\r\n   * Copy the contents of a `<textarea>` element to the clipboard.\r\n   *\r\n   * NOTE: For this method to work, the elements must be already inserted into the DOM.\r\n   *\r\n   * @param textArea The area containing the text to be copied to the clipboard.\r\n   * @return Whether the copy operation was successful.\r\n   */\r\n  private copyTextArea(textArea: HTMLTextAreaElement): boolean {\r\n    const currentFocus = document.activeElement as unknown as HTMLOrSVGElement | null;\r\n\r\n    try {\r\n      textArea.select();\r\n      textArea.setSelectionRange(0, textArea.value.length);\r\n\r\n      return document.execCommand('copy');\r\n    } catch {\r\n      return false;\r\n    } finally {\r\n      // Calling `.select()` on the `<textarea>` element may have also focused it.\r\n      // Change the focus back to the previously focused element.\r\n      currentFocus?.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a temporary, hidden `<textarea>` element and set its value to the specified text.\r\n   *\r\n   * @param text The text to be inserted into the textarea.\r\n   * @return The temporary `<textarea>` element containing the specified text.\r\n   */\r\n  private createTextArea(text: string): HTMLTextAreaElement {\r\n    const docElem = document.documentElement!;\r\n    const isRTL = docElem.getAttribute('dir') === 'rtl';\r\n\r\n    // Create a temporary element to hold the contents to copy.\r\n    const textArea = document.createElement('textarea');\r\n    const style = textArea.style;\r\n\r\n    // Prevent zooming on iOS.\r\n    style.fontSize = '12pt';\r\n\r\n    // Reset box model.\r\n    style.border = '0';\r\n    style.padding = '0';\r\n    style.margin = '0';\r\n\r\n    // Make the element invisible and move it out of screen horizontally.\r\n    style.opacity = '0';\r\n    style.position = 'fixed';\r\n    style.top = '0';\r\n    style[isRTL ? 'right' : 'left'] = '-999em';\r\n\r\n    textArea.setAttribute('aria-hidden', 'true');\r\n    textArea.setAttribute('readonly', '');\r\n    textArea.value = text;\r\n\r\n    return textArea;\r\n  }\r\n\r\n  /**\r\n   * Copy the specified text to the clipboard.\r\n   *\r\n   * @param text The text to be copied to the clipboard.\r\n   * @return Whether the copy operation was successful.\r\n   */\r\n  copyText(text: string): boolean {\r\n    // Create a `<textarea>` element with the specified text.\r\n    const textArea = this.createTextArea(text);\r\n\r\n    // Insert it into the DOM.\r\n    document.body.appendChild(textArea);\r\n\r\n    // Copy its contents to the clipboard.\r\n    const success = this.copyTextArea(textArea);\r\n\r\n    // Remove it from the DOM, so it can be garbage-collected.\r\n    if (textArea.parentNode) {\r\n      // We cannot use ChildNode.remove() because of IE11.\r\n      textArea.parentNode.removeChild(textArea);\r\n    }\r\n\r\n    return success;\r\n  }\r\n}\r\n","import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Logger {\r\n\r\n  constructor(private errorHandler: ErrorHandler) {}\r\n\r\n  log(value: any, ...rest: any[]) {\r\n    if (!environment.production) {\r\n      console.log(value, ...rest);\r\n    }\r\n  }\r\n\r\n  error(error: Error) {\r\n    this.errorHandler.handleError(error);\r\n  }\r\n\r\n  warn(value: any, ...rest: any[]) {\r\n    console.warn(value, ...rest);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}